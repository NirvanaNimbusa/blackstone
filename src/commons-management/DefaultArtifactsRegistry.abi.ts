//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultArtifactsRegistry {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<string> {
        let bytecode = "60806040526120dc806100136000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638129fc1c116100665780638129fc1c146101f3578063a8f4481d146101fd578063c4c4a8a1146102c0578063ea4b99bd146103a8578063ed42d86e146103c657610093565b80630a452ad61461009857806330c94145146100dc5780637db978331461018b5780637f692a2a146101a9575b600080fd5b6100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610449565b005b610189600480360360c08110156100f257600080fd5b810190808035906020019064010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184600183028401116401000000008311171561014357600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080606001909192919290803515159060200190929190505050610846565b005b610193611255565b6040518082815260200191505060405180910390f35b6101b1611262565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101fb61128b565b005b61027e6004803603608081101561021357600080fd5b810190808035906020019064010000000081111561023057600080fd5b82018360208201111561024257600080fd5b8035906020019184600183028401116401000000008311171561026457600080fd5b90919293919293908060600190919291929050505061140e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610337600480360360208110156102d657600080fd5b81019080803590602001906401000000008111156102f357600080fd5b82018360208201111561030557600080fd5b8035906020019184600183028401116401000000008311171561032757600080fd5b90919293919293905050506114a6565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600360200280838360005b83811015610394578082015181840152602081019050610379565b505050509050019250505060405180910390f35b6103b06115cf565b6040518082815260200191505060405180910390f35b610447600480360360808110156103dc57600080fd5b81019080803590602001906401000000008111156103f957600080fd5b82018360208201111561040b57600080fd5b8035906020019184600183028401116401000000008311171561042d57600080fd5b9091929391929390806060019091929192905050506115f3565b005b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104bc611bf7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561051d578082015181840152602081019050610502565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b50848103835260218152602001806120876021913960400184810382526026815260200180611fea602691396040019550505050505060006040518083038186803b15801561059857600080fd5b505af41580156105ac573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610602611c34565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610663578082015181840152602081019050610648565b50505050905090810190601f1680156106905780820380516001836020036101000a031916815260200191505b5084810383526023815260200180611f706023913960400184810382526025815260200180612010602591396040019550505050505060006040518083038186803b1580156106de57600080fd5b505af41580156106f2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610843577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b9611bf7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561091a5780820151818401526020810190506108ff565b50505050905090810190601f1680156109475780820380516001836020036101000a031916815260200191505b50848103835260218152602001806120876021913960400184810382526026815260200180611fea602691396040019550505050505060006040518083038186803b15801561099557600080fd5b505af41580156109a9573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000878790501480610a055750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b610a0d611c34565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610a6e578082015181840152602081019050610a53565b50505050905090810190601f168015610a9b5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120356029913960400184810382526032815260200180611ee7603291396040019550505050505060006040518083038186803b158015610ae957600080fd5b505af4158015610afd573d6000803e3d6000fd5b50505050600060018686604051808383808284378083019250505092505050908152602001604051809103902060020160008460405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610c1557508573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610c1d611c71565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610c7e578082015181840152602081019050610c63565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120356029913960400184810382526057815260200180611f93605791396060019550505050505060006040518083038186803b158015610cf957600080fd5b505af4158015610d0d573d6000803e3d6000fd5b5050505060018686604051808383808284378083019250505092505050908152602001604051809103902060000160149054906101000a900460ff16610dd2576002868690918060018154018082558091505090600182039060005260206000200160009091929390919293909192909192509190610d8d929190611d28565b50506001808787604051808383808284378083019250505092505050908152602001604051809103902060000160146101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561124d578360018787604051808383808284378083019250505092505050908152602001604051809103902060020160008560405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018787604051808383808284378083019250505092505050908152602001604051809103902060010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020906003610f28929190611da8565b50811561112457600060018787604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610fe757508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156110b9577ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d27f414e3a2f2f617274696661637473000000000000000000000000000000000000888884600060405180868152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a15b8460018888604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b7f2bcd5e595a4f50e426b161fae964fb84844b5dc1efc2b3799fd6d8924765120f7f414e3a2f2f6172746966616374730000000000000000000000000000000000008787878760006003811061117657fe5b602002013560ff168860016003811061118b57fe5b602002013560ff16896002600381106111a057fe5b602002013560ff168960405180898152602001806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1681526020018560ff1681526020018460ff168152602001831515151581526020018281038252898982818152602001925080828437600081840152601f19601f820116905080830192505050995050505050505050505060405180910390a15b505050505050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060149054906101000a900460ff166112bd611cae565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561131e578082015181840152602081019050611303565b50505050905090810190601f16801561134b5780820380516001836020036101000a031916815260200191505b508481038352602a815260200180611ebd602a913960400184810382526029815260200180611f19602991396040019550505050505060006040518083038186803b15801561139957600080fd5b505af41580156113ad573d6000803e3d6000fd5b50505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff021916908315150217905550565b600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b60006114b0611e45565b60018484604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060018484604051808383808284378083019250505092505050908152602001604051809103902060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003806020026040519081016040528092919082600380156115c1576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161158a5790505b505050505090509250929050565b7f414e3a2f2f61727469666163747300000000000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611666611bf7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156116c75780820151818401526020810190506116ac565b50505050905090810190601f1680156116f45780820380516001836020036101000a031916815260200191505b50848103835260218152602001806120876021913960400184810382526026815260200180611fea602691396040019550505050505060006040518083038186803b15801561174257600080fd5b505af4158015611756573d6000803e3d6000fd5b50505050600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461183d611ceb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561189e578082015181840152602081019050611883565b50505050905090810190601f1680156118cb5780820380516001836020036101000a031916815260200191505b508481038352602981526020018061205e602991396040018481038252602e815260200180611f42602e91396040019550505050505060006040518083038186803b15801561191957600080fd5b505af415801561192d573d6000803e3d6000fd5b50505050600060018585604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156119e957508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611abb577ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d27f414e3a2f2f617274696661637473000000000000000000000000000000000000868684600060405180868152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a15b8160018686604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d27f414e3a2f2f617274696661637473000000000000000000000000000000000000868684600160405180868152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a15050505050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d6957803560ff1916838001178555611d97565b82800160010185558215611d97579182015b82811115611d96578235825591602001919060010190611d7b565b5b509050611da49190611e67565b5090565b826003601f01602090048101928215611e345791602002820160005b83821115611e0557833560ff1683826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611dc4565b8015611e325782816101000a81549060ff0219169055600101602081600001049283019260010302611e05565b505b509050611e419190611e8c565b5090565b6040518060600160405280600390602082028038833980820191505090505090565b611e8991905b80821115611e85576000816000905550600101611e6d565b5090565b90565b611eb991905b80821115611eb557600081816101000a81549060ff021916905550600101611e92565b5090565b9056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a655f6172746966616374496420616e64205f617274696661637441646472657373206d757374206e6f7420626520656d70747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a65645468652073706563696669656420494420616e642076657273696f6e206973206e6f74207265676973746572656453797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970416e2061727469666163742077697468207468652073616d6520494420616e642076657273696f6e2c20627574206120646966666572656e74206164647265737320697320616c72656164792072656769737465726564546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c44656661756c7441727469666163747352656769737472792e7265676973746572417274696661637444656661756c7441727469666163747352656769737472792e73657441637469766556657273696f6e53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158209d238bc5713923e9d31b85b531d53b830102449a2cf2999635fcc5eca65ea9fb64736f6c634300050c0032";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogArtifactActivation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogArtifactActivation", this.address, callback); }
        LogArtifactCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogArtifactCreation", this.address, callback); }
        LogSystemOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogSystemOwnerChanged", this.address, callback); }
        EVENT_ID_ARTIFACTS() {
            const data = Encode(this.client).EVENT_ID_ARTIFACTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ARTIFACTS();
            });
        }
        getArtifact(_artifactId: string) {
            const data = Encode(this.client).getArtifact(_artifactId);
            return Call<Tx, {
                location: string;
                version: [number, number, number];
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifact();
            });
        }
        getArtifactByVersion(_artifactId: string, _version: [number, number, number]) {
            const data = Encode(this.client).getArtifactByVersion(_artifactId, _version);
            return Call<Tx, {
                location: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactByVersion();
            });
        }
        getNumberOfArtifacts() {
            const data = Encode(this.client).getNumberOfArtifacts();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfArtifacts();
            });
        }
        getSystemOwner() {
            const data = Encode(this.client).getSystemOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSystemOwner();
            });
        }
        initialize() {
            const data = Encode(this.client).initialize();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        registerArtifact(_artifactId: string, _artifactAddress: string, _version: [number, number, number], _activeVersion: boolean) {
            const data = Encode(this.client).registerArtifact(_artifactId, _artifactAddress, _version, _activeVersion);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).registerArtifact();
            });
        }
        setActiveVersion(_artifactId: string, _version: [number, number, number]) {
            const data = Encode(this.client).setActiveVersion(_artifactId, _version);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setActiveVersion();
            });
        }
        transferSystemOwnership(_newOwner: string) {
            const data = Encode(this.client).transferSystemOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferSystemOwnership();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        EVENT_ID_ARTIFACTS: () => { return client.encode("EA4B99BD", []); },
        getArtifact: (_artifactId: string) => { return client.encode("C4C4A8A1", ["string"], _artifactId); },
        getArtifactByVersion: (_artifactId: string, _version: [number, number, number]) => { return client.encode("A8F4481D", ["string", "uint8[3]"], _artifactId, _version); },
        getNumberOfArtifacts: () => { return client.encode("7DB97833", []); },
        getSystemOwner: () => { return client.encode("7F692A2A", []); },
        initialize: () => { return client.encode("8129FC1C", []); },
        registerArtifact: (_artifactId: string, _artifactAddress: string, _version: [number, number, number], _activeVersion: boolean) => { return client.encode("30C94145", ["string", "address", "uint8[3]", "bool"], _artifactId, _artifactAddress, _version, _activeVersion); },
        setActiveVersion: (_artifactId: string, _version: [number, number, number]) => { return client.encode("ED42D86E", ["string", "uint8[3]"], _artifactId, _version); },
        transferSystemOwnership: (_newOwner: string) => { return client.encode("0A452AD6", ["address"], _newOwner); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        EVENT_ID_ARTIFACTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getArtifact: (): {
            location: string;
            version: [number, number, number];
        } => {
            const [location, version] = client.decode(data, ["address", "uint8[3]"]);
            return { location: location, version: version };
        },
        getArtifactByVersion: (): {
            location: string;
        } => {
            const [location] = client.decode(data, ["address"]);
            return { location: location };
        },
        getNumberOfArtifacts: (): [number] => { return client.decode(data, ["uint256"]); },
        getSystemOwner: (): [string] => { return client.decode(data, ["address"]); },
        initialize: (): void => { return; },
        registerArtifact: (): void => { return; },
        setActiveVersion: (): void => { return; },
        transferSystemOwnership: (): void => { return; }
    }; };
}