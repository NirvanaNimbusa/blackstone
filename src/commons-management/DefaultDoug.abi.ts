//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultDoug {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string): Promise<string> {
        let bytecode = "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135bf806100616000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063941f25b011610066578063941f25b014610380578063a428e214146103c4578063ecb9aee5146104f8578063f2fde38b14610650578063f67187ac146106945761009e565b80631e59c529146100a35780633e012c901461017857806358cd1dfa1461023b5780638113990e146102ec578063893d20e814610336575b600080fd5b61013a600480360360408110156100b957600080fd5b81019080803590602001906401000000008111156100d657600080fd5b8201836020820111156100e857600080fd5b8035906020019184600183028401116401000000008311171561010a57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061074d565b6040518082600360200280838360005b8381101561016557808201518184015260208101905061014a565b5050505090500191505060405180910390f35b6101f96004803603608081101561018e57600080fd5b81019080803590602001906401000000008111156101ab57600080fd5b8201836020820111156101bd57600080fd5b803590602001918460018302840111640100000000831117156101df57600080fd5b909192939192939080606001909192919290505050610975565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d26004803603604081101561025157600080fd5b810190808035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a7d565b604051808215151515815260200191505060405180910390f35b6102f4610c9f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61033e610cc9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c26004803603602081101561039657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf3565b005b6104de600480360360a08110156103da57600080fd5b81019080803590602001906401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184600183028401116401000000008311171561042b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f82011690508083019250505050505091929192905050506110bc565b604051808215151515815260200191505060405180910390f35b610612600480360360a081101561050e57600080fd5b810190808035906020019064010000000081111561052b57600080fd5b82018360208201111561053d57600080fd5b8035906020019184600183028401116401000000008311171561055f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505061218a565b6040518082600360200280838360005b8381101561063d578082015181840152602081019050610622565b5050505090500191505060405180910390f35b6106926004803603602081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612956565b005b61070b600480360360208110156106aa57600080fd5b81019080803590602001906401000000008111156106c757600080fd5b8201836020820111156106d957600080fd5b803590602001918460018302840111640100000000831117156106fb57600080fd5b9091929391929390505050612dcb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610755613488565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107c9612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561082a57808201518184015260208101905061080f565b50505050905090810190601f1680156108575780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b1580156108df57600080fd5b505af41580156108f3573d6000803e3d6000fd5b5050505061096c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050836040518060600160405280600060ff168152602001600060ff168152602001600060ff1681525061218a565b90509392505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8f4481d8585856040518463ffffffff1660e01b8152600401808060200183600360200280828437600081840152601f19601f8201169050808301925050508281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015610a3957600080fd5b505afa158015610a4d573d6000803e3d6000fd5b505050506040513d6020811015610a6357600080fd5b810190808051906020019092919050505090509392505050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610af3612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610b54578082015181840152602081019050610b39565b50505050905090810190601f168015610b815780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b158015610c0957600080fd5b505af4158015610c1d573d6000803e3d6000fd5b50505050610c9684848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050836040518060600160405280600060ff168152602001600060ff168152602001600060ff168152506110bc565b90509392505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d67612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610dc8578082015181840152602081019050610dad565b50505050905090810190601f168015610df55780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b158015610e7d57600080fd5b505af4158015610e91573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16637f692a2a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0c57600080fd5b505afa158015610f20573d6000803e3d6000fd5b505050506040513d6020811015610f3657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415610f67612eff565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610fc8578082015181840152602081019050610fad565b50505050905090810190601f168015610ff55780820380516001836020036101000a031916815260200191505b50848103835260208152602001807f44656661756c74446f75672e7365744172746966616374735265676973747279815250602001848103825260368152602001806134ab603691396040019550505050505060006040518083038186803b15801561106057600080fd5b505af4158015611074573d6000803e3d6000fd5b5050505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611132612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611193578082015181840152602081019050611178565b50505050905090810190601f1680156111c05780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561124857600080fd5b505af415801561125c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000865114806112b65750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b6112be612f3c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561131f578082015181840152602081019050611304565b50505050905090810190601f16801561134c5780820380516001836020036101000a031916815260200191505b50848103835260198152602001807f44656661756c74446f75672e6465706c6f7956657273696f6e0000000000000081525060200184810382526022815260200180613513602291396040019550505050505060006040518083038186803b1580156113b757600080fd5b505af41580156113cb573d6000803e3d6000fd5b505050506113d7613488565b73__$fdd731fada9905693765f0d2a681d4c856$__6392302b87856113fa612f79565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561149f57600080fd5b505af41580156114b3573d6000803e3d6000fd5b505050506040513d60208110156114c957600080fd5b81019080805190602001909291905050506114e4578261156c565b8373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561152a57600080fd5b505afa15801561153e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561156357600080fd5b81019080919050505b905073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8785611591612fc7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561163657600080fd5b505af415801561164a573d6000803e3d6000fd5b505050506040513d602081101561166057600080fd5b81019080805190602001909291905050501561185a5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef3073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663e72848796040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ed57600080fd5b505afa158015611701573d6000803e3d6000fd5b505050506040513d602081101561171757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415611748612eff565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156117a957808201518184015260208101905061178e565b50505050905090810190601f1680156117d65780820380516001836020036101000a031916815260200191505b50848103835260128152602001807f44656661756c74446f75672e6465706c6f790000000000000000000000000000815250602001848103825260328152602001806134e1603291396040019550505050505060006040518083038186803b15801561184157600080fd5b505af4158015611855573d6000803e3d6000fd5b505050505b73__$fdd731fada9905693765f0d2a681d4c856$__6392302b878561187d613015565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561192257600080fd5b505af4158015611936573d6000803e3d6000fd5b505050506040513d602081101561194c57600080fd5b810190808051906020019092919050505015611a1c578373ffffffffffffffffffffffffffffffffffffffff16632a8e9ab2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611a0357600080fd5b505af1158015611a17573d6000803e3d6000fd5b505050505b6000611a26613488565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1886040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ab4578082015181840152602081019050611a99565b50505050905090810190601f168015611ae15780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b158015611afe57600080fd5b505afa158015611b12573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506080811015611b3757600080fd5b8101908080519060200190929190919050509150915060008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611bca57508673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bc957506000611bc78386613063565b135b5b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c0f5750611c0e8388613116565b5b8015611d1a575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8784611c39612fc7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015611cde57600080fd5b505af4158015611cf2573d6000803e3d6000fd5b505050506040513d6020811015611d0857600080fd5b81019080805190602001909291905050505b8015611e25575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8788611d44612fc7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015611de957600080fd5b505af4158015611dfd573d6000803e3d6000fd5b505050506040513d6020811015611e1357600080fd5b81019080805190602001909291905050505b156120195773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8473ffffffffffffffffffffffffffffffffffffffff16630900f0108a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611ec357600080fd5b505af1158015611ed7573d6000803e3d6000fd5b505050506040513d6020811015611eed57600080fd5b810190808051906020019092919050505015611f076133f1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611f68578082015181840152602081019050611f4d565b50505050905090810190601f168015611f955780820380516001836020036101000a031916815260200191505b50848103835260128152602001807f44656661756c74446f75672e6465706c6f79000000000000000000000000000081525060200184810382526056815260200180613535605691396060019550505050505060006040518083038186803b15801561200057600080fd5b505af4158015612014573d6000803e3d6000fd5b505050505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330c94145898987856040518563ffffffff1660e01b815260040180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600360200280838360005b838110156120cb5780820151818401526020810190506120b0565b5050505090500183151515158152602001828103825286818151815260200191508051906020019080838360005b838110156121145780820151818401526020810190506120f9565b50505050905090810190601f1680156121415780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561216357600080fd5b505af1158015612177573d6000803e3d6000fd5b5050505060019450505050509392505050565b612192613488565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612206612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561226757808201518184015260208101905061224c565b50505050905090810190601f1680156122945780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561231c57600080fd5b505af4158015612330573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008651148061238a5750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b612392612f3c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156123f35780820151818401526020810190506123d8565b50505050905090810190601f1680156124205780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f44656661756c74446f75672e726567697374657256657273696f6e000000000081525060200184810382526022815260200180613513602291396040019550505050505060006040518083038186803b15801561248b57600080fd5b505af415801561249f573d6000803e3d6000fd5b5050505073__$fdd731fada9905693765f0d2a681d4c856$__6392302b87846124c6612f79565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561256b57600080fd5b505af415801561257f573d6000803e3d6000fd5b505050506040513d602081101561259557600080fd5b81019080805190602001909291905050506125b05781612638565b8273ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156125f657600080fd5b505afa15801561260a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561262f57600080fd5b81019080919050505b90506000612644613488565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1876040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126d25780820151818401526020810190506126b7565b50505050905090810190601f1680156126ff5780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b15801561271c57600080fd5b505afa158015612730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250608081101561275557600080fd5b8101908080519060200190929190919050509150915060008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806127e857508573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156127e7575060006127e58386613063565b135b5b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166330c94145888887856040518563ffffffff1660e01b815260040180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600360200280838360005b8381101561289c578082015181840152602081019050612881565b5050505090500183151515158152602001828103825286818151815260200191508051906020019080838360005b838110156128e55780820151818401526020810190506128ca565b50505050905090810190601f1680156129125780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561293457600080fd5b505af1158015612948573d6000803e3d6000fd5b505050505050509392505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156129ca612ec2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612a2b578082015181840152602081019050612a10565b50505050905090810190601f168015612a585780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b158015612ae057600080fd5b505af4158015612af4573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612b4a612f3c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612bab578082015181840152602081019050612b90565b50505050905090810190601f168015612bd85780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f776e65642e7472616e736665724f776e6572736869700000000000000000008152506020018481038252601e8152602001807f546865206e6577206f776e6572206d757374206e6f74206265204e554c4c00008152506020019550505050505060006040518083038186803b158015612c6057600080fd5b505af4158015612c74573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612dc85780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a184846040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060806040518083038186803b158015612e6c57600080fd5b505afa158015612e80573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506080811015612ea557600080fd5b810190808051906020019092919091905050508091505092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b600060405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120905090565b600060405160200180807f7570677261646528616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120905090565b600060405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b01905060405160208183030381529060405280519060200120905090565b60006130918360006003811061307557fe5b60200201518360006003811061308757fe5b602002015161342e565b9050600081146130a357809050613110565b6130cf836001600381106130b357fe5b6020020151836001600381106130c557fe5b602002015161342e565b9050600081146130e157809050613110565b61310d836002600381106130f157fe5b60200201518360026003811061310357fe5b602002015161342e565b90505b92915050565b600073__$fdd731fada9905693765f0d2a681d4c856$__6392302b878461313b612f79565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b1580156131e057600080fd5b505af41580156131f4573d6000803e3d6000fd5b505050506040513d602081101561320a57600080fd5b81019080805190602001909291905050508015613326575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8783613245612f79565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b1580156132ea57600080fd5b505af41580156132fe573d6000803e3d6000fd5b505050506040513d602081101561331457600080fd5b81019080805190602001909291905050505b80156133e9575060008373ffffffffffffffffffffffffffffffffffffffff16635c030138846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156133ac57600080fd5b505afa1580156133c0573d6000803e3d6000fd5b505050506040513d60208110156133d657600080fd5b8101908080519060200190929190505050135b905092915050565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60008260ff168260ff1614156134475760009050613482565b8260ff168260ff16101561347d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050613482565b600190505b92915050565b604051806060016040528060039060208202803883398082019150509050509056fe444f5547206d757374206265207468652073797374656d206f776e6572206f6620746865204172746966616374735265676973747279444f5547206d75737420626520757067726164654f776e6572206f66207468652070726f766964656420636f6e74726163745f696420616e64205f61646472657373206d757374206e6f7420626520656d7074794175746f6d6174696320757067726164652066726f6d20616e206578697374696e6720636f6e74726163742077697468207468652073616d6520494420616e64206c6f7765722076657273696f6e206661696c65642ea265627a7a723158207793406707a5425bc2931ae007dd611c8bd92645cf3484326fe16adc0f71177964736f6c634300050c0032";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        const data = bytecode + client.encode("", []);
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOwnerChanged", this.address, callback); }
        deploy(_id: string, _address: string) {
            const data = Encode(this.client).deploy(_id, _address);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).deploy();
            });
        }
        deployVersion(_id: string, _address: string, _version: [number, number, number]) {
            const data = Encode(this.client).deployVersion(_id, _address, _version);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).deployVersion();
            });
        }
        getArtifactsRegistry() {
            const data = Encode(this.client).getArtifactsRegistry();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactsRegistry();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        lookup(_id: string) {
            const data = Encode(this.client).lookup(_id);
            return Call<Tx, {
                contractAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).lookup();
            });
        }
        lookupVersion(_id: string, _version: [number, number, number]) {
            const data = Encode(this.client).lookupVersion(_id, _version);
            return Call<Tx, {
                contractAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).lookupVersion();
            });
        }
        register(_id: string, _address: string) {
            const data = Encode(this.client).register(_id, _address);
            return Call<Tx, {
                version: [number, number, number];
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).register();
            });
        }
        registerVersion(_id: string, _address: string, _version: [number, number, number]) {
            const data = Encode(this.client).registerVersion(_id, _address, _version);
            return Call<Tx, {
                version: [number, number, number];
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).registerVersion();
            });
        }
        setArtifactsRegistry(_artifactsRegistry: string) {
            const data = Encode(this.client).setArtifactsRegistry(_artifactsRegistry);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setArtifactsRegistry();
            });
        }
        transferOwnership(_newOwner: string) {
            const data = Encode(this.client).transferOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferOwnership();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        deploy: (_id: string, _address: string) => { return client.encode("58CD1DFA", ["string", "address"], _id, _address); },
        deployVersion: (_id: string, _address: string, _version: [number, number, number]) => { return client.encode("A428E214", ["string", "address", "uint8[3]"], _id, _address, _version); },
        getArtifactsRegistry: () => { return client.encode("8113990E", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        lookup: (_id: string) => { return client.encode("F67187AC", ["string"], _id); },
        lookupVersion: (_id: string, _version: [number, number, number]) => { return client.encode("3E012C90", ["string", "uint8[3]"], _id, _version); },
        register: (_id: string, _address: string) => { return client.encode("1E59C529", ["string", "address"], _id, _address); },
        registerVersion: (_id: string, _address: string, _version: [number, number, number]) => { return client.encode("ECB9AEE5", ["string", "address", "uint8[3]"], _id, _address, _version); },
        setArtifactsRegistry: (_artifactsRegistry: string) => { return client.encode("941F25B0", ["address"], _artifactsRegistry); },
        transferOwnership: (_newOwner: string) => { return client.encode("F2FDE38B", ["address"], _newOwner); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        deploy: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        deployVersion: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        getArtifactsRegistry: (): [string] => { return client.decode(data, ["address"]); },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        lookup: (): {
            contractAddress: string;
        } => {
            const [contractAddress] = client.decode(data, ["address"]);
            return { contractAddress: contractAddress };
        },
        lookupVersion: (): {
            contractAddress: string;
        } => {
            const [contractAddress] = client.decode(data, ["address"]);
            return { contractAddress: contractAddress };
        },
        register: (): {
            version: [number, number, number];
        } => {
            const [version] = client.decode(data, ["uint8[3]"]);
            return { version: version };
        },
        registerVersion: (): {
            version: [number, number, number];
        } => {
            const [version] = client.decode(data, ["uint8[3]"]);
            return { version: version };
        },
        setArtifactsRegistry: (): void => { return; },
        transferOwnership: (): void => { return; }
    }; };
}