jobs:

#####
# Retrieve DOUG
#####
- name: DOUG
  query-name:
    name: DOUG
    field: data

#####
# Retrieve Library Addresses
#####
- name: ErrorsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ErrorsLib]

- name: TypeUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [TypeUtils]

- name: ArrayUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ArrayUtils]

- name: MappingsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [MappingsLib]

- name: BpmRuntimeLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [BpmRuntimeLib]

- name: DataStorageUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [DataStorageUtils]

- name: BpmService
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [BpmService]

#####
# Applications
#
# ApplicationTypes Enum: {0=EVENT, 1=SERVICE, 2=WEB}
#####

- name: ApplicationRegistry
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ApplicationRegistry]

# DeadlineOracle
- name: DeadlineOracleBuild
  build:
    contract: deadline/DeadlineOracle.sol

- name: DeadlineOracle
  deploy:
    contract: DeadlineOracle.bin
    libraries: ErrorsLib:$ErrorsLib
    data: [$BpmService]

- name: registerDeadlineOracle
  call:
    destination: $ApplicationRegistry
    bin: ApplicationRegistry
    function: addApplication
    data: ["Deadline Oracle", 0, $DeadlineOracle, "", ""]

- name: addDeadlineOracleDeadlineInAccessPoint
  call:
    destination: $ApplicationRegistry
    bin: ApplicationRegistry
    function: addAccessPoint
    data: ["Deadline Oracle", "Deadline", 8, 0]

- name: registerDeadlineOracleInDOUG
  call:
    destination: $DOUG
    bin: DOUG
    function: deploy
    data: ["DeadlineOracle", $DeadlineOracle]

- name: assertDeadlineOracleInDOUG
  assert:
    key: $registerDeadlineOracleInDOUG
    relation: eq
    val: "true"
