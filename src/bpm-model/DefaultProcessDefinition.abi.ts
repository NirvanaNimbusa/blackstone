//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultProcessDefinition {
    export function Deploy<Tx>(client: Provider<Tx>, bpm_model_BpmModelLib_sol_BpmModelLib: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, commons_utils_TypeUtilsLib_sol_TypeUtilsLib: string): Promise<string> {
        let bytecode = "6080604052600160008060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200014960201b60201c565b50505062000236565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806200b33e602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61b0f880620002466000396000f3fe608060405234801561001057600080fd5b50600436106103265760003560e01c80636983067e116101b8578063af201b9011610104578063dd2f3e84116100a2578063e3c83a161161007c578063e3c83a16146114c4578063f001897d1461150a578063f085f6dd1461156c578063f2fde38b1461159057610326565b8063dd2f3e841461133b578063e10533c6146113d4578063e3621d201461143057610326565b8063ba840f64116100de578063ba840f64146111e4578063bb5d40eb14611202578063bde6ef5814611224578063c5930e29146112c257610326565b8063af201b90146110fa578063b24b4bcc14611118578063b28167491461113657610326565b806378bc0b0d116101715780638efb695c1161014b5780638efb695c14610f505780639c4aa3341461101e578063a0bfa1e01461106e578063ae73d8b3146110b857610326565b806378bc0b0d14610da657806379238a1014610e1f578063893d20e814610f0657610326565b80636983067e14610be35780636c28e10214610c01578063756b2e6c14610c4d5780637589adb714610c93578063758cbd2e14610cb757806377198ed414610d4057610326565b80633a70dcef116102775780635478a0c9116102305780635c0301381161020a5780635c03013814610af65780635d1ca63114610b4e5780636901f66814610b6c5780636910e33414610b9557610326565b80635478a0c914610a1957806357e0ebca14610a895780635b4025e114610aad57610326565b80633a70dcef146107435780633bf2c2a0146107d75780633d34113e146108195780633d9a23521461089e5780634b53be1d146109215780635316c2061461099657610326565b806321a0c66f116102e45780632b8c74ce116102be5780632b8c74ce1461065c57806332d377811461069e578063361a5672146106d95780633796d3a4146106f757610326565b806321a0c66f1461051e57806323ff5dd31461055657806326417651146105d957610326565b80626129d91461032b57806301ffc9a71461034957806308a104aa146103ae5780630f9c79e21461043157806314e426051461044f57806315064393146104d2575b600080fd5b6103336115d4565b6040518082815260200191505060405180910390f35b6103946004803603602081101561035f57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506115e4565b604051808215151515815260200191505060405180910390f35b6103da600480360360208110156103c457600080fd5b810190808035906020019092919050505061164b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561041d578082015181840152602081019050610402565b505050509050019250505060405180910390f35b6104396116bf565b6040518082815260200191505060405180910390f35b61047b6004803603602081101561046557600080fd5b81019080803590602001909291905050506116c9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104be5780820151818401526020810190506104a3565b505050509050019250505060405180910390f35b610508600480360360408110156104e857600080fd5b81019080803590602001909291908035906020019092919050505061183c565b6040518082815260200191505060405180910390f35b6105546004803603604081101561053457600080fd5b810190808035906020019092919080359060200190929190505050611878565b005b6105d7600480360360e081101561056c57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001909291905050506120ff565b005b61065a600480360360e08110156105ef57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190505050612bde565b005b6106886004803603602081101561067257600080fd5b81019080803590602001909291905050506136bd565b6040518082815260200191505060405180910390f35b6106d7600480360360408110156106b457600080fd5b8101908080359060200190929190803560ff1690602001909291905050506136e6565b005b6106e1613934565b6040518082815260200191505060405180910390f35b61072d6004803603604081101561070d57600080fd5b8101908080359060200190929190803590602001909291905050506139de565b6040518082815260200191505060405180910390f35b6107796004803603604081101561075957600080fd5b810190808035906020019092919080359060200190929190505050613a18565b604051808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b610803600480360360208110156107ed57600080fd5b8101908080359060200190929190505050613b16565b6040518082815260200191505060405180910390f35b61089c600480360360e081101561082f57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803515159060200190929190505050613b3a565b005b6108ca600480360360208110156108b457600080fd5b810190808035906020019092919050505061462c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561090d5780820151818401526020810190506108f2565b505050509050019250505060405180910390f35b61094d6004803603602081101561093757600080fd5b81019080803590602001909291905050506146a0565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b610a17600480360360e08110156109ac57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291908035906020019092919050505061470e565b005b610a6f60048036036060811015610a2f57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506151ed565b604051808215151515815260200191505060405180910390f35b610a91615334565b604051808260ff1660ff16815260200191505060405180910390f35b610ad960048036036020811015610ac357600080fd5b810190808035906020019092919050505061535f565b604051808381526020018281526020019250505060405180910390f35b610b3860048036036020811015610b0c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506153a5565b6040518082815260200191505060405180910390f35b610b566154a1565b6040518082815260200191505060405180910390f35b610b746154ab565b60405180831515151581526020018281526020019250505060405180910390f35b610be160048036036040811015610bab57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050615b17565b005b610beb61612c565b6040518082815260200191505060405180910390f35b610c3760048036036040811015610c1757600080fd5b810190808035906020019092919080359060200190929190505050616150565b6040518082815260200191505060405180910390f35b610c55616a41565b6040518082600360200280838360005b83811015610c80578082015181840152602081019050610c65565b5050505090500191505060405180910390f35b610c9b616ab2565b604051808260ff1660ff16815260200191505060405180910390f35b610ce360048036036020811015610ccd57600080fd5b8101908080359060200190929190505050616adc565b604051808960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff168152602001868152602001851515151581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b610d8c60048036036040811015610d5657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050616c6d565b604051808215151515815260200191505060405180910390f35b610e0960048036036060811015610dbc57600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f8201169050808301925050505050509192919290505050616cfb565b6040518082815260200191505060405180910390f35b610e4b60048036036020811015610e3557600080fd5b8101908080359060200190929190505050616d71565b604051808060200180602001856002811115610e6357fe5b60ff168152602001848152602001838103835287818151815260200191508051906020019060200280838360005b83811015610eac578082015181840152602081019050610e91565b50505050905001838103825286818151815260200191508051906020019060200280838360005b83811015610eee578082015181840152602081019050610ed3565b50505050905001965050505050505060405180910390f35b610f0e616ea3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61101c600480360360e0811015610f6657600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190640100000000811115610fd857600080fd5b820183602082011115610fea57600080fd5b8035906020019184600183028401116401000000008311171561100c57600080fd5b9091929391929390505050616ecd565b005b61104a6004803603602081101561103457600080fd5b81019080803590602001909291905050506179b8565b6040518082600181111561105a57fe5b60ff16815260200191505060405180910390f35b611076617b43565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6110e4600480360360208110156110ce57600080fd5b8101908080359060200190929190505050617b6d565b6040518082815260200191505060405180910390f35b611102617b96565b6040518082815260200191505060405180910390f35b611120617bba565b6040518082815260200191505060405180910390f35b6111e2600480360361012081101561114d57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050617bca565b005b6111ec618721565b6040518082815260200191505060405180910390f35b61120a618745565b604051808215151515815260200191505060405180910390f35b6112ac600480360361012081101561123b57600080fd5b8101908080359060200190929190803560ff169060200190929190803560ff169060200190929190803560ff1690602001909291908035906020019092919080351515906020019092919080359060200190929190803590602001909291908035906020019092919050505061875c565b6040518082815260200191505060405180910390f35b611339600480360360c08110156112d857600080fd5b8101908080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050618cc3565b005b6113d2600480360360e081101561135157600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061928d565b005b6113dc619da6565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6114666004803603604081101561144657600080fd5b810190808035906020019092919080359060200190929190505050619df0565b604051808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b6114f0600480360360208110156114da57600080fd5b8101908080359060200190929190505050619eee565b604051808215151515815260200191505060405180910390f35b6115566004803603604081101561152057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050619f1e565b6040518082815260200191505060405180910390f35b61157461a2a7565b604051808260ff1660ff16815260200191505060405180910390f35b6115d2600480360360208110156115a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061a2d2565b005b6000600360010180549050905090565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060036000016000838152602001908152602001600020600201600a018054806020026020016040519081016040528092919081815260200182805480156116b357602002820191906000526020600020905b81548152602001906001019080831161169f575b50505050509050919050565b6000600b54905090565b606060008214611836576000806000905060606003600101805490506040519080825280602002602001820160405280156117135781602001602082028038833980820191505090505b509050600092505b6003600101805490508310156117b05784600360000160006003600101868154811061174357fe5b906000526020600020015481526020019081526020016000206002016002015414156117a3576003600101838154811061177957fe5b906000526020600020015481838060010194508151811061179657fe5b6020026020010181815250505b828060010193505061171b565b6060826040519080825280602002602001820160405280156117e15781602001602082028038833980820191505090505b509050600093505b8284101561182a578184815181106117fd57fe5b602002602001015181858151811061181157fe5b60200260200101818152505083806001019450506117e9565b80945050505050611837565b5b919050565b600060036000016000848152602001908152602001600020600201600901828154811061186557fe5b9060005260206000200154905092915050565b818173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff16156118c461a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561192557808201518184015260208101905061190a565b50505050905090810190601f1680156119525780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b1580156119bd57600080fd5b505af41580156119d1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff1615611a1f61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611a80578082015181840152602081019050611a65565b50505050905090810190601f168015611aad5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b158015611afb57600080fd5b505af4158015611b0f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015611b9357602002820191906000526020600020905b815481526020019060010190808311611b7f575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015611c0d578082015181840152602081019050611bf2565b50505050905001935050505060206040518083038186803b158015611c3157600080fd5b505af4158015611c45573d6000803e3d6000fd5b505050506040513d6020811015611c5b57600080fd5b81019080805190602001909291905050508015611e1c575060006001811115611c8057fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166001811115611cb257fe5b14611dfb5760036000016000848152602001908152602001600020600f01600301805480602002602001604051908101604052809291908181526020018280548015611d1d57602002820191906000526020600020905b815481526020019060010190808311611d09575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015611d97578082015181840152602081019050611d7c565b50505050905001935050505060206040518083038186803b158015611dbb57600080fd5b505af4158015611dcf573d6000803e3d6000fd5b505050506040513d6020811015611de557600080fd5b8101908080519060200190929190505050611e1b565b836003600001600085815260200190815260200160002060020160070154145b5b15611e2561a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611e86578082015181840152602081019050611e6b565b50505050905090810190601f168015611eb35780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b158015611f0157600080fd5b505af4158015611f15573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff1615611f4a576000600c60006101000a81548160ff0219169083151502179055505b6008600085856040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208152602001908152602001600020600080820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff021916905550506003820160006101000a81549060ff02191690556004820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff0219169055505060078201600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090556004820160006120ac919061aa44565b6005820160006101000a81549060ff02191690556005820160016101000a81549060ff0219169055505050508260036000016000868152602001908152602001600020600f016002018190555050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff161561214b61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156121ac578082015181840152602081019050612191565b50505050905090810190601f1680156121d95780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561224457600080fd5b505af4158015612258573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff16156122a661a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156123075780820151818401526020810190506122ec565b50505050905090810190601f1680156123345780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b15801561238257600080fd5b505af4158015612396573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f0160040180548060200260200160405190810160405280929190818152602001828054801561241a57602002820191906000526020600020905b815481526020019060010190808311612406575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015612494578082015181840152602081019050612479565b50505050905001935050505060206040518083038186803b1580156124b857600080fd5b505af41580156124cc573d6000803e3d6000fd5b505050506040513d60208110156124e257600080fd5b810190808051906020019092919050505080156126a357506000600181111561250757fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561253957fe5b146126825760036000016000848152602001908152602001600020600f016003018054806020026020016040519081016040528092919081815260200182805480156125a457602002820191906000526020600020905b815481526020019060010190808311612590575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561261e578082015181840152602081019050612603565b50505050905001935050505060206040518083038186803b15801561264257600080fd5b505af4158015612656573d6000803e3d6000fd5b505050506040513d602081101561266c57600080fd5b81019080805190602001909291905050506126a2565b836003600001600085815260200190815260200160002060020160070154145b5b156126ac61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561270d5780820151818401526020810190506126f2565b50505050905090810190601f16801561273a5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b15801561278857600080fd5b505af415801561279c573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f0160020154146127e361a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612844578082015181840152602081019050612829565b50505050905090810190601f1680156128715780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b1580156128bf57600080fd5b505af41580156128d3573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff1615612908576000600c60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506129478a8a8a8a61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115612a0457fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190612b3a92919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600860008381526020019081526020016000206007016001018190555060016008600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff1615612c2a61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612c8b578082015181840152602081019050612c70565b50505050905090810190601f168015612cb85780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015612d2357600080fd5b505af4158015612d37573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff1615612d8561a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612de6578082015181840152602081019050612dcb565b50505050905090810190601f168015612e135780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b158015612e6157600080fd5b505af4158015612e75573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015612ef957602002820191906000526020600020905b815481526020019060010190808311612ee5575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015612f73578082015181840152602081019050612f58565b50505050905001935050505060206040518083038186803b158015612f9757600080fd5b505af4158015612fab573d6000803e3d6000fd5b505050506040513d6020811015612fc157600080fd5b81019080805190602001909291905050508015613182575060006001811115612fe657fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561301857fe5b146131615760036000016000848152602001908152602001600020600f0160030180548060200260200160405190810160405280929190818152602001828054801561308357602002820191906000526020600020905b81548152602001906001019080831161306f575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156130fd5780820151818401526020810190506130e2565b50505050905001935050505060206040518083038186803b15801561312157600080fd5b505af4158015613135573d6000803e3d6000fd5b505050506040513d602081101561314b57600080fd5b8101908080519060200190929190505050613181565b836003600001600085815260200190815260200160002060020160070154145b5b1561318b61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156131ec5780820151818401526020810190506131d1565b50505050905090810190601f1680156132195780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b15801561326757600080fd5b505af415801561327b573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f0160020154146132c261a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613323578082015181840152602081019050613308565b50505050905090810190601f1680156133505780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b15801561339e57600080fd5b505af41580156133b2573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff16156133e7576000600c60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506134268a8a8a8a61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156134e357fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061361992919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600860008381526020019081526020016000206007016003018190555060016008600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b600060036000016000838152602001908152602001600020600201600901805490509050919050565b600c60009054906101000a900460ff1615613717576000600c60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff166040518263ffffffff1660e01b81526004018082151515158152602001806020018060200180602001848103845260068152602001807f42504d34303000000000000000000000000000000000000000000000000000008152506020018481038352601f8152602001807f50726f63657373446566696e6974696f6e2e63726561746547617465776179008152506020018481038252602581526020018061ae486025913960400194505050505060006040518083038186803b15801561381e57600080fd5b505af4158015613832573d6000803e3d6000fd5b50505050600360020182908060018154018082558091505090600182039060005260206000200160009091929091909150555060016003600001600084815260200190815260200160002060010160006101000a81548160ff0219169083600181111561389b57fe5b02179055508160036000016000848152602001908152602001600020600f01600001819055508060036000016000848152602001908152602001600020600f0160010160006101000a81548160ff021916908360028111156138f957fe5b021790555060016003600001600084815260200190815260200160002060140160006101000a81548160ff0219169083151502179055505050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b15801561399e57600080fd5b505afa1580156139b2573d6000803e3d6000fd5b505050506040513d60208110156139c857600080fd5b8101908080519060200190929190505050905090565b600060036000016000848152602001908152602001600020600201600a018281548110613a0757fe5b906000526020600020505092915050565b60008060008060006003600001600088815260200190815260200160002060140160009054906101000a900460ff1615613b0c5785945085935060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b600060036001018281548110613b2857fe5b90600052602060002001549050919050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff1615613b8661a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613be7578082015181840152602081019050613bcc565b50505050905090810190601f168015613c145780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015613c7f57600080fd5b505af4158015613c93573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff1615613ce161a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613d42578082015181840152602081019050613d27565b50505050905090810190601f168015613d6f5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b158015613dbd57600080fd5b505af4158015613dd1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015613e5557602002820191906000526020600020905b815481526020019060010190808311613e41575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015613ecf578082015181840152602081019050613eb4565b50505050905001935050505060206040518083038186803b158015613ef357600080fd5b505af4158015613f07573d6000803e3d6000fd5b505050506040513d6020811015613f1d57600080fd5b810190808051906020019092919050505080156140de575060006001811115613f4257fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166001811115613f7457fe5b146140bd5760036000016000848152602001908152602001600020600f01600301805480602002602001604051908101604052809291908181526020018280548015613fdf57602002820191906000526020600020905b815481526020019060010190808311613fcb575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561405957808201518184015260208101905061403e565b50505050905001935050505060206040518083038186803b15801561407d57600080fd5b505af4158015614091573d6000803e3d6000fd5b505050506040513d60208110156140a757600080fd5b81019080805190602001909291905050506140dd565b836003600001600085815260200190815260200160002060020160070154145b5b156140e761a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561414857808201518184015260208101905061412d565b50505050905090810190601f1680156141755780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b1580156141c357600080fd5b505af41580156141d7573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f01600201541461421e61a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561427f578082015181840152602081019050614264565b50505050905090810190601f1680156142ac5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b1580156142fa57600080fd5b505af415801561430e573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff1615614343576000600c60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506143828a8a8a8a61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561443f57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061457592919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff0219169083151502179055505050905050856008600083815260200190815260200160002060070160050160006101000a81548160ff02191690831515021790555060016008600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60606003600001600083815260200190815260200160002060020160090180548060200260200160405190810160405280929190818152602001828054801561469457602002820191906000526020600020905b815481526020019060010190808311614680575b50505050509050919050565b600080600060066000016000600660010186815481106146bc57fe5b9060005260206000200154815260200190815260200160002060010190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508060010154915050915091565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff161561475a61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156147bb5780820151818401526020810190506147a0565b50505050905090810190601f1680156147e85780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561485357600080fd5b505af4158015614867573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff16156148b561a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156149165780820151818401526020810190506148fb565b50505050905090810190601f1680156149435780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b15801561499157600080fd5b505af41580156149a5573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015614a2957602002820191906000526020600020905b815481526020019060010190808311614a15575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015614aa3578082015181840152602081019050614a88565b50505050905001935050505060206040518083038186803b158015614ac757600080fd5b505af4158015614adb573d6000803e3d6000fd5b505050506040513d6020811015614af157600080fd5b81019080805190602001909291905050508015614cb2575060006001811115614b1657fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166001811115614b4857fe5b14614c915760036000016000848152602001908152602001600020600f01600301805480602002602001604051908101604052809291908181526020018280548015614bb357602002820191906000526020600020905b815481526020019060010190808311614b9f575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015614c2d578082015181840152602081019050614c12565b50505050905001935050505060206040518083038186803b158015614c5157600080fd5b505af4158015614c65573d6000803e3d6000fd5b505050506040513d6020811015614c7b57600080fd5b8101908080519060200190929190505050614cb1565b836003600001600085815260200190815260200160002060020160070154145b5b15614cbb61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614d1c578082015181840152602081019050614d01565b50505050905090810190601f168015614d495780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b158015614d9757600080fd5b505af4158015614dab573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f016002015414614df261a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614e53578082015181840152602081019050614e38565b50505050905090810190601f168015614e805780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b158015614ece57600080fd5b505af4158015614ee2573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff1615614f17576000600c60006101000a81548160ff0219169083151502179055505b60008b8b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050614f568a8a8a8a61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561501357fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061514992919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600860008381526020019081526020016000206007016002018190555060016008600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b600080848460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506008600082815260200190815260200160002060000160020160149054906101000a900460ff1615615327576008600082815260200190815260200160002073__$d688d3e5094c429bbf767db5b46e89d18f$__63ec4601549091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156152e457600080fd5b505af41580156152f8573d6000803e3d6000fd5b505050506040513d602081101561530e57600080fd5b810190808051906020019092919050505091505061532d565b60019150505b9392505050565b6000600160006003811061534457fe5b602091828204019190069054906101000a900460ff16905090565b6000806003600001600084815260200190815260200160002060020160070154915060036000016000848152602001908152602001600020600201600801549050915091565b600061549a6001600380602002604051908101604052809291908260038015615409576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116153d25790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561545457600080fd5b505afa158015615468573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561548d57600080fd5b810190809190505061a84f565b9050919050565b6000600954905090565b6000806000600c60006101000a81548160ff0219169083151502179055506000600b819055506154d961ab0c565b60008090505b60036001018054905081101561583757600360000160006003600101838154811061550657fe5b90600052602060002001548152602001908152602001600020600201604051806101a0016040529081600082015481526020016001820160009054906101000a900460ff16600181111561555657fe5b600181111561556157fe5b81526020016001820160019054906101000a900460ff16600381111561558357fe5b600381111561558e57fe5b81526020016001820160029054906101000a900460ff1660028111156155b057fe5b60028111156155bb57fe5b8152602001600282015481526020016003820160009054906101000a900460ff1615151515815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820180548060200260200160405190810160405280929190818152602001828054801561566557602002820191906000526020600020905b815481526020019060010190808311615651575b50505050508152602001600a82018054806020026020016040519081016040528092919081815260200182805480156156bd57602002820191906000526020600020905b8154815260200190600101908083116156a9575b505050505081525050915081610120015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561571e57600080fd5b505af4158015615732573d6000803e3d6000fd5b505050506040513d602081101561574857600080fd5b81019080805190602001909291905050501561582a57600b5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156157b157600080fd5b505af41580156157c5573d6000803e3d6000fd5b505050506040513d60208110156157db57600080fd5b810190808051906020019092919050505061581e5760007f6475706c69636174652073746172742061637469766974696573000000000000935093505050615b13565b8160000151600b819055505b80806001019150506154df565b600b5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561588a57600080fd5b505af415801561589e573d6000803e3d6000fd5b505050506040513d60208110156158b457600080fd5b8101908080519060200190929190505050156158f85760007f6e6f207374617274206163746976697479000000000000000000000000000000935093505050615b13565b61590061abac565b600091505b600360020180549050821015615acd57600360000160006003600201848154811061592c57fe5b90600052602060002001548152602001908152602001600020600f016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff16600281111561597b57fe5b600281111561598657fe5b815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156159e357602002820191906000526020600020905b8154815260200190600101908083116159cf575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015615a3b57602002820191906000526020600020905b815481526020019060010190808311615a27575b505050505081525050905060008160600151511415615a835760007f756e726561636861626c6520676174657761790000000000000000000000000094509450505050615b13565b60008160800151511415615ac05760007f6761746577617920776974686f7574206f75747075747300000000000000000094509450505050615b13565b8180600101925050615905565b6001600c60006101000a81548160ff02191690831515021790555060017f6d6f64656c2076616c6964000000000000000000000000000000000000000000945094505050505b9091565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900460ff16615b4961a902565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615baa578082015181840152602081019050615b8f565b50505050905090810190601f168015615bd75780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061ae1e602a91396040018481038252602981526020018061aeac602991396040019550505050505060006040518083038186803b158015615c2557600080fd5b505af4158015615c39573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008414615c6361a93f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615cc4578082015181840152602081019050615ca9565b50505050905090810190601f168015615cf15780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600b8152602001807f5f6964206973204e554c4c0000000000000000000000000000000000000000008152506020019550505050505060006040518083038186803b158015615d7957600080fd5b505af4158015615d8d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614615de361a93f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615e44578082015181840152602081019050615e29565b50505050905090810190601f168015615e715780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600e8152602001807f5f6d6f64656c206973204e554c4c0000000000000000000000000000000000008152506020019550505050505060006040518083038186803b158015615ef957600080fd5b505af4158015615f0d573d6000803e3d6000fd5b5050505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160098190555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f38d94abeb96a84ab50e93c24191394bf293459aed56a464639dfa03acdaba44530846000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b15801561604857600080fd5b505afa15801561605c573d6000803e3d6000fd5b505050506040513d602081101561607257600080fd5b810190808051906020019092919050505086604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a26001600260006101000a81548160ff0219169083151502179055505050565b7f414e3a2f2f646174612d6d617070696e6773000000000000000000000000000081565b6000600c60009054906101000a900460ff1615616183576000600c60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600086815260200190815260200160002060140160009054906101000a900460ff16156040518263ffffffff1660e01b81526004018082151515158152602001806020018060200180602001848103845260068152602001807f45525234303400000000000000000000000000000000000000000000000000008152506020018481038352602281526020018061aed5602291396040018481038252601f8152602001807f5f736f7572636520677261706820656c656d656e74206e6f7420666f756e640081525060200194505050505060006040518083038186803b15801561628b57600080fd5b505af415801561629f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff16156040518263ffffffff1660e01b81526004018082151515158152602001806020018060200180602001848103845260068152602001807f45525234303400000000000000000000000000000000000000000000000000008152506020018481038352602281526020018061aed5602291396040018481038252601f8152602001807f5f74617267657420677261706820656c656d656e74206e6f7420666f756e640081525060200194505050505060006040518083038186803b1580156163ab57600080fd5b505af41580156163bf573d6000803e3d6000fd5b50505050600060018111156163d057fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561640257fe5b141561652a5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600360000160008781526020019081526020016000206002016008015414156040518263ffffffff1660e01b81526004018082151515158152602001806020018060200180602001848103845260068152602001807f42504d34303000000000000000000000000000000000000000000000000000008152506020018481038352602281526020018061aed5602291396040018481038252603d81526020018061af27603d913960400194505050505060006040518083038186803b1580156164ec57600080fd5b505af4158015616500573d6000803e3d6000fd5b505050508160036000016000858152602001908152602001600020600201600801819055506166fa565b60018081111561653657fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561656857fe5b14156166f95760036000016000848152602001908152602001600020600f016004018054806020026020016040519081016040528092919081815260200182805480156165d457602002820191906000526020600020905b8154815260200190600101908083116165c0575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561664e578082015181840152602081019050616633565b50505050905001935050505060206040518083038186803b15801561667257600080fd5b505af4158015616686573d6000803e3d6000fd5b505050506040513d602081101561669c57600080fd5b81019080805190602001909291905050506166f85760036000016000848152602001908152602001600020600f016004018290806001815401808255809150509060018203906000526020600020016000909192909190915055505b5b5b6000600181111561670757fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff16600181111561673957fe5b14156168615773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600360000160008681526020019081526020016000206002016007015414156040518263ffffffff1660e01b81526004018082151515158152602001806020018060200180602001848103845260068152602001807f42504d34303000000000000000000000000000000000000000000000000000008152506020018481038352602281526020018061aed5602291396040018481038252603f81526020018061ae6d603f913960400194505050505060006040518083038186803b15801561682357600080fd5b505af4158015616837573d6000803e3d6000fd5b50505050826003600001600084815260200190815260200160002060020160070181905550616a31565b60018081111561686d57fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff16600181111561689f57fe5b1415616a305760036000016000838152602001908152602001600020600f0160030180548060200260200160405190810160405280929190818152602001828054801561690b57602002820191906000526020600020905b8154815260200190600101908083116168f7575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561698557808201518184015260208101905061696a565b50505050905001935050505060206040518083038186803b1580156169a957600080fd5b505af41580156169bd573d6000803e3d6000fd5b505050506040513d60208110156169d357600080fd5b8101908080519060200190929190505050616a2f5760036000016000838152602001908152602001600020600f016003018390806001815401808255809150509060018203906000526020600020016000909192909190915055505b5b5b616a3961a97c565b905092915050565b616a4961abec565b6001600380602002604051908101604052809291908260038015616aa8576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411616a715790505b5050505050905090565b600060018060038110616ac157fe5b602091828204019190069054906101000a900460ff16905090565b600080600080600080600080600360000160008a815260200190815260200160002060140160009054906101000a900460ff1615616c6257600360000160008a815260200190815260200160002060020160010160009054906101000a900460ff166001811115616b4957fe5b9750600360000160008a815260200190815260200160002060020160010160019054906101000a900460ff166003811115616b8057fe5b9650600360000160008a815260200190815260200160002060020160010160029054906101000a900460ff166002811115616bb757fe5b9550600360000160008a8152602001908152602001600020600201600201549450600360000160008a815260200190815260200160002060020160030160009054906101000a900460ff169350600360000160008a8152602001908152602001600020600201600401549250600360000160008a8152602001908152602001600020600201600501549150600360000160008a81526020019081526020016000206002016006015490505b919395975091939597565b6000600660000160008484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060030160009054906101000a900460ff16905092915050565b6000616d6a6001600380602002604051908101604052809291908260038015616d5f576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411616d285790505b50505050508361a84f565b9050919050565b60608060008060036000016000868152602001908152602001600020600f01600301805480602002602001604051908101604052809291908181526020018280548015616ddd57602002820191906000526020600020905b815481526020019060010190808311616dc9575b5050505050935060036000016000868152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015616e4a57602002820191906000526020600020905b815481526020019060010190808311616e36575b5050505050925060036000016000868152602001908152602001600020600f0160010160009054906101000a900460ff16915060036000016000868152602001908152602001600020600f016002015490509193509193565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b878773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff1615616f1961a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616f7a578082015181840152602081019050616f5f565b50505050905090810190601f168015616fa75780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561701257600080fd5b505af4158015617026573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff161561707461a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156170d55780820151818401526020810190506170ba565b50505050905090810190601f1680156171025780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b15801561715057600080fd5b505af4158015617164573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f016004018054806020026020016040519081016040528092919081815260200182805480156171e857602002820191906000526020600020905b8154815260200190600101908083116171d4575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015617262578082015181840152602081019050617247565b50505050905001935050505060206040518083038186803b15801561728657600080fd5b505af415801561729a573d6000803e3d6000fd5b505050506040513d60208110156172b057600080fd5b810190808051906020019092919050505080156174715750600060018111156172d557fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561730757fe5b146174505760036000016000848152602001908152602001600020600f0160030180548060200260200160405190810160405280929190818152602001828054801561737257602002820191906000526020600020905b81548152602001906001019080831161735e575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156173ec5780820151818401526020810190506173d1565b50505050905001935050505060206040518083038186803b15801561741057600080fd5b505af4158015617424573d6000803e3d6000fd5b505050506040513d602081101561743a57600080fd5b8101908080519060200190929190505050617470565b836003600001600085815260200190815260200160002060020160070154145b5b1561747a61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156174db5780820151818401526020810190506174c0565b50505050905090810190601f1680156175085780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b15801561755657600080fd5b505af415801561756a573d6000803e3d6000fd5b50505050898973__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f0160020154146175b161a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156176125780820151818401526020810190506175f7565b50505050905090810190601f16801561763f5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b15801561768d57600080fd5b505af41580156176a1573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff16156176d6576000600c60006101000a81548160ff0219169083151502179055505b60008c8c60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506177158b8b8b8b61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156177d257fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061790892919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff0219169083151502179055505050905050868660086000848152602001908152602001600020600701600401919061797692919061ac0e565b5060016008600083815260200190815260200160002060070160050160016101000a81548160ff02191690831515021790555050505050505050505050505050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff1615617a0461a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617a65578082015181840152602081019050617a4a565b50505050905090810190601f168015617a925780820380516001836020036101000a031916815260200191505b50848103835260208152602001807f50726f63657373446566696e6974696f6e2e676574456c656d656e74547970658152506020018481038252602581526020018061b039602591396040019550505050505060006040518083038186803b158015617afd57600080fd5b505af4158015617b11573d6000803e3d6000fd5b505050506003600001600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000016000838152602001908152602001600020600201600a01805490509050919050565b7f414e3a2f2f61637469766974792d646566696e6974696f6e730000000000000081565b6000600660010180549050905090565b888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff1615617c1661a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617c77578082015181840152602081019050617c5c565b50505050905090810190601f168015617ca45780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015617d0f57600080fd5b505af4158015617d23573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff1615617d7161a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617dd2578082015181840152602081019050617db7565b50505050905090810190601f168015617dff5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b158015617e4d57600080fd5b505af4158015617e61573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f01600401805480602002602001604051908101604052809291908181526020018280548015617ee557602002820191906000526020600020905b815481526020019060010190808311617ed1575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015617f5f578082015181840152602081019050617f44565b50505050905001935050505060206040518083038186803b158015617f8357600080fd5b505af4158015617f97573d6000803e3d6000fd5b505050506040513d6020811015617fad57600080fd5b8101908080519060200190929190505050801561816e575060006001811115617fd257fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600181111561800457fe5b1461814d5760036000016000848152602001908152602001600020600f0160030180548060200260200160405190810160405280929190818152602001828054801561806f57602002820191906000526020600020905b81548152602001906001019080831161805b575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156180e95780820151818401526020810190506180ce565b50505050905001935050505060206040518083038186803b15801561810d57600080fd5b505af4158015618121573d6000803e3d6000fd5b505050506040513d602081101561813757600080fd5b810190808051906020019092919050505061816d565b836003600001600085815260200190815260200160002060020160070154145b5b1561817761a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156181d85780820151818401526020810190506181bd565b50505050905090810190601f1680156182055780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b15801561825357600080fd5b505af4158015618267573d6000803e3d6000fd5b505050508a8a73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f0160020154146182ae61a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561830f5780820151818401526020810190506182f4565b50505050905090810190601f16801561833c5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b15801561838a57600080fd5b505af415801561839e573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff16156183d3576000600c60006101000a81548160ff0219169083151502179055505b60008d8d60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506184128c8c8c8c61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156184cf57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061860592919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff0219169083151502179055505050905050876008600083815260200190815260200160002060040160000181905550866008600083815260200190815260200160002060040160010181905550856008600083815260200190815260200160002060040160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016008600083815260200190815260200160002060040160020160146101000a81548160ff0219169083151502179055505050505050505050505050505050565b7f414e3a2f2f70726f636573732d646566696e6974696f6e73000000000000000081565b6000600c60009054906101000a900460ff16905090565b6000600c60009054906101000a900460ff161561878f576000600c60006101000a81548160ff0219169083151502179055505b600360000160008b815260200190815260200160002060140160009054906101000a900460ff16156187ca576187c361a985565b9050618cb6565b8573__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561881b57600080fd5b505af415801561882f573d6000803e3d6000fd5b505050506040513d602081101561884557600080fd5b810190808051906020019092919050505061894d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166358f2a46d876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156188cd57600080fd5b505afa1580156188e1573d6000803e3d6000fd5b505050506040513d60208110156188f757600080fd5b810190808051906020019092919050505061891b5761891461a98f565b9050618cb6565b6001600381111561892857fe5b88600381111561893457fe5b146189485761894161a999565b9050618cb6565b61897c565b6001600381111561895a57fe5b88600381111561896657fe5b141561897b5761897461a9a3565b9050618cb6565b5b60036001018a90806001815401808255809150509060018203906000526020600020016000909192909190915055506000600360000160008c815260200190815260200160002060010160006101000a81548160ff021916908360018111156189e157fe5b021790555089600360000160008c81526020019081526020016000206002016000018190555088600360000160008c815260200190815260200160002060020160010160006101000a81548160ff02191690836001811115618a3f57fe5b021790555087600360000160008c815260200190815260200160002060020160010160016101000a81548160ff02191690836003811115618a7c57fe5b021790555086600360000160008c815260200190815260200160002060020160010160026101000a81548160ff02191690836002811115618ab957fe5b021790555085600360000160008c81526020019081526020016000206002016002018190555084600360000160008c815260200190815260200160002060020160030160006101000a81548160ff02191690831515021790555083600360000160008c81526020019081526020016000206002016004018190555082600360000160008c81526020019081526020016000206002016005018190555081600360000160008c8152602001908152602001600020600201600601819055506001600360000160008c815260200190815260200160002060140160006101000a81548160ff0219169083151502179055507f414e3a2f2f61637469766974792d646566696e6974696f6e73000000000000007f8535517f68417fecb5815fc8ee689d6176b52551602cd478f4869fa464105d4e308c8c6001811115618bf857fe5b8c6003811115618c0457fe5b8c6002811115618c1057fe5b8c8c8c8c8c604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff168152602001868152602001851515151581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a2618cb361a97c565b90505b9998505050505050505050565b600c60009054906101000a900460ff1615618cf4576000600c60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600089815260200190815260200160002060140160009054906101000a900460ff168015618d7d575060006001811115618d4957fe5b600360000160008a815260200190815260200160002060010160009054906101000a900460ff166001811115618d7b57fe5b145b15618d8661a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618de7578082015181840152602081019050618dcc565b50505050905090810190601f168015618e145780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061af64602a91396040018481038252607b81526020018061af8e607b91396080019550505050505060006040518083038186803b158015618e6257600080fd5b505af4158015618e76573d6000803e3d6000fd5b5050505060006001811115618e8757fe5b856001811115618e9357fe5b141561900c5760036000016000878152602001908152602001600020600201600b01600085815260200190815260200160002060020160149054906101000a900460ff16618f2257600360000160008781526020019081526020016000206002016009018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600b016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555090505061919a565b60018081111561901857fe5b85600181111561902457fe5b14156191995760036000016000878152602001908152602001600020600201600c01600085815260200190815260200160002060020160149054906101000a900460ff166190b35760036000016000878152602001908152602001600020600201600a018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600c016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b5b7f414e3a2f2f646174612d6d617070696e677300000000000000000000000000007f8f625bb1b0890f994d35093a4593a61e7d37802f8f6e6d454c6826fbd517067e3088878787878c60018111156191ee57fe5b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200197505050505050505060405180910390a2505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060140160009054906101000a900460ff16156192d961a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561933a57808201518184015260208101905061931f565b50505050905090810190601f1680156193675780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b1580156193d257600080fd5b505af41580156193e6573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060140160009054906101000a900460ff161561943461a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561949557808201518184015260208101905061947a565b50505050905090810190601f1680156194c25780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603481526020018061adea603491396040019550505050505060006040518083038186803b15801561951057600080fd5b505af4158015619524573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020600f016004018054806020026020016040519081016040528092919081815260200182805480156195a857602002820191906000526020600020905b815481526020019060010190808311619594575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015619622578082015181840152602081019050619607565b50505050905001935050505060206040518083038186803b15801561964657600080fd5b505af415801561965a573d6000803e3d6000fd5b505050506040513d602081101561967057600080fd5b8101908080519060200190929190505050801561983157506000600181111561969557fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660018111156196c757fe5b146198105760036000016000848152602001908152602001600020600f0160030180548060200260200160405190810160405280929190818152602001828054801561973257602002820191906000526020600020905b81548152602001906001019080831161971e575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156197ac578082015181840152602081019050619791565b50505050905001935050505060206040518083038186803b1580156197d057600080fd5b505af41580156197e4573d6000803e3d6000fd5b505050506040513d60208110156197fa57600080fd5b8101908080519060200190929190505050619830565b836003600001600085815260200190815260200160002060020160070154145b5b1561983a61a747565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561989b578082015181840152602081019050619880565b50505050905090810190601f1680156198c85780820380516001836020036101000a031916815260200191505b508481038352603081526020018061aef7603091396040018481038252603081526020018061b094603091396040019550505050505060006040518083038186803b15801561991657600080fd5b505af415801561992a573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020600f01600201541461997161a784565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156199d25780820151818401526020810190506199b7565b50505050905090810190601f1680156199ff5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061b009603091396040018481038252603681526020018061b05e603691396040019550505050505060006040518083038186803b158015619a4d57600080fd5b505af4158015619a61573d6000803e3d6000fd5b50505050600c60009054906101000a900460ff1615619a96576000600c60006101000a81548160ff0219169083151502179055505b60008b8b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050619ad58a8a8a8a61a7c1565b60086000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115619b9257fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190619cc892919061aa8c565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff0219169083151502179055505050905050856008600083815260200190815260200160002060070160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016008600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60008060008060006003600001600088815260200190815260200160002060140160009054906101000a900460ff1615619ee45785945085935060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b60006003600001600083815260200190815260200160002060140160009054906101000a900460ff169050919050565b6000600c60009054906101000a900460ff1615619f51576000600c60006101000a81548160ff0219169083151502179055505b619f5961a97c565b905060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614619f965783619fba565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905060008184604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506006600001600082815260200190815260200160002060030160009054906101000a900460ff161561a05457829250505061a2a1565b600015158273ffffffffffffffffffffffffffffffffffffffff16637180f973866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561a0a957600080fd5b505afa15801561a0bd573d6000803e3d6000fd5b505050506040513d602081101561a0d357600080fd5b81019080805190602001909291905050501515141561a0fd5761a0f461a98f565b9250505061a2a1565b60066001018190806001815401808255809150509060018203906000526020600020016000909192909190915055600660000160008381526020019081526020016000206000018190555060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001858152506006600001600083815260200190815260200160002060010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060016006600001600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f71e1caf18038ec62cce99f19463f24d1083d26dd1fcc8a956a1821c9f07fbc1c3086604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a250505b92915050565b6000600160026003811061a2b757fe5b602091828204019190069054906101000a900460ff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561a34661a9ad565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a3a757808201518184015260208101905061a38c565b50505050905090810190601f16801561a3d45780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561a45c57600080fd5b505af415801561a470573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461a4c661a93f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a52757808201518184015260208101905061a50c565b50505050905090810190601f16801561a5545780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f776e65642e7472616e736665724f776e6572736869700000000000000000008152506020018481038252601e8152602001807f546865206e6577206f776e6572206d757374206e6f74206265204e554c4c00008152506020019550505050505060006040518083038186803b15801561a5dc57600080fd5b505af415801561a5f0573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461a7445780600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c8600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b61a7c961ac8e565b61a7d161acd3565b60405180608001604052808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090508082600001819052508260ff16600581111561a82557fe5b8260200190600581111561a83557fe5b9081600581111561a84257fe5b8152505050949350505050565b600061a87d8360006003811061a86157fe5b60200201518360006003811061a87357fe5b602002015161a9ea565b90506000811461a88f5780905061a8fc565b61a8bb8360016003811061a89f57fe5b60200201518360016003811061a8b157fe5b602002015161a9ea565b90506000811461a8cd5780905061a8fc565b61a8f98360026003811061a8dd57fe5b60200201518360026003811061a8ef57fe5b602002015161a9ea565b90505b92915050565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60006103ea905090565b60006103e9905090565b6000610bb9905090565b6000610bba905090565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60008260ff168260ff16141561aa03576000905061aa3e565b8260ff168260ff16101561aa39577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061aa3e565b600190505b92915050565b50805460018160011615610100020316600290046000825580601f1061aa6a575061aa89565b601f01602090049060005260206000209081019061aa88919061ad19565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061aacd57805160ff191683800117855561aafb565b8280016001018555821561aafb579182015b8281111561aafa57825182559160200191906001019061aadf565b5b50905061ab08919061ad19565b5090565b604051806101a00160405280600080191681526020016000600181111561ab2f57fe5b81526020016000600381111561ab4157fe5b81526020016000600281111561ab5357fe5b815260200160008019168152602001600015158152602001600080191681526020016000801916815260200160008019168152602001600080191681526020016000801916815260200160608152602001606081525090565b6040518060a00160405280600080191681526020016000600281111561abce57fe5b81526020016000801916815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061ac4f57803560ff191683800117855561ac7d565b8280016001018555821561ac7d579182015b8281111561ac7c57823582559160200191906001019061ac61565b5b50905061ac8a919061ad19565b5090565b604051806080016040528061aca161ad3e565b81526020016000600581111561acb357fe5b815260200161acc061ad3e565b815260200161accd61ad84565b81525090565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b61ad3b91905b8082111561ad3757600081600090555060010161ad1f565b5090565b90565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b604051806101000160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001600081526020016000815260200160608152602001600015158152602001600015158152509056fe5468652074617267657420656c656d656e74202861637469766974797c676174657761792920646f6573206e6f74206578697374416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a65477261706820656c656d656e742077697468205f696420616c7265616479206578697374734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e67207072656465636573736f72206f6620616e20616374697669747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a656450726f63657373446566696e6974696f6e2e6372656174655472616e736974696f6e50726f63657373446566696e6974696f6e2e7072655f676174657761794f75745472616e736974696f6e4578697374734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f6620616e20616374697669747944656661756c7450726f63657373446566696e6974696f6e2e637265617465446174614d617070696e6743616e6e6f74206372656174652064617461206d617070696e672073696e636520676976656e206163746976697479496420697320656974686572206e6f6e2d6578697374656e74206f72206d61792062656c6f6e6720746f2042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e4741544557415950726f63657373446566696e6974696f6e2e7072655f7461726765744e6f7444656661756c745472616e736974696f6e477261706820656c656d656e74207769746820676976656e204944206e6f7420666f756e645468652074617267657420656c656d656e7420697320746865206761746577617927732064656661756c74207472616e736974696f6e4e6f207472616e736974696f6e20666f756e64206265747765656e206761746577617920616e64206163746976697479a265627a7a72315820a311039f98ba1f2405171495f810f287104293496f0bb61ee48fddc1a13bd1df64736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$d688d3e5094c429bbf767db5b46e89d18f$", bpm_model_BpmModelLib_sol_BpmModelLib);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        bytecode = Replace(bytecode, "$64db665dd301bb0cc2cc68502a9bd7c360$", commons_utils_TypeUtilsLib_sol_TypeUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActivityDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActivityDefinitionCreation", this.address, callback); }
        LogDataMappingCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataMappingCreation", this.address, callback); }
        LogOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOwnerChanged", this.address, callback); }
        LogProcessDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionCreation", this.address, callback); }
        LogProcessDefinitionInterfaceIdUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionInterfaceIdUpdate", this.address, callback); }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_ID_ACTIVITY_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_ACTIVITY_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ACTIVITY_DEFINITIONS();
            });
        }
        EVENT_ID_DATA_MAPPINGS() {
            const data = Encode(this.client).EVENT_ID_DATA_MAPPINGS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_MAPPINGS();
            });
        }
        EVENT_ID_PROCESS_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_PROCESS_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_PROCESS_DEFINITIONS();
            });
        }
        addProcessInterfaceImplementation(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).addProcessInterfaceImplementation(_model, _interfaceId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addProcessInterfaceImplementation();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createActivityDefinition(_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) {
            const data = Encode(this.client).createActivityDefinition(_id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createActivityDefinition();
            });
        }
        createDataMapping(_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).createDataMapping(_activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createDataMapping();
            });
        }
        createGateway(_id: Buffer, _type: number) {
            const data = Encode(this.client).createGateway(_id, _type);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createGateway();
            });
        }
        createTransition(_source: Buffer, _target: Buffer) {
            const data = Encode(this.client).createTransition(_source, _target);
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransition();
            });
        }
        createTransitionConditionForAddress(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForAddress(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForAddress();
            });
        }
        createTransitionConditionForBool(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) {
            const data = Encode(this.client).createTransitionConditionForBool(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBool();
            });
        }
        createTransitionConditionForBytes32(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) {
            const data = Encode(this.client).createTransitionConditionForBytes32(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBytes32();
            });
        }
        createTransitionConditionForDataStorage(_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) {
            const data = Encode(this.client).createTransitionConditionForDataStorage(_gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForDataStorage();
            });
        }
        createTransitionConditionForInt(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForInt(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForInt();
            });
        }
        createTransitionConditionForString(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForString(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForString();
            });
        }
        createTransitionConditionForUint(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForUint(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForUint();
            });
        }
        getActivitiesForParticipant(_participantId: Buffer) {
            const data = Encode(this.client).getActivitiesForParticipant(_participantId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivitiesForParticipant();
            });
        }
        getActivityAtIndex(_index: number) {
            const data = Encode(this.client).getActivityAtIndex(_index);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityAtIndex();
            });
        }
        getActivityData(_id: Buffer) {
            const data = Encode(this.client).getActivityData(_id);
            return Call<Tx, {
                activityType: number;
                taskType: number;
                taskBehavior: number;
                assignee: Buffer;
                multiInstance: boolean;
                application: Buffer;
                subProcessModelId: Buffer;
                subProcessDefinitionId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityData();
            });
        }
        getActivityGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getActivityGraphDetails(_id);
            return Call<Tx, {
                predecessor: Buffer;
                successor: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityGraphDetails();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getElementType(_id: Buffer) {
            const data = Encode(this.client).getElementType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getElementType();
            });
        }
        getGatewayGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getGatewayGraphDetails(_id);
            return Call<Tx, {
                inputs: Buffer[];
                outputs: Buffer[];
                gatewayType: number;
                defaultOutput: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGatewayGraphDetails();
            });
        }
        getId() {
            const data = Encode(this.client).getId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getId();
            });
        }
        getImplementedProcessInterfaceAtIndex(_idx: number) {
            const data = Encode(this.client).getImplementedProcessInterfaceAtIndex(_idx);
            return Call<Tx, {
                modelAddress: string;
                interfaceId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getImplementedProcessInterfaceAtIndex();
            });
        }
        getInDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getInDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingDetails();
            });
        }
        getInDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getInDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingIdAtIndex();
            });
        }
        getInDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getInDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingKeys();
            });
        }
        getModel() {
            const data = Encode(this.client).getModel();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModel();
            });
        }
        getModelId() {
            const data = Encode(this.client).getModelId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModelId();
            });
        }
        getNumberOfActivities() {
            const data = Encode(this.client).getNumberOfActivities();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfActivities();
            });
        }
        getNumberOfImplementedProcessInterfaces() {
            const data = Encode(this.client).getNumberOfImplementedProcessInterfaces();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfImplementedProcessInterfaces();
            });
        }
        getNumberOfInDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfInDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfInDataMappings();
            });
        }
        getNumberOfOutDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfOutDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfOutDataMappings();
            });
        }
        getOutDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getOutDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingDetails();
            });
        }
        getOutDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getOutDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingIdAtIndex();
            });
        }
        getOutDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getOutDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingKeys();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getStartActivity() {
            const data = Encode(this.client).getStartActivity();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getStartActivity();
            });
        }
        implementsProcessInterface(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).implementsProcessInterface(_model, _interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).implementsProcessInterface();
            });
        }
        initialize(_id: Buffer, _model: string) {
            const data = Encode(this.client).initialize(_id, _model);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        isValid() {
            const data = Encode(this.client).isValid();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isValid();
            });
        }
        modelElementExists(_id: Buffer) {
            const data = Encode(this.client).modelElementExists(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).modelElementExists();
            });
        }
        resolveTransitionCondition(_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveTransitionCondition(_sourceId, _targetId, _dataStorage);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveTransitionCondition();
            });
        }
        setDefaultTransition(_gatewayId: Buffer, _targetElementId: Buffer) {
            const data = Encode(this.client).setDefaultTransition(_gatewayId, _targetElementId);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDefaultTransition();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferOwnership(_newOwner: string) {
            const data = Encode(this.client).transferOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferOwnership();
            });
        }
        validate() {
            const data = Encode(this.client).validate();
            return Call<Tx, [boolean, Buffer]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).validate();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_ID_ACTIVITY_DEFINITIONS: () => { return client.encode("AF201B90", []); },
        EVENT_ID_DATA_MAPPINGS: () => { return client.encode("6983067E", []); },
        EVENT_ID_PROCESS_DEFINITIONS: () => { return client.encode("BA840F64", []); },
        addProcessInterfaceImplementation: (_model: string, _interfaceId: Buffer) => { return client.encode("F001897D", ["address", "bytes32"], _model, _interfaceId); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createActivityDefinition: (_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) => { return client.encode("BDE6EF58", ["bytes32", "uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"], _id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId); },
        createDataMapping: (_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("C5930E29", ["bytes32", "uint8", "bytes32", "bytes32", "bytes32", "address"], _activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage); },
        createGateway: (_id: Buffer, _type: number) => { return client.encode("32D37781", ["bytes32", "uint8"], _id, _type); },
        createTransition: (_source: Buffer, _target: Buffer) => { return client.encode("6C28E102", ["bytes32", "bytes32"], _source, _target); },
        createTransitionConditionForAddress: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("DD2F3E84", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "address"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBool: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) => { return client.encode("3D34113E", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bool"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBytes32: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) => { return client.encode("23FF5DD3", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForDataStorage: (_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) => { return client.encode("B2816749", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32", "bytes32", "address"], _gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage); },
        createTransitionConditionForInt: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("26417651", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "int256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForString: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("8EFB695C", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "string"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForUint: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("5316C206", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "uint256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        getActivitiesForParticipant: (_participantId: Buffer) => { return client.encode("14E42605", ["bytes32"], _participantId); },
        getActivityAtIndex: (_index: number) => { return client.encode("3BF2C2A0", ["uint256"], _index); },
        getActivityData: (_id: Buffer) => { return client.encode("758CBD2E", ["bytes32"], _id); },
        getActivityGraphDetails: (_id: Buffer) => { return client.encode("5B4025E1", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getElementType: (_id: Buffer) => { return client.encode("9C4AA334", ["bytes32"], _id); },
        getGatewayGraphDetails: (_id: Buffer) => { return client.encode("79238A10", ["bytes32"], _id); },
        getId: () => { return client.encode("5D1CA631", []); },
        getImplementedProcessInterfaceAtIndex: (_idx: number) => { return client.encode("4B53BE1D", ["uint256"], _idx); },
        getInDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("E3621D20", ["bytes32", "bytes32"], _activityId, _id); },
        getInDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("15064393", ["bytes32", "uint256"], _activityId, _idx); },
        getInDataMappingKeys: (_activityId: Buffer) => { return client.encode("3D9A2352", ["bytes32"], _activityId); },
        getModel: () => { return client.encode("A0BFA1E0", []); },
        getModelId: () => { return client.encode("361A5672", []); },
        getNumberOfActivities: () => { return client.encode("006129D9", []); },
        getNumberOfImplementedProcessInterfaces: () => { return client.encode("B24B4BCC", []); },
        getNumberOfInDataMappings: (_activityId: Buffer) => { return client.encode("2B8C74CE", ["bytes32"], _activityId); },
        getNumberOfOutDataMappings: (_activityId: Buffer) => { return client.encode("AE73D8B3", ["bytes32"], _activityId); },
        getOutDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("3A70DCEF", ["bytes32", "bytes32"], _activityId, _id); },
        getOutDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("3796D3A4", ["bytes32", "uint256"], _activityId, _idx); },
        getOutDataMappingKeys: (_activityId: Buffer) => { return client.encode("08A104AA", ["bytes32"], _activityId); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getStartActivity: () => { return client.encode("0F9C79E2", []); },
        implementsProcessInterface: (_model: string, _interfaceId: Buffer) => { return client.encode("77198ED4", ["address", "bytes32"], _model, _interfaceId); },
        initialize: (_id: Buffer, _model: string) => { return client.encode("6910E334", ["bytes32", "address"], _id, _model); },
        isValid: () => { return client.encode("BB5D40EB", []); },
        modelElementExists: (_id: Buffer) => { return client.encode("E3C83A16", ["bytes32"], _id); },
        resolveTransitionCondition: (_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) => { return client.encode("5478A0C9", ["bytes32", "bytes32", "address"], _sourceId, _targetId, _dataStorage); },
        setDefaultTransition: (_gatewayId: Buffer, _targetElementId: Buffer) => { return client.encode("21A0C66F", ["bytes32", "bytes32"], _gatewayId, _targetElementId); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferOwnership: (_newOwner: string) => { return client.encode("F2FDE38B", ["address"], _newOwner); },
        validate: () => { return client.encode("6901F668", []); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_ID_ACTIVITY_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_MAPPINGS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_PROCESS_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addProcessInterfaceImplementation: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createActivityDefinition: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        createDataMapping: (): void => { return; },
        createGateway: (): void => { return; },
        createTransition: (): [number] => { return client.decode(data, ["uint256"]); },
        createTransitionConditionForAddress: (): void => { return; },
        createTransitionConditionForBool: (): void => { return; },
        createTransitionConditionForBytes32: (): void => { return; },
        createTransitionConditionForDataStorage: (): void => { return; },
        createTransitionConditionForInt: (): void => { return; },
        createTransitionConditionForString: (): void => { return; },
        createTransitionConditionForUint: (): void => { return; },
        getActivitiesForParticipant: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getActivityAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getActivityData: (): {
            activityType: number;
            taskType: number;
            taskBehavior: number;
            assignee: Buffer;
            multiInstance: boolean;
            application: Buffer;
            subProcessModelId: Buffer;
            subProcessDefinitionId: Buffer;
        } => {
            const [activityType, taskType, taskBehavior, assignee, multiInstance, application, subProcessModelId, subProcessDefinitionId] = client.decode(data, ["uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"]);
            return { activityType: activityType, taskType: taskType, taskBehavior: taskBehavior, assignee: assignee, multiInstance: multiInstance, application: application, subProcessModelId: subProcessModelId, subProcessDefinitionId: subProcessDefinitionId };
        },
        getActivityGraphDetails: (): {
            predecessor: Buffer;
            successor: Buffer;
        } => {
            const [predecessor, successor] = client.decode(data, ["bytes32", "bytes32"]);
            return { predecessor: predecessor, successor: successor };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getElementType: (): [number] => { return client.decode(data, ["uint8"]); },
        getGatewayGraphDetails: (): {
            inputs: Buffer[];
            outputs: Buffer[];
            gatewayType: number;
            defaultOutput: Buffer;
        } => {
            const [inputs, outputs, gatewayType, defaultOutput] = client.decode(data, ["bytes32[]", "bytes32[]", "uint8", "bytes32"]);
            return { inputs: inputs, outputs: outputs, gatewayType: gatewayType, defaultOutput: defaultOutput };
        },
        getId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getImplementedProcessInterfaceAtIndex: (): {
            modelAddress: string;
            interfaceId: Buffer;
        } => {
            const [modelAddress, interfaceId] = client.decode(data, ["address", "bytes32"]);
            return { modelAddress: modelAddress, interfaceId: interfaceId };
        },
        getInDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getInDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getInDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getModel: (): [string] => { return client.decode(data, ["address"]); },
        getModelId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getNumberOfActivities: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfImplementedProcessInterfaces: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfInDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfOutDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOutDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getOutDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getOutDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getStartActivity: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        implementsProcessInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        initialize: (): void => { return; },
        isValid: (): [boolean] => { return client.decode(data, ["bool"]); },
        modelElementExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        resolveTransitionCondition: (): [boolean] => { return client.decode(data, ["bool"]); },
        setDefaultTransition: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferOwnership: (): void => { return; },
        validate: (): [boolean, Buffer] => { return client.decode(data, ["bool", "bytes32"]); }
    }; };
}