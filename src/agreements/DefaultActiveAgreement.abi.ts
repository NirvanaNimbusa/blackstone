//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156125b357600080fd5b505af41580156125c7573d6000803e3d6000fd5b505050506040513d60208110156125dd57600080fd5b8101908080519060200190929190505050505050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561269557600080fd5b505af41580156126a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156126d357600080fd5b81019080805160405193929190846401000000008211156126f357600080fd5b8382019150602082018581111561270957600080fd5b825186600182028301116401000000008211171561272657600080fd5b8083526020830192505050908051906020019080838360005b8381101561275a57808201518184015260208101905061273f565b50505050905090810190601f1680156127875780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601380549050905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80600d60156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1680156128f45750816014600085815260200190815260200160002060000180549050115b1561294c5760146000848152602001908152602001600020600001828154811061291a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612951565b600090505b92915050565b61295f61ce1e565b8381600001818152505061297161ab21565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506129e381600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b612ab261ce1e565b82816000018181525050612ac461b3b0565b816020019060ff16908160ff168152505081816040019015159081151581525050612af981600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b6000612bad82600361b3b990919063ffffffff16565b60e001519050919050565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1615612e4f576014600084815260200190815260200160002060010160009054906101000a900460ff16612cb05760006014600085815260200190815260200160002060000180549050118015612cab57508173ffffffffffffffffffffffffffffffffffffffff1660146000858152602001908152602001600020600001600081548110612c6857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b612e4c565b60146000848152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015612d4657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612cfc575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015612dec578082015181840152602081019050612dd1565b50505050905001935050505060206040518083038186803b158015612e1057600080fd5b505af4158015612e24573d6000803e3d6000fd5b505050506040513d6020811015612e3a57600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b158015612ef057600080fd5b505af4158015612f04573d6000803e3d6000fd5b505050506040513d6020811015612f1a57600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015612fad57600080fd5b505af4158015612fc1573d6000803e3d6000fd5b505050506040513d6040811015612fd757600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461304c61c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156130ad578082015181840152602081019050613092565b50505050905090810190601f1680156130da5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018061e951602491396040019550505050505060006040518083038186803b15801561314557600080fd5b505af4158015613159573d6000803e3d6000fd5b505050506000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561355c5781601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156133df57600080fd5b505af41580156133f3573d6000803e3d6000fd5b505050506040513d602081101561340957600080fd5b81019080805190602001909291905050508015613485575060006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b1561355b576002600d60196101000a81548160ff021916908360078111156134a957fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561350c57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25b5b5050565b600061357682600361b3b990919063ffffffff16565b604001519050919050565b606061359782600361b3b990919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156135ff57600080fd5b505af4158015613613573d6000803e3d6000fd5b505050506040513d602081101561362957600080fd5b81019080805190602001909291905050509050919050565b600061365782600361b3b990919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156136be57600080fd5b505af41580156136d2573d6000803e3d6000fd5b505050506040513d60408110156136e857600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006005600083815260200190815260200160002060010160010154146137b6576005600082815260200190815260200160002060010160010154915050613b3a565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff1615613b3857600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156139ba5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146138a861c280565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156139095780820151818401526020810190506138ee565b50505050905090810190601f1680156139365780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018061ec53606591396080019550505050505060006040518083038186803b1580156139a157600080fd5b505af41580156139b5573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015613a5957600080fd5b505af4158015613a6d573d6000803e3d6000fd5b505050506040513d6040811015613a8357600080fd5b810190808051906020019092919080519060200190929190505050915091508173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613af357600080fd5b505afa158015613b07573d6000803e3d6000fd5b505050506040513d6020811015613b1d57600080fd5b81019080805190602001909291905050509350505050613b3a565b505b9392505050565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015613c1557600080fd5b505af4158015613c29573d6000803e3d6000fd5b505050506040513d6020811015613c3f57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015613d6757600080fd5b505af4158015613d7b573d6000803e3d6000fd5b505050506040513d6020811015613d9157600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015613e9e57600080fd5b505af4158015613eb2573d6000803e3d6000fd5b505050506040513d6020811015613ec857600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b6000600260006003811061402257fe5b602091828204019190069054906101000a900460ff16905090565b6140478133612518565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6140b58333612bb8565b156140be61c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561411f578082015181840152602081019050614104565b50505050905090810190601f16801561414c5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e68e602b91396040018481038252603481526020018061e77a603491396040019550505050505060006040518083038186803b15801561419a57600080fd5b505af41580156141ae573d6000803e3d6000fd5b5050505081600d60196101000a81548160ff021916908360078111156141d057fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561423357fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25050565b6000600d60199054906101000a900460ff1660078111156142a257fe5b905090565b6000600d60159054906101000a900463ffffffff16905090565b60006143b66002600380602002604051908101604052809291908260038015614325576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116142ee5790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561437057600080fd5b505afa158015614384573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156143a957600080fd5b810190809190505061c2bd565b9050919050565b60008060008060006014600087815260200190815260200160002060010160039054906101000a900460ff1694508415614480576014600087815260200190815260200160002060010160009054906101000a900460ff1693506014600087815260200190815260200160002060010160019054906101000a900460ff1692506014600087815260200190815260200160002060010160029054906101000a900460ff169150601460008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b6144a061ce1e565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161012001819052506144fd61c370565b816020019060ff16908160ff168152505061452281600361ab2a90919063ffffffff16565b5050505050565b61453161ce1e565b8281600001818152505061454361c379565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506145a081600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b61466e61ce1e565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c001819052506146cb61c382565b816020019060ff16908160ff16815250506146f081600361ab2a90919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461474961c38b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156147aa57808201518184015260208101905061478f565b50505050905090810190601f1680156147d75780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018061ed1e603591396040019550505050505060006040518083038186803b15801561484257600080fd5b505af4158015614856573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000861480156148845750600085145b61488c61c280565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156148ed5780820151818401526020810190506148d2565b50505050905090810190601f16801561491a5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603681526020018061e8f2603691396040019550505050505060006040518083038186803b15801561498557600080fd5b505af4158015614999573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff16614a545760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514614af257846005600083815260200190815260200160002060010160010181905550614bc4565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b614d368133612e55565b50565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015614d8d57602002820191906000526020600020905b815481526020019060010190808311614d79575b5050505050905090565b60085481565b614da561ce1e565b82816000018181525050614db761c3c8565b816020019060ff16908160ff1681525050818160a0018181525050614de681600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b614e8861cf33565b6002600380602002604051908101604052809291908260038015614ee7576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411614eb05790505b5050505050905090565b60006002600160038110614f0157fe5b602091828204019190069054906101000a900460ff16905090565b6000614f8b6002600380602002604051908101604052809291908260038015614f80576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411614f495790505b50505050508361c2bd565b9050919050565b6000601280549050821015614fe05760128281548110614fae57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050614fe1565b5b919050565b6000601280549050905090565b600080600090505b6012805490508110156150ec578273ffffffffffffffffffffffffffffffffffffffff16601060006012848154811061503057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156150df5760019150506150f2565b8080600101915050614ffb565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff166151a761c3d7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156152085780820151818401526020810190506151ed565b50505050905090810190601f1680156152355780820380516001836020036101000a031916815260200191505b508481038352603281526020018061ebcf603291396040018481038252603f81526020018061e8b3603f91396040019550505050505060006040518083038186803b15801561528357600080fd5b505af4158015615297573d6000803e3d6000fd5b505050506014600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146153315781615333565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b6000806014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050116155dc576000615670565b6014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000160008154811061564457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b61567d61ce1e565b8281600001818152505061568f61c414565b816020019060ff16908160ff1681525050818160e00181815250506156be81600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6007808111156157ca57fe5b600d60199054906101000a900460ff1660078111156157e557fe5b146157ee61c280565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561584f578082015181840152602081019050615834565b50505050905090810190601f16801561587c5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018061eba5602a91396040019550505050505060006040518083038186803b1580156158e757600080fd5b505af41580156158fb573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561594757600080fd5b505afa15801561595b573d6000803e3d6000fd5b505050506040513d602081101561597157600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905080158015615ac4575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b87836159e361c41d565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015615a8857600080fd5b505af4158015615a9c573d6000803e3d6000fd5b505050506040513d6020811015615ab257600080fd5b81019080805190602001909291905050505b15615b87578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160200191505060206040518083038186803b158015615b4957600080fd5b505afa158015615b5d573d6000803e3d6000fd5b505050506040513d6020811015615b7357600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215615bab61c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615c0c578082015181840152602081019050615bf1565b50505050905090810190601f168015615c395780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e81526020018061e806602e91396040019550505050505060006040518083038186803b158015615ca457600080fd5b505af4158015615cb8573d6000803e3d6000fd5b50505050600060056007811115615ccb57fe5b600d60199054906101000a900460ff166007811115615ce657fe5b14158015615d1a575060036007811115615cfc57fe5b600d60199054906101000a900460ff166007811115615d1757fe5b14155b8015615d4c575060046007811115615d2e57fe5b600d60199054906101000a900460ff166007811115615d4957fe5b14155b90508015615e995773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060128054905011615d7f61c4fb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615de0578082015181840152602081019050615dc5565b50505050905090810190601f168015615e0d5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018061e834604d91396060019550505050505060006040518083038186803b158015615e7857600080fd5b505af4158015615e8c573d6000803e3d6000fd5b50505050615e9861c538565b5b6007600d60196101000a81548160ff02191690836007811115615eb857fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff166007811115615f1b57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a2615f937f41475245454d454e545f53544154455f4348414e4745440000000000000000003061c634565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2600d60199054906101000a900460ff16935050505090565b61604061ce1e565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610200018190525061609d61c75d565b816020019060ff16908160ff16815250506160c281600361ab2a90919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6161348333612bb8565b1561613d61c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561619e578082015181840152602081019050616183565b50505050905090810190601f1680156161cb5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e68e602b91396040018481038252603481526020018061e77a603491396040019550505050505060006040518083038186803b15801561621957600080fd5b505af415801561622d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600088815260200190815260200160002060010160039054906101000a900460ff1661627761c766565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156162d85780820151818401526020810190506162bd565b50505050905090810190601f1680156163055780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb80602591396040018481038252603481526020018061ed83603491396040019550505050505060006040518083038186803b15801561635357600080fd5b505af4158015616367573d6000803e3d6000fd5b50505050836014600087815260200190815260200160002060010160006101000a81548160ff021916908315150217905550826014600087815260200190815260200160002060010160016101000a81548160ff021916908315150217905550816014600087815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b6000806000806164978686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012061a9f7565b90919293945090919293508094508195508296508397505050505092959194509250565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561655d57600080fd5b505af4158015616571573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561659b57600080fd5b81019080805160405193929190846401000000008211156165bb57600080fd5b838201915060208201858111156165d157600080fd5b82518660018202830111640100000000821117156165ee57600080fd5b8083526020830192505050908051906020019080838360005b83811015616622578082015181840152602081019050616607565b50505050905090810190601f16801561664f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156166fe57506166fc60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012033612bb8565b155b61670661c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561676757808201518184015260208101905061674c565b50505050905090810190601f1680156167945780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ea8a602591396040018481038252603481526020018061e77a603491396040019550505050505060006040518083038186803b1580156167e257600080fd5b505af41580156167f6573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff161561684161c7a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156168a2578082015181840152602081019050616887565b50505050905090810190601f1680156168cf5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ea8a602591396040018481038252603981526020018061e655603991396040019550505050505060006040518083038186803b15801561691d57600080fd5b505af4158015616931573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160019054906101000a900460ff161561697c61c4fb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156169dd5780820151818401526020810190506169c2565b50505050905090810190601f168015616a0a5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ea8a602591396040018481038252602981526020018061e928602991396040019550505050505060006040518083038186803b158015616a5857600080fd5b505af4158015616a6c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012084148015616b3e575060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b616b4661c4fb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616ba7578082015181840152602081019050616b8c565b50505050905090810190601f168015616bd45780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ea8a602591396040018481038252602d81526020018061eb53602d91396040019550505050505060006040518083038186803b158015616c2257600080fd5b505af4158015616c36573d6000803e3d6000fd5b50505050600080600090505b6014600085815260200190815260200160002060000180549050811015616de8578273ffffffffffffffffffffffffffffffffffffffff16601460008681526020019081526020016000206000018281548110616c9b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415616ddb576001915060008190505b6001601460008781526020019081526020016000206000018054905003811015616dd557601460008681526020019081526020016000206000016001820181548110616d3457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008781526020019081526020016000206000018281548110616d8057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050616cec565b50616de8565b8080600101915050616c42565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215616e0d61c7a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616e6e578082015181840152602081019050616e53565b50505050905090810190601f168015616e9b5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ea8a602591396040018481038252603081526020018061ed53603091396040019550505050505060006040518083038186803b158015616ee957600080fd5b505af4158015616efd573d6000803e3d6000fd5b5050505060146000848152602001908152602001600020600001805480919060019003616f2a919061cf55565b50505050565b60007f41475245454d454e545f50415254494553000000000000000000000000000000821415616f67576012805490509050616f73565b616f708261c7e0565b90505b919050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6170078333612bb8565b1561701061c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617071578082015181840152602081019050617056565b50505050905090810190601f16801561709e5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e68e602b91396040018481038252603481526020018061e77a603491396040019550505050505060006040518083038186803b1580156170ec57600080fd5b505af4158015617100573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600086815260200190815260200160002060010160039054906101000a900460ff161561714b61c7a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156171ac578082015181840152602081019050617191565b50505050905090810190601f1680156171d95780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e631602491396040018481038252603981526020018061e655603991396040019550505050505060006040518083038186803b15801561722757600080fd5b505af415801561723b573d6000803e3d6000fd5b505050506014600084815260200190815260200160002060010160009054906101000a900460ff161561748757601460008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156172fe57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116172b4575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156173a4578082015181840152602081019050617389565b50505050905001935050505060206040518083038186803b1580156173c857600080fd5b505af41580156173dc573d6000803e3d6000fd5b505050506040513d60208110156173f257600080fd5b810190808051906020019092919050505061748257601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6177b6565b60006014600085815260200190815260200160002060000180549050141561752857601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506177b5565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961754a61c3d7565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156175a1578082015181840152602081019050617586565b50505050905090810190601f1680156175ce5780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e631602491396040018481038252608381526020018061e5826083913960a00194505050505060006040518083038186803b15801561761b57600080fd5b505af415801561762f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561765957600080fd5b810190808051604051939291908464010000000082111561767957600080fd5b8382019150602082018581111561768f57600080fd5b82518660018202830111640100000000821117156176ac57600080fd5b8083526020830192505050908051906020019080838360005b838110156176e05780820151818401526020810190506176c5565b50505050905090810190601f16801561770d5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561777a57808201518184015260208101905061775f565b50505050905090810190601f1680156177a75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061ee5860259139602501905060405160208183030381529060405280519060200120604051602001808061ead660279139602701905060405160208183030381529060405280519060200120604051602001808061e7da602c9139602c01905060405160208183030381529060405280519060200120604051602001808061e99b604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff166178e361c4fb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617944578082015181840152602081019050617929565b50505050905090810190601f1680156179715780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061e558602a91396040018481038252602981526020018061e751602991396040019550505050505060006040518083038186803b1580156179bf57600080fd5b505af41580156179d3573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614617a2961c38b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617a8a578082015181840152602081019050617a6f565b50505050905090810190601f168015617ab75780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ee37602191396040018481038252602e81526020018061ee09602e91396040019550505050505060006040518083038186803b158015617b0557600080fd5b505af4158015617b19573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614617b6f61c38b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617bd0578082015181840152602081019050617bb5565b50505050905090810190601f168015617bfd5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ee37602191396040018481038252602c81526020018061e605602c91396040019550505050505060006040518083038186803b158015617c4b57600080fd5b505af4158015617c5f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614617cb561c38b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617d16578082015181840152602081019050617cfb565b50505050905090810190601f168015617d435780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ee37602191396040018481038252602381526020018061ec01602391396040019550505050505060006040518083038186803b158015617d9157600080fd5b505af4158015617da5573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b158015617e0957600080fd5b505afa158015617e1d573d6000803e3d6000fd5b505050506040513d6020811015617e3357600080fd5b810190808051906020019092919050505015617e4d61c87e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617eae578082015181840152602081019050617e93565b50505050905090810190601f168015617edb5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ee3760219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b158015617f4657600080fd5b505af4158015617f5a573d6000803e3d6000fd5b505050506180c3828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b158015617fe957600080fd5b505afa158015617ffd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561802757600080fd5b810190808051604051939291908464010000000082111561804757600080fd5b8382019150602082018581111561805d57600080fd5b825186602082028301116401000000008211171561807a57600080fd5b8083526020830192505050908051906020019060200280838360005b838110156180b1578082015181840152602081019050618096565b5050505090500160405250505061c8bb565b6181be60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061ee5860259139602501905060405160208183030381529060405280519060200120604051602001808061ead660279139602701905060405160208183030381529060405280519060200120604051602001808061e7da602c9139602c01905060405160208183030381529060405280519060200120604051602001808061e99b604091396040019050604051602081830303815290604052805190602001201818181861cca6565b89600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600087879050111561835d57600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561832057600080fd5b505af4158015618334573d6000803e3d6000fd5b505050506040513d602081101561834a57600080fd5b8101908080519060200190929190505050505b84600d60146101000a81548160ff02191690831515021790555083836012919061838892919061cf81565b5081816013919061839a92919061cf81565b506001600d60196101000a81548160ff021916908360078111156183ba57fe5b021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816185fc919061cf55565b50876014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000160008154811061866657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c600d60199054906101000a900460ff1660078111156188e657fe5b600d60159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b84849050811015618b7f577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30878785818110618aa457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a28080600101915050618a4a565b600090505b82829050811015618c7c577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd30858585818110618bde57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a28080600101915050618b84565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b6003600d60196101000a81548160ff02191690836007811115618cc257fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff166007811115618d2557fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a2565b600060138281548110618d8457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060618dcc82600361b3b990919063ffffffff16565b606001519050919050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b6060618e5d82600361b3b990919063ffffffff16565b61014001519050919050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000618ec982600361b3b990919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a13699618f4061c4fb565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618f97578082015181840152602081019050618f7c565b50505050905090810190601f168015618fc45780820380516001836020036101000a031916815260200191505b508481038352605281526020018061edb7605291396060018481038252609881526020018061e6b96098913960a00194505050505060006040518083038186803b15801561901157600080fd5b505af4158015619025573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561904f57600080fd5b810190808051604051939291908464010000000082111561906f57600080fd5b8382019150602082018581111561908557600080fd5b82518660018202830111640100000000821117156190a257600080fd5b8083526020830192505050908051906020019080838360005b838110156190d65780820151818401526020810190506190bb565b50505050905090810190601f1680156191035780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015619170578082015181840152602081019050619155565b50505050905090810190601f16801561919d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561922857600080fd5b505af415801561923c573d6000803e3d6000fd5b505050506040513d604081101561925257600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146192c361c243565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619324578082015181840152602081019050619309565b50505050905090810190601f1680156193515780820380516001836020036101000a031916815260200191505b508481038352602181526020018061eb32602191396040018481038252602681526020018061e975602691396040019550505050505060006040518083038186803b15801561939f57600080fd5b505af41580156193b3573d6000803e3d6000fd5b50505050600060078111156193c457fe5b600d60199054906101000a900460ff1660078111156193df57fe5b14806194105750600160078111156193f357fe5b600d60199054906101000a900460ff16600781111561940e57fe5b145b156195de5781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506194e561c538565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26198d7565b600260078111156195eb57fe5b600d60199054906101000a900460ff16600781111561960657fe5b14156198d6576000601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156198d55781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b6012805490508110156198d3576000601160006012848154811061983957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156198ad576198d3565b6001601280549050038114156198c6576198c561c538565b5b8080600101915050619819565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff161561992261c7a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619983578082015181840152602081019050619968565b50505050905090810190601f1680156199b05780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eaaf602791396040018481038252603981526020018061e655603991396040019550505050505060006040518083038186803b1580156199fe57600080fd5b505af4158015619a12573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160029054906101000a900460ff1615619a5d61c4fb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619abe578082015181840152602081019050619aa3565b50505050905090810190601f168015619aeb5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eaaf602791396040018481038252602c81526020018061e7ae602c91396040019550505050505060006040518083038186803b158015619b3957600080fd5b505af4158015619b4d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60146000858152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015619c0157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311619bb7575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015619ca7578082015181840152602081019050619c8c565b50505050905001935050505060206040518083038186803b158015619ccb57600080fd5b505af4158015619cdf573d6000803e3d6000fd5b505050506040513d6020811015619cf557600080fd5b8101908080519060200190929190505050619d0e61c766565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619d6f578082015181840152602081019050619d54565b50505050905090810190601f168015619d9c5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eaaf602791396040018481038252603581526020018061ea55603591396040019550505050505060006040518083038186803b158015619dea57600080fd5b505af4158015619dfe573d6000803e3d6000fd5b5050505060008090505b6014600084815260200190815260200160002060000180549050811015619f25573373ffffffffffffffffffffffffffffffffffffffff16601460008581526020019081526020016000206000018281548110619e6157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415619f185781601460008581526020019081526020016000206000018281548110619eca57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061a1b3565b8080600101915050619e08565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a13699619f4861c243565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619f9f578082015181840152602081019050619f84565b50505050905090810190601f168015619fcc5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eaaf602791396040018481038252603581526020018061eafd6035913960400194505050505060006040518083038186803b15801561a01957600080fd5b505af415801561a02d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561a05757600080fd5b810190808051604051939291908464010000000082111561a07757600080fd5b8382019150602082018581111561a08d57600080fd5b825186600182028301116401000000008211171561a0aa57600080fd5b8083526020830192505050908051906020019080838360005b8381101561a0de57808201518184015260208101905061a0c3565b50505050905090810190601f16801561a10b5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561a17857808201518184015260208101905061a15d565b50505050905090810190601f16801561a1a55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b61a1bf61ce1e565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610400018190525061a21c61cd91565b816020019060ff16908160ff168152505061a24181600361ab2a90919063ffffffff16565b5050505050565b60607f41475245454d454e545f5041525449455300000000000000000000000000000082141561a30057601280548060200260200160405190810160405280929190818152602001828054801561a2f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161a2aa575b5050505050905061a31c565b61a31482600361b3b990919063ffffffff16565b610120015190505b919050565b60006002806003811061a33057fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b606061a36782600361b3b990919063ffffffff16565b6102c001519050919050565b61a37b61ce1e565b8281600001818152505061a38d61cd9a565b816020019060ff16908160ff16815250508181608001818152505061a3bc81600361ab2a90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b600061a46c82600361b3b990919063ffffffff16565b60c001519050919050565b600080601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b61a53161ce1e565b8381600001818152505061a54361cda9565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610140018190525061a5b381600361ab2a90919063ffffffff16565b5050505050565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561a6d857600080fd5b505af415801561a6ec573d6000803e3d6000fd5b505050506040513d602081101561a70257600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561a87257600080fd5b505af415801561a886573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561a8b057600080fd5b810190808051604051939291908464010000000082111561a8d057600080fd5b8382019150602082018581111561a8e657600080fd5b825186600182028301116401000000008211171561a90357600080fd5b8083526020830192505050908051906020019080838360005b8381101561a93757808201518184015260208101905061a91c565b50505050905090810190601f16801561a9645780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600d60149054906101000a900460ff16905090565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b606061a9eb82600361b3b990919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff161561ab18576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff161561af3b5781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061abdf92919061d021565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e0820151816006015561010082015181600701908051906020019061ac6292919061d0a1565b5061012082015181600801908051906020019061ac8092919061d101565b5061014082015181600901908051906020019061ac9e92919061d18b565b5061016082015181600a01908051906020019061acbc92919061d231565b5061018082015181600b01908051906020019061acda92919061d2d8565b506101a082015181600c01908051906020019061acf892919061d382565b506101c082015181600d01908051906020019061ad1692919061d432565b506101e082015181600e01908051906020019061ad3492919061d4ee565b5061020082015181600f01908051906020019061ad5292919061d5c2565b5061022082015181601001908051906020019061ad7092919061d60f565b5061024082015181601101908051906020019061ad8e92919061d6b9565b5061026082015181601201908051906020019061adac92919061d766565b5061028082015181601301908051906020019061adca92919061d819565b506102a082015181601401908051906020019061ade892919061d8d8565b506102c082015181601501908051906020019061ae0692919061d9af565b506102e082015181601601908051906020019061ae2492919061d9fc565b5061030082015181601701908051906020019061ae4292919061daa3565b5061032082015181601801908051906020019061ae6092919061db4c565b5061034082015181601901908051906020019061ae7e92919061dbf7565b5061036082015181601a01908051906020019061ae9c92919061dca4565b5061038082015181601b01908051906020019061aeba92919061dd59565b506103a082015181601c01908051906020019061aed892919061de1e565b506103c082015181601d01908051906020019061aef692919061de95565b506103e082015181601e01908051906020019061af1492919061df10565b5061040082015181601f01908051906020019061af3292919061df8f565b5090505061b3a0565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061b01392919061d021565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e0820151816006015561010082015181600701908051906020019061b09692919061d0a1565b5061012082015181600801908051906020019061b0b492919061d101565b5061014082015181600901908051906020019061b0d292919061d18b565b5061016082015181600a01908051906020019061b0f092919061d231565b5061018082015181600b01908051906020019061b10e92919061d2d8565b506101a082015181600c01908051906020019061b12c92919061d382565b506101c082015181600d01908051906020019061b14a92919061d432565b506101e082015181600e01908051906020019061b16892919061d4ee565b5061020082015181600f01908051906020019061b18692919061d5c2565b5061022082015181601001908051906020019061b1a492919061d60f565b5061024082015181601101908051906020019061b1c292919061d6b9565b5061026082015181601201908051906020019061b1e092919061d766565b5061028082015181601301908051906020019061b1fe92919061d819565b506102a082015181601401908051906020019061b21c92919061d8d8565b506102c082015181601501908051906020019061b23a92919061d9af565b506102e082015181601601908051906020019061b25892919061d9fc565b5061030082015181601701908051906020019061b27692919061daa3565b5061032082015181601801908051906020019061b29492919061db4c565b5061034082015181601901908051906020019061b2b292919061dbf7565b5061036082015181601a01908051906020019061b2d092919061dca4565b5061038082015181601b01908051906020019061b2ee92919061dd59565b506103a082015181601c01908051906020019061b30c92919061de1e565b506103c082015181601d01908051906020019061b32a92919061de95565b506103e082015181601e01908051906020019061b34892919061df10565b5061040082015181601f01908051906020019061b36692919061df8f565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b61b3c161ce1e565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561b4c05780601f1061b4955761010080835404028352916020019161b4c0565b820191906000526020600020905b81548152906001019060200180831161b4a357829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b8282101561b61e578382906000526020600020018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561b60a5780601f1061b5df5761010080835404028352916020019161b60a565b820191906000526020600020905b81548152906001019060200180831161b5ed57829003601f168201915b50505050508152602001906001019061b562565b5050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561b6ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161b661575b505050505081526020016009820180548060200260200160405190810160405280929190818152602001828054801561b72857602002820191906000526020600020906000905b82829054906101000a900460ff1615158152602001906001019060208260000104928301926001038202915080841161b6f25790505b50505050508152602001600a820180548060200260200160405190810160405280929190818152602001828054801561b7a657602002820191906000526020600020906000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161b76f5790505b50505050508152602001600b820180548060200260200160405190810160405280929190818152602001828054801561b82657602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161b7ed5790505b50505050508152602001600c820180548060200260200160405190810160405280929190818152602001828054801561b8aa57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161b86d5790505b50505050508152602001600d820180548060200260200160405190810160405280929190818152602001828054801561b93657602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841161b8f15790505b50505050508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561b9d257602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f0104928301926001038202915080841161b97d5790505b50505050508152602001600f820180548060200260200160405190810160405280929190818152602001828054801561ba2a57602002820191906000526020600020905b81548152602001906001019080831161ba16575b505050505081526020016010820180548060200260200160405190810160405280929190818152602001828054801561baa857602002820191906000526020600020906000905b82829054906101000a900460000b60000b8152602001906001019060208260000104928301926001038202915080841161ba715790505b505050505081526020016011820180548060200260200160405190810160405280929190818152602001828054801561bb2657602002820191906000526020600020906000905b82829054906101000a900460010b60010b8152602001906002019060208260010104928301926001038202915080841161baef5790505b505050505081526020016012820180548060200260200160405190810160405280929190818152602001828054801561bba457602002820191906000526020600020906000905b82829054906101000a900460030b60030b8152602001906004019060208260030104928301926001038202915080841161bb6d5790505b505050505081526020016013820180548060200260200160405190810160405280929190818152602001828054801561bc2257602002820191906000526020600020906000905b82829054906101000a900460070b60070b8152602001906008019060208260070104928301926001038202915080841161bbeb5790505b505050505081526020016014820180548060200260200160405190810160405280929190818152602001828054801561bca057602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f0104928301926001038202915080841161bc695790505b505050505081526020016015820180548060200260200160405190810160405280929190818152602001828054801561bcf857602002820191906000526020600020905b81548152602001906001019080831161bce4575b505050505081526020016016820180548060200260200160405190810160405280929190818152602001828054801561bd9557602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906001019060208260000104928301926001038202915080841161bd3f5790505b505050505081526020016017820180548060200260200160405190810160405280929190818152602001828054801561be3157602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906002019060208260010104928301926001038202915080841161bddc5790505b505050505081526020016018820180548060200260200160405190810160405280929190818152602001828054801561becc57602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906003019060208260020104928301926001038202915080841161be785790505b505050505081526020016019820180548060200260200160405190810160405280929190818152602001828054801561bf6657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161bf135790505b50505050508152602001601a820180548060200260200160405190810160405280929190818152602001828054801561bffc57602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906008019060208260070104928301926001038202915080841161bfad5790505b50505050508152602001601b820180548060200260200160405190810160405280929190818152602001828054801561c08a57602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f0104928301926001038202915080841161c0435790505b50505050508152602001601c820180548060200260200160405190810160405280929190818152602001828054801561c0fe57602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff19168152602001906001019080831161c0ce575b50505050508152602001601d820180548060200260200160405190810160405280929190818152602001828054801561c16e57602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff19168152602001906001019080831161c142575b50505050508152602001601e820180548060200260200160405190810160405280929190818152602001828054801561c1da57602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff19168152602001906001019080831161c1b2575b50505050508152602001601f820180548060200260200160405190810160405280929190818152602001828054801561c23257602002820191906000526020600020905b81548152602001906001019080831161c21e575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b600061c2eb8360006003811061c2cf57fe5b60200201518360006003811061c2e157fe5b602002015161cdb2565b90506000811461c2fd5780905061c36a565b61c3298360016003811061c30d57fe5b60200201518360016003811061c31f57fe5b602002015161cdb2565b90506000811461c33b5780905061c36a565b61c3678360026003811061c34b57fe5b60200201518360026003811061c35d57fe5b602002015161cdb2565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b600061c3d261ce0c565b905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005600d60196101000a81548160ff0219169083600781111561c55757fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561c5ba57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a261c6327f41475245454d454e545f53544154455f4348414e4745440000000000000000003061c634565b565b60008090505b600a60000160008481526020019081526020016000206001018054905081101561c75857600a6000016000848152602001908152602001600020600101818154811061c68257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561c73357600080fd5b505af115801561c747573d6000803e3d6000fd5b50505050808060010191505061c63a565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561c83c57600080fd5b505af415801561c850573d6000803e3d6000fd5b505050506040513d602081101561c86657600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82518451141561c8e361c280565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c94457808201518184015260208101905061c929565b50505050905090810190601f16801561c9715780820380516001836020036101000a031916815260200191505b508481038352603281526020018061e881603291396040018481038252606681526020018061ecb8606691396080019550505050505060006040518083038186803b15801561c9bf57600080fd5b505af415801561c9d3573d6000803e3d6000fd5b50505050600080905060008090505b835181101561cb785760008090505b835181101561cb6a57600073ffffffffffffffffffffffffffffffffffffffff1684828151811061ca1e57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561ca475761cb5d565b84828151811061ca5357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b15801561caa057600080fd5b505afa15801561cab4573d6000803e3d6000fd5b505050506040513d602081101561caca57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1684828151811061cafd57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561cb5c5783818151811061cb2d57fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff16815250828060010193505061cb6a565b5b808060010191505061c9f1565b50808060010191505061c9e2565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000845111801561cba5575083518314155b61cbad61c280565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561cc0e57808201518184015260208101905061cbf3565b50505050905090810190601f16801561cc3b5780820380516001836020036101000a031916815260200191505b508481038352603281526020018061e881603291396040018481038252607a81526020018061e9db607a91396080019550505050505060006040518083038186803b15801561cc8957600080fd5b505af415801561cc9d573d6000803e3d6000fd5b50505050505050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561cd25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061ec24602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000609f905090565b600061cda461ce15565b905090565b60006065905090565b60008260ff168260ff16141561cdcb576000905061ce06565b8260ff168260ff16101561ce01577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061ce06565b600190505b92915050565b60006012905090565b60006008905090565b60405180610420016040528060008019168152602001600060ff168152602001600015158152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b81548183558181111561cf7c5781836000526020600020918201910161cf7b919061dfdc565b5b505050565b82805482825590600052602060002090810192821561d010579160200282015b8281111561d00f57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061cfa1565b5b50905061d01d919061e001565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061d06257805160ff191683800117855561d090565b8280016001018555821561d090579182015b8281111561d08f57825182559160200191906001019061d074565b5b50905061d09d919061dfdc565b5090565b82805482825590600052602060002090810192821561d0f0579160200282015b8281111561d0ef57825182908051906020019061d0df92919061d021565b509160200191906001019061d0c1565b5b50905061d0fd919061e044565b5090565b82805482825590600052602060002090810192821561d17a579160200282015b8281111561d1795782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061d121565b5b50905061d187919061e001565b5090565b82805482825590600052602060002090601f0160209004810192821561d2205791602002820160005b8382111561d1f157835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030261d1b4565b801561d21e5782816101000a81549060ff021916905560010160208160000104928301926001030261d1f1565b505b50905061d22d919061e070565b5090565b82805482825590600052602060002090601f0160209004810192821561d2c75791602002820160005b8382111561d29857835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030261d25a565b801561d2c55782816101000a81549060ff021916905560010160208160000104928301926001030261d298565b505b50905061d2d4919061e0a0565b5090565b82805482825590600052602060002090600f0160109004810192821561d3715791602002820160005b8382111561d34157835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261d301565b801561d36f5782816101000a81549061ffff021916905560020160208160010104928301926001030261d341565b505b50905061d37e919061e0d0565b5090565b8280548282559060005260206000209060070160089004810192821561d4215791602002820160005b8382111561d3ef57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261d3ab565b801561d41f5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d3ef565b505b50905061d42e919061e101565b5090565b8280548282559060005260206000209060030160049004810192821561d4dd5791602002820160005b8382111561d4a757835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d45b565b801561d4db5782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261d4a7565b505b50905061d4ea919061e134565b5090565b8280548282559060005260206000209060010160029004810192821561d5b15791602002820160005b8382111561d57357835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261d517565b801561d5af5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261d573565b505b50905061d5be919061e16b565b5090565b82805482825590600052602060002090810192821561d5fe579160200282015b8281111561d5fd57825182559160200191906001019061d5e2565b5b50905061d60b919061dfdc565b5090565b82805482825590600052602060002090601f0160209004810192821561d6a85791602002820160005b8382111561d67957835183826101000a81548160ff021916908360000b60ff160217905550926020019260010160208160000104928301926001030261d638565b801561d6a65782816101000a81549060ff021916905560010160208160000104928301926001030261d679565b505b50905061d6b5919061e1aa565b5090565b82805482825590600052602060002090600f0160109004810192821561d7555791602002820160005b8382111561d72557835183826101000a81548161ffff021916908360010b61ffff160217905550926020019260020160208160010104928301926001030261d6e2565b801561d7535782816101000a81549061ffff021916905560020160208160010104928301926001030261d725565b505b50905061d762919061e1da565b5090565b8280548282559060005260206000209060070160089004810192821561d8085791602002820160005b8382111561d7d657835183826101000a81548163ffffffff021916908360030b63ffffffff160217905550926020019260040160208160030104928301926001030261d78f565b801561d8065782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d7d6565b505b50905061d815919061e20b565b5090565b8280548282559060005260206000209060030160049004810192821561d8c75791602002820160005b8382111561d89157835183826101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d842565b801561d8c55782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261d891565b505b50905061d8d4919061e23e565b5090565b8280548282559060005260206000209060010160029004810192821561d99e5791602002820160005b8382111561d96057835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261d901565b801561d99c5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261d960565b505b50905061d9ab919061e275565b5090565b82805482825590600052602060002090810192821561d9eb579160200282015b8281111561d9ea57825182559160200191906001019061d9cf565b5b50905061d9f8919061e2b4565b5090565b82805482825590600052602060002090601f0160209004810192821561da925791602002820160005b8382111561da6357835183826101000a81548160ff021916908360f81c0217905550926020019260010160208160000104928301926001030261da25565b801561da905782816101000a81549060ff021916905560010160208160000104928301926001030261da63565b505b50905061da9f919061e2d9565b5090565b82805482825590600052602060002090600f0160109004810192821561db3b5791602002820160005b8382111561db0b57835183826101000a81548161ffff021916908360f01c0217905550926020019260020160208160010104928301926001030261dacc565b801561db395782816101000a81549061ffff021916905560020160208160010104928301926001030261db0b565b505b50905061db48919061e309565b5090565b82805482825590600052602060002090600901600a9004810192821561dbe65791602002820160005b8382111561dbb557835183826101000a81548162ffffff021916908360e81c0217905550926020019260030160208160020104928301926001030261db75565b801561dbe45782816101000a81549062ffffff021916905560030160208160020104928301926001030261dbb5565b505b50905061dbf3919061e33a565b5090565b8280548282559060005260206000209060070160089004810192821561dc935791602002820160005b8382111561dc6157835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261dc20565b801561dc915782816101000a81549063ffffffff021916905560040160208160030104928301926001030261dc61565b505b50905061dca0919061e36c565b5090565b8280548282559060005260206000209060030160049004810192821561dd485791602002820160005b8382111561dd1257835183826101000a81548167ffffffffffffffff021916908360c01c0217905550926020019260080160208160070104928301926001030261dccd565b801561dd465782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261dd12565b505b50905061dd55919061e39f565b5090565b8280548282559060005260206000209060010160029004810192821561de0d5791602002820160005b8382111561ddcf57835183826101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055509260200192601001602081600f0104928301926001030261dd82565b801561de0b5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261ddcf565b505b50905061de1a919061e3d6565b5090565b82805482825590600052602060002090810192821561de84579160200282015b8281111561de835782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055509160200191906001019061de3e565b5b50905061de91919061e415565b5090565b82805482825590600052602060002090810192821561deff579160200282015b8281111561defe5782518260006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908360401c02179055509160200191906001019061deb5565b5b50905061df0c919061e458565b5090565b82805482825590600052602060002090810192821561df7e579160200282015b8281111561df7d5782518260006101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360201c02179055509160200191906001019061df30565b5b50905061df8b919061e49f565b5090565b82805482825590600052602060002090810192821561dfcb579160200282015b8281111561dfca57825182559160200191906001019061dfaf565b5b50905061dfd8919061e4ea565b5090565b61dffe91905b8082111561dffa57600081600090555060010161dfe2565b5090565b90565b61e04191905b8082111561e03d57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e007565b5090565b90565b61e06d91905b8082111561e069576000818161e060919061e50f565b5060010161e04a565b5090565b90565b61e09d91905b8082111561e09957600081816101000a81549060ff02191690555060010161e076565b5090565b90565b61e0cd91905b8082111561e0c957600081816101000a81549060ff02191690555060010161e0a6565b5090565b90565b61e0fe91905b8082111561e0fa57600081816101000a81549061ffff02191690555060010161e0d6565b5090565b90565b61e13191905b8082111561e12d57600081816101000a81549063ffffffff02191690555060010161e107565b5090565b90565b61e16891905b8082111561e16457600081816101000a81549067ffffffffffffffff02191690555060010161e13a565b5090565b90565b61e1a791905b8082111561e1a357600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e171565b5090565b90565b61e1d791905b8082111561e1d357600081816101000a81549060ff02191690555060010161e1b0565b5090565b90565b61e20891905b8082111561e20457600081816101000a81549061ffff02191690555060010161e1e0565b5090565b90565b61e23b91905b8082111561e23757600081816101000a81549063ffffffff02191690555060010161e211565b5090565b90565b61e27291905b8082111561e26e57600081816101000a81549067ffffffffffffffff02191690555060010161e244565b5090565b90565b61e2b191905b8082111561e2ad57600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e27b565b5090565b90565b61e2d691905b8082111561e2d257600081600090555060010161e2ba565b5090565b90565b61e30691905b8082111561e30257600081816101000a81549060ff02191690555060010161e2df565b5090565b90565b61e33791905b8082111561e33357600081816101000a81549061ffff02191690555060010161e30f565b5090565b90565b61e36991905b8082111561e36557600081816101000a81549062ffffff02191690555060010161e340565b5090565b90565b61e39c91905b8082111561e39857600081816101000a81549063ffffffff02191690555060010161e372565b5090565b90565b61e3d391905b8082111561e3cf57600081816101000a81549067ffffffffffffffff02191690555060010161e3a5565b5090565b90565b61e41291905b8082111561e40e57600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e3dc565b5090565b90565b61e45591905b8082111561e45157600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e41b565b5090565b90565b61e49c91905b8082111561e49857600081816101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e45e565b5090565b90565b61e4e791905b8082111561e4e357600081816101000a8154907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e4a5565b5090565b90565b61e50c91905b8082111561e50857600081600090555060010161e4f0565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061e535575061e554565b601f01602090049060005260206000209081019061e553919061dfdc565b5b5056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6553696e676c652d68656c64207065726d697373696f6e20746861742068617320616c7265616479206265656e206772616e7465642063616e6e6f74206265206f7665727772697474656e20627920746865207065726d697373696f6e2061646d696e2e20557365207472616e736665725065726d697373696f6e20696e73746561642e5468652070726f7669646564206f776e65722061646472657373206d757374206e6f7420626520656d70747941627374726163745065726d697373696f6e65642e6772616e745065726d697373696f6e54686520737065636966696564207065726d697373696f6e20646f6573206e6f742065786973742e204372656174652069742066697273742e41627374726163745065726d697373696f6e65642e7072655f72657175697265735065726d697373696f6e546869732076657273696f6e206f6620696e697469616c697a65206973206e6f206c6f6e67657220737570706f727465642e20506c65617365207573652044656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d2954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564546865206d73672e73656e64657220646f6573206e6f74206861766520746865207265717569726564207065726d697373696f6e54686520737065636966696564207065726d697373696f6e206973206e6f74207472616e7366657261626c657265736f6c76654164647265737353636f706528616464726573732c627974657333322c61646472657373294f6e6c79207468652061677265656d656e74206f776e6572206d6179207265717565737420726564616374696f6e5468652061677265656d656e742063616e6e6f742062652072656461637465642e2054686520726567697374657265642070617274696573206d7573742063616e63656c20697420666972737444656661756c7441637469766541677265656d656e742e76616c6964617465476f7665726e696e6741677265656d656e7473546865206f626a6563742061646d696e2068617320616c7265616479206265656e2073657420616e642063616e6e6f74206265206f7665727772697474656e46697865642073636f706520616e6420436f6e646974696f6e616c44617461206d757374206e6f7420626f746820626520656d70747954686520737065636966696564207065726d697373696f6e206973206e6f74207265766f6361626c655468652063616c6c6572206973206e6f7420617574686f72697a656420746f207369676e5468652063616c6c6572206973206e6f7420617574686f72697a656420746f2063616e63656c7365744164647265737353636f706528616464726573732c627974657333322c627974657333322c627974657333322c627974657333322c61646472657373295468652070726f766964656420676f7665726e696e672061677265656d656e747320646f206e6f74206d6174636820616c6c206f662074686520676f7665726e696e6720617263686574797065732072657175697265642062792074686520617263686574797065206f6620746869732061677265656d656e74546865206e657720686f6c64657220616c726561647920686f6c64732074686520737065636966696564207065726d697373696f6e41627374726163745065726d697373696f6e65642e7265766f6b655065726d697373696f6e41627374726163745065726d697373696f6e65642e7472616e736665725065726d697373696f6e6765744164647265737353636f706544657461696c7328616464726573732c6279746573333229546865206d73672e73656e64657220646f6573206e6f7420686f6c642074686520737065636966696564207065726d697373696f6e44656661756c7441637469766541677265656d656e742e646f43616e63656c282941646d696e207065726d697373696f6e20686f6c646572732063616e6e6f74206265206c65667420656d70747941627374726163745065726d697373696f6e65642e6372656174655065726d697373696f6e5468652061677265656d656e7420697320616c726561647920696e20737461746520524544414354454441627374726163745065726d697373696f6e65642e696e697469616c697a654f626a65637441646d696e6973747261746f724172636865747970652061646472657373206d757374206e6f7420626520656d707479466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365546865204461746153746f7261676520706172616d6574657220697320726571756972656420666f72206120436f6e646974696f6e616c446174612073636f706520776974686f75742061206669786564206461746153746f726167652061646472657373546865206e756d626572206f662070726f766964656420676f7665726e696e672061677265656d656e747320646f6573206e6f74206d6174636820746865207265717569726564206e756d626572206f6620676f7665726e696e672061726368657479706573546865206164647265737320746f20776869636820746f2061646420612073636f7065206d757374206e6f7420626520656d70747954686520676976656e206163636f756e7420646f6573206e6f7420686f6c642074686973207065726d697373696f6e2e41207065726d697373696f6e207769746820746865206964656e746966696572206e616d6520616c72656164792065786973747344656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d295468652070726f76696465642063726561746f722061646472657373206d757374206e6f7420626520656d70747944656661756c7441637469766541677265656d656e742e696e697469616c697a656765744164647265737353636f706544657461696c73466f724b6579286279746573333229a265627a7a723158201ad41d8279e164440537378750af8bdb41d68b56092b273b01aa9b89331a12f664736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}