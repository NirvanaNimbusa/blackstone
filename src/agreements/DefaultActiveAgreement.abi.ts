//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "60806040527f63726561746564000000000000000000000000000000000000000000000000006007557f75706461746564000000000000000000000000000000000000000000000000006008557f64656c657465640000000000000000000000000000000000000000000000000060095560016006600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550826002600060038110620000d757fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200010757fe5b602091828204019190066101000a81548160ff021916908360ff16021790555080600280600381106200013657fe5b602091828204019190066101000a81548160ff021916908360ff160217905550620001ad60405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001b660201b60201c565b505050620002a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806200f242602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61ef8f80620002b36000396000f3fe608060405234801561001057600080fd5b50600436106105255760003560e01c806379ce3cb2116102af578063d734c53a11610172578063f3420d1a116100d9578063f9f3f28311610092578063f9f3f2831461228d578063faff660e14612310578063fb1a149314612332578063fc344a731461237c578063fcb4862a1461239a578063fe3c84b21461241d57610525565b8063f3420d1a14612042578063f364e3791461207a578063f4b9d96e146120e8578063f5081e9f14612173578063f76829c9146121f6578063f8d660d31461221457610525565b8063ec9cb2ce1161012b578063ec9cb2ce14611e29578063edec4c4f14611e77578063eeb8b80914611efa578063f085f6dd14611f7d578063f0897db714611fa1578063f0a4052714611fbf57610525565b8063d734c53a14611b71578063e10533c614611bf4578063e2be8fe114611c50578063e6f936f914611c92578063e703a9e414611cb0578063ea8a1af014611e1f57610525565b80639f75dfd911610216578063be60fc0c116101cf578063be60fc0c1461184d578063c3f0a895146119dc578063c4521ffb146119e6578063d2e8a0fa14611a54578063d39c4faa14611afb578063d42ea97614611b5357610525565b80639f75dfd914611672578063a6a8f17b146116f5578063aa0ac16f14611743578063b7d6477714611785578063bc586456146117a3578063bd9e0660146117f157610525565b80638aa137f5116102685780638aa137f5146114785780639090fd85146114b057806391bec712146114ce57806394e38624146114fa57806394feb1521461157d5780639561aa32146115cf57610525565b806379ce3cb2146112e45780637f809381146113525780637f91fb7d1461137057806380c86ba7146113cc578063859360f5146113ea578063893d20e81461142e57610525565b80634828c43b116103f757806368e780111161035e57806370a9c9971161031757806370a9c9971461114c5780637207b07f146111ab578063720e72e9146111c9578063756b2e6c146112015780637589adb71461124757806378bc0b0d1461126b57610525565b806368e7801114610f855780636d6a7e8f14610fd35780636d73c8bc146110565780636dbbc67b146110e25780636ea1944b146111005780636f78733b1461112e57610525565b806358892b86116103b057806358892b8614610dbd57806359d585ee14610dee5780635abf320214610e125780635c03013814610e3c57806363a84c0414610e94578063641375ad14610f0257610525565b80634828c43b14610c325780634f7e37bb14610c5057806351e213fc14610cc95780635666f9ac14610d4d57806357e0ebca14610d6b578063586ca7ab14610d8f57610525565b80632512e6f11161049b57806331502f131161045457806331502f1314610a3657806335ce1bd114610a7e578063374b7d2214610ac05780633c0e524514610b095780634773f6fc14610b8b57806347dd48e014610c0457610525565b80632512e6f11461086d57806328545c0d146108af5780632a7cbfde146109155780632ca151221461096357806330c676c91461096d57806331185182146109b357610525565b806311ce5844116104ed57806311ce5844146106c8578063130c5985146106e65780631314cf661461071a578063141b422a146107385780631c5422d2146107b05780631cb355401461083357610525565b806301ffc9a71461052a5780630775cb001461058f5780630cb61b34146105dd5780630d9bfa80146106605780630ee2cb101461067e575b600080fd5b6105756004803603602081101561054057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506124da565b604051808215151515815260200191505060405180910390f35b6105db600480360360408110156105a557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612541565b005b6105e561261c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062557808201518184015260208101905061060a565b50505050905090810190601f1680156106525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106686127bc565b6040518082815260200191505060405180910390f35b6106866127c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d06127f3565b6040518082815260200191505060405180910390f35b610718600480360360208110156106fc57600080fd5b81019080803563ffffffff169060200190929190505050612817565b005b6107226128d3565b6040518082815260200191505060405180910390f35b61076e6004803603604081101561074e57600080fd5b8101908080359060200190929190803590602001909291905050506128f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610831600480360360408110156107c657600080fd5b8101908080359060200190929190803590602001906401000000008111156107ed57600080fd5b8201836020820111156107ff57600080fd5b8035906020019184600183028401116401000000008311171561082157600080fd5b90919293919293905050506129a4565b005b61086b6004803603604081101561084957600080fd5b8101908080359060200190929190803515159060200190929190505050612af7565b005b6108996004803603602081101561088357600080fd5b8101908080359060200190929190505050612be4565b6040518082815260200191505060405180910390f35b6108fb600480360360408110156108c557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c05565b604051808215151515815260200191505060405180910390f35b6109616004803603604081101561092b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ea2565b005b61096b612f7d565b005b6109996004803603602081101561098357600080fd5b810190808035906020019092919050505061363e565b604051808215151515815260200191505060405180910390f35b6109df600480360360208110156109c957600080fd5b810190808035906020019092919050505061365f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a22578082015181840152602081019050610a07565b505050509050019250505060405180910390f35b610a6260048036036020811015610a4c57600080fd5b8101908080359060200190929190505050613681565b604051808260ff1660ff16815260200191505060405180910390f35b610aaa60048036036020811015610a9457600080fd5b810190808035906020019092919050505061371f565b6040518082815260200191505060405180910390f35b610aec60048036036020811015610ad657600080fd5b8101908080359060200190929190505050613740565b604051808381526020018281526020019250505060405180910390f35b610b7560048036036060811015610b1f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137ee565b6040518082815260200191505060405180910390f35b610c0260048036036020811015610ba157600080fd5b8101908080359060200190640100000000811115610bbe57600080fd5b820183602082011115610bd057600080fd5b80359060200191846001830284011164010000000083111715610bf257600080fd5b9091929391929390505050613c1f565b005b610c3060048036036020811015610c1a57600080fd5b8101908080359060200190929190505050613deb565b005b610c3a613e84565b6040518082815260200191505060405180910390f35b610cc760048036036020811015610c6657600080fd5b8101908080359060200190640100000000811115610c8357600080fd5b820183602082011115610c9557600080fd5b80359060200191846001830284011164010000000083111715610cb757600080fd5b9091929391929390505050613ea8565b005b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614074565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610d556140e0565b6040518082815260200191505060405180910390f35b610d736140f0565b604051808260ff1660ff16815260200191505060405180910390f35b610dbb60048036036020811015610da557600080fd5b810190808035906020019092919050505061411b565b005b610dec60048036036020811015610dd357600080fd5b81019080803560ff169060200190929190505050614128565b005b610df6614363565b604051808260ff1660ff16815260200191505060405180910390f35b610e1a614385565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b610e7e60048036036020811015610e5257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061439f565b6040518082815260200191505060405180910390f35b610ec060048036036020811015610eaa57600080fd5b810190808035906020019092919050505061449b565b60405180861515151581526020018515151515815260200184151515158152602001831515151581526020018281526020019550505050505060405180910390f35b610f8360048036036040811015610f1857600080fd5b810190808035906020019092919080359060200190640100000000811115610f3f57600080fd5b820183602082011115610f5157600080fd5b80359060200191846020830284011164010000000083111715610f7357600080fd5b9091929391929390505050614576565b005b610fd160048036036040811015610f9b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614607565b005b61105460048036036040811015610fe957600080fd5b81019080803590602001909291908035906020019064010000000081111561101057600080fd5b82018360208201111561102257600080fd5b8035906020019184602083028401116401000000008311171561104457600080fd5b9091929391929390505050614744565b005b6110e0600480360360c081101561106c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506147d5565b005b6110ea614de6565b6040518082815260200191505060405180910390f35b61112c6004803603602081101561111657600080fd5b8101908080359060200190929190505050614e0a565b005b611136614e17565b6040518082815260200191505060405180910390f35b611154614e1d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561119757808201518184015260208101905061117c565b505050509050019250505060405180910390f35b6111b3614e75565b6040518082815260200191505060405180910390f35b6111ff600480360360408110156111df57600080fd5b810190808035906020019092919080359060200190929190505050614e7b565b005b611209614f5e565b6040518082600360200280838360005b83811015611234578082015181840152602081019050611219565b5050505090500191505060405180910390f35b61124f614fcf565b604051808260ff1660ff16815260200191505060405180910390f35b6112ce6004803603606081101561128157600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f8201169050808301925050505050509192919290505050614ffa565b6040518082815260200191505060405180910390f35b611310600480360360208110156112fa57600080fd5b8101908080359060200190929190505050615070565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61135a6150c4565b6040518082815260200191505060405180910390f35b6113b26004803603602081101561138657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506150d1565b604051808215151515815260200191505060405180910390f35b6113d46151d5565b6040518082815260200191505060405180910390f35b61142c6004803603602081101561140057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506151f9565b005b61143661564b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6114ae6004803603604081101561148e57600080fd5b810190808035906020019092919080359060200190929190505050615753565b005b6114b8615836565b6040518082815260200191505060405180910390f35b6114d6615880565b604051808260078111156114e657fe5b60ff16815260200191505060405180910390f35b61157b6004803603604081101561151057600080fd5b81019080803590602001909291908035906020019064010000000081111561153757600080fd5b82018360208201111561154957600080fd5b8035906020019184602083028401116401000000008311171561156b57600080fd5b9091929391929390505050616116565b005b6115cd6004803603608081101561159357600080fd5b81019080803590602001909291908035151590602001909291908035151590602001909291908035151590602001909291905050506161a7565b005b61161b600480360360408110156115e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050616509565b604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b61167a616599565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116ba57808201518184015260208101905061169f565b50505050905090810190601f1680156116e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6117416004803603604081101561170b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050616739565b005b61176f6004803603602081101561175957600080fd5b810190808035906020019092919050505061700e565b6040518082815260200191505060405180910390f35b61178d617056565b6040518082815260200191505060405180910390f35b6117ef600480360360408110156117b957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061707a565b005b6117f9617899565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6119da600480360360e081101561186357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156118e057600080fd5b8201836020820111156118f257600080fd5b8035906020019184600183028401116401000000008311171561191457600080fd5b90919293919293908035151590602001909291908035906020019064010000000081111561194157600080fd5b82018360208201111561195357600080fd5b8035906020019184602083028401116401000000008311171561197557600080fd5b90919293919293908035906020019064010000000081111561199657600080fd5b8201836020820111156119a857600080fd5b803590602001918460208302840111640100000000831117156119ca57600080fd5b909192939192939050505061798f565b005b6119e4618d81565b005b611a12600480360360208110156119fc57600080fd5b8101908080359060200190929190505050618e53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b611a8060048036036020811015611a6a57600080fd5b8101908080359060200190929190505050618e94565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611ac0578082015181840152602081019050611aa5565b50505050905090810190601f168015611aed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b611b3d60048036036020811015611b1157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050618eb5565b6040518082815260200191505060405180910390f35b611b5b618f01565b6040518082815260200191505060405180910390f35b611b9d60048036036020811015611b8757600080fd5b8101908080359060200190929190505050618f25565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611be0578082015181840152602081019050611bc5565b505050509050019250505060405180910390f35b611bfc618f47565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b611c7c60048036036020811015611c6657600080fd5b8101908080359060200190929190505050618f91565b6040518082815260200191505060405180910390f35b611c9a618fb2565b6040518082815260200191505060405180910390f35b611e1d600480360360c0811015611cc657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115611d2357600080fd5b820183602082011115611d3557600080fd5b80359060200191846001830284011164010000000083111715611d5757600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115611d8457600080fd5b820183602082011115611d9657600080fd5b80359060200191846020830284011164010000000083111715611db857600080fd5b909192939192939080359060200190640100000000811115611dd957600080fd5b820183602082011115611deb57600080fd5b80359060200191846020830284011164010000000083111715611e0d57600080fd5b9091929391929390505050618ffc565b005b611e27619289565b005b611e7560048036036040811015611e3f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506199b9565b005b611ef860048036036040811015611e8d57600080fd5b810190808035906020019092919080359060200190640100000000811115611eb457600080fd5b820183602082011115611ec657600080fd5b80359060200191846020830284011164010000000083111715611ee857600080fd5b909192939192939050505061a295565b005b611f2660048036036020811015611f1057600080fd5b810190808035906020019092919050505061a326565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611f69578082015181840152602081019050611f4e565b505050509050019250505060405180910390f35b611f8561a3ff565b604051808260ff1660ff16815260200191505060405180910390f35b611fa961a429565b6040518082815260200191505060405180910390f35b611feb60048036036020811015611fd557600080fd5b810190808035906020019092919050505061a42f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561202e578082015181840152602081019050612013565b505050509050019250505060405180910390f35b6120786004803603604081101561205857600080fd5b81019080803590602001909291908035906020019092919050505061a451565b005b6120a66004803603602081101561209057600080fd5b810190808035906020019092919050505061a534565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61212a600480360360208110156120fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061a555565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6121f46004803603604081101561218957600080fd5b8101908080359060200190929190803590602001906401000000008111156121b057600080fd5b8201836020820111156121c257600080fd5b803590602001918460208302840111640100000000831117156121e457600080fd5b909192939192939050505061a607565b005b6121fe61a698565b6040518082815260200191505060405180910390f35b61228b6004803603602081101561222a57600080fd5b810190808035906020019064010000000081111561224757600080fd5b82018360208201111561225957600080fd5b8035906020019184600183028401116401000000008311171561227b57600080fd5b909192939192939050505061a6e2565b005b61229561a8ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156122d55780820151818401526020810190506122ba565b50505050905090810190601f1680156123025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61231861aa4e565b604051808215151515815260200191505060405180910390f35b61233a61aa65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61238461aa8f565b6040518082815260200191505060405180910390f35b6123c6600480360360208110156123b057600080fd5b810190808035906020019092919050505061aab3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156124095780820151818401526020810190506123ee565b505050509050019250505060405180910390f35b6124496004803603602081101561243357600080fd5b810190808035906020019092919050505061aad5565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156125dc57600080fd5b505af41580156125f0573d6000803e3d6000fd5b505050506040513d602081101561260657600080fd5b8101908080519060200190929190505050505050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156126be57600080fd5b505af41580156126d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156126fc57600080fd5b810190808051604051939291908464010000000082111561271c57600080fd5b8382019150602082018581111561273257600080fd5b825186600182028301116401000000008211171561274f57600080fd5b8083526020830192505050908051906020019080838360005b83811015612783578082015181840152602081019050612768565b50505050905090810190601f1680156127b05780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601380549050905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80600d60156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b7f41677265656d656e74204566666563746976652044617465000000000000000081565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1680156129415750816014600085815260200190815260200160002060000180549050115b156129995760146000848152602001908152602001600020600001828154811061296757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061299e565b600090505b92915050565b6129ac61cefc565b838160000181815250506129be61abff565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160600181905250612a3081600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b612aff61cefc565b82816000018181525050612b1161b48e565b816020019060ff16908160ff168152505081816040019015159081151581525050612b4681600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b6000612bfa82600361b49790919063ffffffff16565b60e001519050919050565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1615612e9c576014600084815260200190815260200160002060010160009054906101000a900460ff16612cfd5760006014600085815260200190815260200160002060000180549050118015612cf857508173ffffffffffffffffffffffffffffffffffffffff1660146000858152602001908152602001600020600001600081548110612cb557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b612e99565b60146000848152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015612d9357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612d49575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015612e39578082015181840152602081019050612e1e565b50505050905001935050505060206040518083038186803b158015612e5d57600080fd5b505af4158015612e71573d6000803e3d6000fd5b505050506040513d6020811015612e8757600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b158015612f3d57600080fd5b505af4158015612f51573d6000803e3d6000fd5b505050506040513d6020811015612f6757600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015612ffa57600080fd5b505af415801561300e573d6000803e3d6000fd5b505050506040513d604081101561302457600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461309961c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156130fa5780820151818401526020810190506130df565b50505050905090810190601f1680156131275780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018061ea2f602491396040019550505050505060006040518083038186803b15801561319257600080fd5b505af41580156131a6573d6000803e3d6000fd5b505050506000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561363a5781601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561342c57600080fd5b505af4158015613440573d6000803e3d6000fd5b505050506040513d602081101561345657600080fd5b8101908080519060200190929190505050156136395760006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081526020019081526020016000206000018054905014156135a5576002600d60196101000a81548160ff021916908360078111156134f357fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561355657fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25b3073ffffffffffffffffffffffffffffffffffffffff1663f3420d1a7f41677265656d656e742045666665637469766520446174650000000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561362057600080fd5b505af1158015613634573d6000803e3d6000fd5b505050505b5b5050565b600061365482600361b49790919063ffffffff16565b604001519050919050565b606061367582600361b49790919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156136dd57600080fd5b505af41580156136f1573d6000803e3d6000fd5b505050506040513d602081101561370757600080fd5b81019080805190602001909291905050509050919050565b600061373582600361b49790919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561379c57600080fd5b505af41580156137b0573d6000803e3d6000fd5b505050506040513d60408110156137c657600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506000600560008381526020019081526020016000206001016001015414613894576005600082815260200190815260200160002060010160010154915050613c18565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff1615613c1657600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613a985773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461398661c35e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156139e75780820151818401526020810190506139cc565b50505050905090810190601f168015613a145780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018061ed31606591396080019550505050505060006040518083038186803b158015613a7f57600080fd5b505af4158015613a93573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015613b3757600080fd5b505af4158015613b4b573d6000803e3d6000fd5b505050506040513d6040811015613b6157600080fd5b810190808051906020019092919080519060200190929190505050915091508173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613bd157600080fd5b505afa158015613be5573d6000803e3d6000fd5b505050506040513d6020811015613bfb57600080fd5b81019080805190602001909291905050509350505050613c18565b505b9392505050565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015613cf357600080fd5b505af4158015613d07573d6000803e3d6000fd5b505050506040513d6020811015613d1d57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015613e4557600080fd5b505af4158015613e59573d6000803e3d6000fd5b505050506040513d6020811015613e6f57600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015613f7c57600080fd5b505af4158015613f90573d6000803e3d6000fd5b505050506040513d6020811015613fa657600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b6000600260006003811061410057fe5b602091828204019190069054906101000a900460ff16905090565b6141258133612541565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6141938333612c05565b1561419c61c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156141fd5780820151818401526020810190506141e2565b50505050905090810190601f16801561422a5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e76c602b91396040018481038252603481526020018061e858603491396040019550505050505060006040518083038186803b15801561427857600080fd5b505af415801561428c573d6000803e3d6000fd5b5050505081600d60196101000a81548160ff021916908360078111156142ae57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561431157fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25050565b6000600d60199054906101000a900460ff16600781111561438057fe5b905090565b6000600d60159054906101000a900463ffffffff16905090565b60006144946002600380602002604051908101604052809291908260038015614403576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116143cc5790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561444e57600080fd5b505afa158015614462573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561448757600080fd5b810190809190505061c39b565b9050919050565b60008060008060006014600087815260200190815260200160002060010160039054906101000a900460ff169450841561455e576014600087815260200190815260200160002060010160009054906101000a900460ff1693506014600087815260200190815260200160002060010160019054906101000a900460ff1692506014600087815260200190815260200160002060010160029054906101000a900460ff169150601460008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b61457e61cefc565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161012001819052506145db61c44e565b816020019060ff16908160ff168152505061460081600361ac0890919063ffffffff16565b5050505050565b61460f61cefc565b8281600001818152505061462161c457565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061467e81600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b61474c61cefc565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c001819052506147a961c460565b816020019060ff16908160ff16815250506147ce81600361ac0890919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461482761c469565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561488857808201518184015260208101905061486d565b50505050905090810190601f1680156148b55780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018061edfc603591396040019550505050505060006040518083038186803b15801561492057600080fd5b505af4158015614934573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000861480156149625750600085145b61496a61c35e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156149cb5780820151818401526020810190506149b0565b50505050905090810190601f1680156149f85780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603681526020018061e9d0603691396040019550505050505060006040518083038186803b158015614a6357600080fd5b505af4158015614a77573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff16614b325760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514614bd057846005600083815260200190815260200160002060010160010181905550614ca2565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b614e148133612ea2565b50565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015614e6b57602002820191906000526020600020905b815481526020019060010190808311614e57575b5050505050905090565b60085481565b614e8361cefc565b82816000018181525050614e9561c4a6565b816020019060ff16908160ff1681525050818160a0018181525050614ec481600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b614f6661d011565b6002600380602002604051908101604052809291908260038015614fc5576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411614f8e5790505b5050505050905090565b60006002600160038110614fdf57fe5b602091828204019190069054906101000a900460ff16905090565b6000615069600260038060200260405190810160405280929190826003801561505e576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116150275790505b50505050508361c39b565b9050919050565b60006012805490508210156150be576012828154811061508c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506150bf565b5b919050565b6000601280549050905090565b600080600090505b6012805490508110156151ca578273ffffffffffffffffffffffffffffffffffffffff16601060006012848154811061510e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156151bd5760019150506151d0565b80806001019150506150d9565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff1661528561c4b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156152e65780820151818401526020810190506152cb565b50505050905090810190601f1680156153135780820380516001836020036101000a031916815260200191505b508481038352603281526020018061ecad603291396040018481038252603f81526020018061e991603f91396040019550505050505060006040518083038186803b15801561536157600080fd5b505af4158015615375573d6000803e3d6000fd5b505050506014600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461540f5781615411565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b6000806014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050116156ba57600061574e565b6014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000160008154811061572257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b61575b61cefc565b8281600001818152505061576d61c4f2565b816020019060ff16908160ff1681525050818160e001818152505061579c81600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6007808111156158a857fe5b600d60199054906101000a900460ff1660078111156158c357fe5b146158cc61c35e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561592d578082015181840152602081019050615912565b50505050905090810190601f16801561595a5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018061ec83602a91396040019550505050505060006040518083038186803b1580156159c557600080fd5b505af41580156159d9573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015615a2557600080fd5b505afa158015615a39573d6000803e3d6000fd5b505050506040513d6020811015615a4f57600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905080158015615ba2575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8783615ac161c4fb565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015615b6657600080fd5b505af4158015615b7a573d6000803e3d6000fd5b505050506040513d6020811015615b9057600080fd5b81019080805190602001909291905050505b15615c65578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160200191505060206040518083038186803b158015615c2757600080fd5b505afa158015615c3b573d6000803e3d6000fd5b505050506040513d6020811015615c5157600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215615c8961c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615cea578082015181840152602081019050615ccf565b50505050905090810190601f168015615d175780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e81526020018061e8e4602e91396040019550505050505060006040518083038186803b158015615d8257600080fd5b505af4158015615d96573d6000803e3d6000fd5b50505050600060056007811115615da957fe5b600d60199054906101000a900460ff166007811115615dc457fe5b14158015615df8575060036007811115615dda57fe5b600d60199054906101000a900460ff166007811115615df557fe5b14155b8015615e2a575060046007811115615e0c57fe5b600d60199054906101000a900460ff166007811115615e2757fe5b14155b90508015615f775773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060128054905011615e5d61c5d9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615ebe578082015181840152602081019050615ea3565b50505050905090810190601f168015615eeb5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018061e912604d91396060019550505050505060006040518083038186803b158015615f5657600080fd5b505af4158015615f6a573d6000803e3d6000fd5b50505050615f7661c616565b5b6007600d60196101000a81548160ff02191690836007811115615f9657fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff166007811115615ff957fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a26160717f41475245454d454e545f53544154455f4348414e4745440000000000000000003061c712565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2600d60199054906101000a900460ff16935050505090565b61611e61cefc565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610200018190525061617b61c83b565b816020019060ff16908160ff16815250506161a081600361ac0890919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6162128333612c05565b1561621b61c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561627c578082015181840152602081019050616261565b50505050905090810190601f1680156162a95780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e76c602b91396040018481038252603481526020018061e858603491396040019550505050505060006040518083038186803b1580156162f757600080fd5b505af415801561630b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600088815260200190815260200160002060010160039054906101000a900460ff1661635561c844565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156163b657808201518184015260208101905061639b565b50505050905090810190601f1680156163e35780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec5e602591396040018481038252603481526020018061ee61603491396040019550505050505060006040518083038186803b15801561643157600080fd5b505af4158015616445573d6000803e3d6000fd5b50505050836014600087815260200190815260200160002060010160006101000a81548160ff021916908315150217905550826014600087815260200190815260200160002060010160016101000a81548160ff021916908315150217905550816014600087815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b6000806000806165758686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012061aad5565b90919293945090919293508094508195508296508397505050505092959194509250565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561663b57600080fd5b505af415801561664f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561667957600080fd5b810190808051604051939291908464010000000082111561669957600080fd5b838201915060208201858111156166af57600080fd5b82518660018202830111640100000000821117156166cc57600080fd5b8083526020830192505050908051906020019080838360005b838110156167005780820151818401526020810190506166e5565b50505050905090810190601f16801561672d5780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156167dc57506167da60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012033612c05565b155b6167e461c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561684557808201518184015260208101905061682a565b50505050905090810190601f1680156168725780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb68602591396040018481038252603481526020018061e858603491396040019550505050505060006040518083038186803b1580156168c057600080fd5b505af41580156168d4573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff161561691f61c881565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616980578082015181840152602081019050616965565b50505050905090810190601f1680156169ad5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb68602591396040018481038252603981526020018061e733603991396040019550505050505060006040518083038186803b1580156169fb57600080fd5b505af4158015616a0f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160019054906101000a900460ff1615616a5a61c5d9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616abb578082015181840152602081019050616aa0565b50505050905090810190601f168015616ae85780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb68602591396040018481038252602981526020018061ea06602991396040019550505050505060006040518083038186803b158015616b3657600080fd5b505af4158015616b4a573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012084148015616c1c575060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b616c2461c5d9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616c85578082015181840152602081019050616c6a565b50505050905090810190601f168015616cb25780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb68602591396040018481038252602d81526020018061ec31602d91396040019550505050505060006040518083038186803b158015616d0057600080fd5b505af4158015616d14573d6000803e3d6000fd5b50505050600080600090505b6014600085815260200190815260200160002060000180549050811015616ec6578273ffffffffffffffffffffffffffffffffffffffff16601460008681526020019081526020016000206000018281548110616d7957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415616eb9576001915060008190505b6001601460008781526020019081526020016000206000018054905003811015616eb357601460008681526020019081526020016000206000016001820181548110616e1257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008781526020019081526020016000206000018281548110616e5e57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050616dca565b50616ec6565b8080600101915050616d20565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215616eeb61c881565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616f4c578082015181840152602081019050616f31565b50505050905090810190601f168015616f795780820380516001836020036101000a031916815260200191505b508481038352602581526020018061eb68602591396040018481038252603081526020018061ee31603091396040019550505050505060006040518083038186803b158015616fc757600080fd5b505af4158015616fdb573d6000803e3d6000fd5b5050505060146000848152602001908152602001600020600001805480919060019003617008919061d033565b50505050565b60007f41475245454d454e545f50415254494553000000000000000000000000000000821415617045576012805490509050617051565b61704e8261c8be565b90505b919050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6170e58333612c05565b156170ee61c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561714f578082015181840152602081019050617134565b50505050905090810190601f16801561717c5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e76c602b91396040018481038252603481526020018061e858603491396040019550505050505060006040518083038186803b1580156171ca57600080fd5b505af41580156171de573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600086815260200190815260200160002060010160039054906101000a900460ff161561722961c881565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561728a57808201518184015260208101905061726f565b50505050905090810190601f1680156172b75780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e70f602491396040018481038252603981526020018061e733603991396040019550505050505060006040518083038186803b15801561730557600080fd5b505af4158015617319573d6000803e3d6000fd5b505050506014600084815260200190815260200160002060010160009054906101000a900460ff161561756557601460008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156173dc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311617392575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015617482578082015181840152602081019050617467565b50505050905001935050505060206040518083038186803b1580156174a657600080fd5b505af41580156174ba573d6000803e3d6000fd5b505050506040513d60208110156174d057600080fd5b810190808051906020019092919050505061756057601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b617894565b60006014600085815260200190815260200160002060000180549050141561760657601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050617893565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961762861c4b5565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561767f578082015181840152602081019050617664565b50505050905090810190601f1680156176ac5780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e70f602491396040018481038252608381526020018061e6606083913960a00194505050505060006040518083038186803b1580156176f957600080fd5b505af415801561770d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561773757600080fd5b810190808051604051939291908464010000000082111561775757600080fd5b8382019150602082018581111561776d57600080fd5b825186600182028301116401000000008211171561778a57600080fd5b8083526020830192505050908051906020019080838360005b838110156177be5780820151818401526020810190506177a3565b50505050905090810190601f1680156177eb5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561785857808201518184015260208101905061783d565b50505050905090810190601f1680156178855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061ef3660259139602501905060405160208183030381529060405280519060200120604051602001808061ebb460279139602701905060405160208183030381529060405280519060200120604051602001808061e8b8602c9139602c01905060405160208183030381529060405280519060200120604051602001808061ea79604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff166179c161c5d9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617a22578082015181840152602081019050617a07565b50505050905090810190601f168015617a4f5780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061e636602a91396040018481038252602981526020018061e82f602991396040019550505050505060006040518083038186803b158015617a9d57600080fd5b505af4158015617ab1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614617b0761c469565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617b68578082015181840152602081019050617b4d565b50505050905090810190601f168015617b955780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ef15602191396040018481038252602e81526020018061eee7602e91396040019550505050505060006040518083038186803b158015617be357600080fd5b505af4158015617bf7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614617c4d61c469565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617cae578082015181840152602081019050617c93565b50505050905090810190601f168015617cdb5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ef15602191396040018481038252602c81526020018061e6e3602c91396040019550505050505060006040518083038186803b158015617d2957600080fd5b505af4158015617d3d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614617d9361c469565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617df4578082015181840152602081019050617dd9565b50505050905090810190601f168015617e215780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ef15602191396040018481038252602381526020018061ecdf602391396040019550505050505060006040518083038186803b158015617e6f57600080fd5b505af4158015617e83573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b158015617ee757600080fd5b505afa158015617efb573d6000803e3d6000fd5b505050506040513d6020811015617f1157600080fd5b810190808051906020019092919050505015617f2b61c95c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617f8c578082015181840152602081019050617f71565b50505050905090810190601f168015617fb95780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ef1560219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b15801561802457600080fd5b505af4158015618038573d6000803e3d6000fd5b505050506181a1828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b1580156180c757600080fd5b505afa1580156180db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561810557600080fd5b810190808051604051939291908464010000000082111561812557600080fd5b8382019150602082018581111561813b57600080fd5b825186602082028301116401000000008211171561815857600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561818f578082015181840152602081019050618174565b5050505090500160405250505061c999565b61829c60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061ef3660259139602501905060405160208183030381529060405280519060200120604051602001808061ebb460279139602701905060405160208183030381529060405280519060200120604051602001808061e8b8602c9139602c01905060405160208183030381529060405280519060200120604051602001808061ea79604091396040019050604051602081830303815290604052805190602001201818181861cd84565b89600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600087879050111561843b57600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156183fe57600080fd5b505af4158015618412573d6000803e3d6000fd5b505050506040513d602081101561842857600080fd5b8101908080519060200190929190505050505b84600d60146101000a81548160ff02191690831515021790555083836012919061846692919061d05f565b5081816013919061847892919061d05f565b506001600d60196101000a81548160ff0219169083600781111561849857fe5b021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816186da919061d033565b50876014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000160008154811061874457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c600d60199054906101000a900460ff1660078111156189c457fe5b600d60159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b84849050811015618c5d577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30878785818110618b8257fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a28080600101915050618b28565b600090505b82829050811015618d5a577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd30858585818110618cbc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a28080600101915050618c62565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b6003600d60196101000a81548160ff02191690836007811115618da057fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff166007811115618e0357fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a2565b600060138281548110618e6257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060618eaa82600361b49790919063ffffffff16565b606001519050919050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b6060618f3b82600361b49790919063ffffffff16565b61014001519050919050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000618fa782600361b49790919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961901e61c5d9565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561907557808201518184015260208101905061905a565b50505050905090810190601f1680156190a25780820380516001836020036101000a031916815260200191505b508481038352605281526020018061ee95605291396060018481038252609881526020018061e7976098913960a00194505050505060006040518083038186803b1580156190ef57600080fd5b505af4158015619103573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561912d57600080fd5b810190808051604051939291908464010000000082111561914d57600080fd5b8382019150602082018581111561916357600080fd5b825186600182028301116401000000008211171561918057600080fd5b8083526020830192505050908051906020019080838360005b838110156191b4578082015181840152602081019050619199565b50505050905090810190601f1680156191e15780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561924e578082015181840152602081019050619233565b50505050905090810190601f16801561927b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561930657600080fd5b505af415801561931a573d6000803e3d6000fd5b505050506040513d604081101561933057600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146193a161c321565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156194025780820151818401526020810190506193e7565b50505050905090810190601f16801561942f5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ec10602191396040018481038252602681526020018061ea53602691396040019550505050505060006040518083038186803b15801561947d57600080fd5b505af4158015619491573d6000803e3d6000fd5b50505050600060078111156194a257fe5b600d60199054906101000a900460ff1660078111156194bd57fe5b14806194ee5750600160078111156194d157fe5b600d60199054906101000a900460ff1660078111156194ec57fe5b145b156196bc5781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506195c361c616565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26199b5565b600260078111156196c957fe5b600d60199054906101000a900460ff1660078111156196e457fe5b14156199b4576000601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156199b35781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b6012805490508110156199b1576000601160006012848154811061991757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561998b576199b1565b6001601280549050038114156199a4576199a361c616565b5b80806001019150506198f7565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff1615619a0061c881565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619a61578082015181840152602081019050619a46565b50505050905090810190601f168015619a8e5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eb8d602791396040018481038252603981526020018061e733603991396040019550505050505060006040518083038186803b158015619adc57600080fd5b505af4158015619af0573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160029054906101000a900460ff1615619b3b61c5d9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619b9c578082015181840152602081019050619b81565b50505050905090810190601f168015619bc95780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eb8d602791396040018481038252602c81526020018061e88c602c91396040019550505050505060006040518083038186803b158015619c1757600080fd5b505af4158015619c2b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60146000858152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015619cdf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311619c95575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015619d85578082015181840152602081019050619d6a565b50505050905001935050505060206040518083038186803b158015619da957600080fd5b505af4158015619dbd573d6000803e3d6000fd5b505050506040513d6020811015619dd357600080fd5b8101908080519060200190929190505050619dec61c844565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619e4d578082015181840152602081019050619e32565b50505050905090810190601f168015619e7a5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eb8d602791396040018481038252603581526020018061eb33603591396040019550505050505060006040518083038186803b158015619ec857600080fd5b505af4158015619edc573d6000803e3d6000fd5b5050505060008090505b601460008481526020019081526020016000206000018054905081101561a003573373ffffffffffffffffffffffffffffffffffffffff16601460008581526020019081526020016000206000018281548110619f3f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415619ff65781601460008581526020019081526020016000206000018281548110619fa857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061a291565b8080600101915050619ee6565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961a02661c321565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a07d57808201518184015260208101905061a062565b50505050905090810190601f16801561a0aa5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061eb8d602791396040018481038252603581526020018061ebdb6035913960400194505050505060006040518083038186803b15801561a0f757600080fd5b505af415801561a10b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561a13557600080fd5b810190808051604051939291908464010000000082111561a15557600080fd5b8382019150602082018581111561a16b57600080fd5b825186600182028301116401000000008211171561a18857600080fd5b8083526020830192505050908051906020019080838360005b8381101561a1bc57808201518184015260208101905061a1a1565b50505050905090810190601f16801561a1e95780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561a25657808201518184015260208101905061a23b565b50505050905090810190601f16801561a2835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b61a29d61cefc565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610400018190525061a2fa61ce6f565b816020019060ff16908160ff168152505061a31f81600361ac0890919063ffffffff16565b5050505050565b60607f41475245454d454e545f5041525449455300000000000000000000000000000082141561a3de57601280548060200260200160405190810160405280929190818152602001828054801561a3d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161a388575b5050505050905061a3fa565b61a3f282600361b49790919063ffffffff16565b610120015190505b919050565b60006002806003811061a40e57fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b606061a44582600361b49790919063ffffffff16565b6102c001519050919050565b61a45961cefc565b8281600001818152505061a46b61ce78565b816020019060ff16908160ff16815250508181608001818152505061a49a81600361ac0890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b600061a54a82600361b49790919063ffffffff16565b60c001519050919050565b600080601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b61a60f61cefc565b8381600001818152505061a62161ce87565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610140018190525061a69181600361ac0890919063ffffffff16565b5050505050565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561a7b657600080fd5b505af415801561a7ca573d6000803e3d6000fd5b505050506040513d602081101561a7e057600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561a95057600080fd5b505af415801561a964573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561a98e57600080fd5b810190808051604051939291908464010000000082111561a9ae57600080fd5b8382019150602082018581111561a9c457600080fd5b825186600182028301116401000000008211171561a9e157600080fd5b8083526020830192505050908051906020019080838360005b8381101561aa1557808201518184015260208101905061a9fa565b50505050905090810190601f16801561aa425780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600d60149054906101000a900460ff16905090565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b606061aac982600361b49790919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff161561abf6576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff161561b0195781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061acbd92919061d0ff565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e0820151816006015561010082015181600701908051906020019061ad4092919061d17f565b5061012082015181600801908051906020019061ad5e92919061d1df565b5061014082015181600901908051906020019061ad7c92919061d269565b5061016082015181600a01908051906020019061ad9a92919061d30f565b5061018082015181600b01908051906020019061adb892919061d3b6565b506101a082015181600c01908051906020019061add692919061d460565b506101c082015181600d01908051906020019061adf492919061d510565b506101e082015181600e01908051906020019061ae1292919061d5cc565b5061020082015181600f01908051906020019061ae3092919061d6a0565b5061022082015181601001908051906020019061ae4e92919061d6ed565b5061024082015181601101908051906020019061ae6c92919061d797565b5061026082015181601201908051906020019061ae8a92919061d844565b5061028082015181601301908051906020019061aea892919061d8f7565b506102a082015181601401908051906020019061aec692919061d9b6565b506102c082015181601501908051906020019061aee492919061da8d565b506102e082015181601601908051906020019061af0292919061dada565b5061030082015181601701908051906020019061af2092919061db81565b5061032082015181601801908051906020019061af3e92919061dc2a565b5061034082015181601901908051906020019061af5c92919061dcd5565b5061036082015181601a01908051906020019061af7a92919061dd82565b5061038082015181601b01908051906020019061af9892919061de37565b506103a082015181601c01908051906020019061afb692919061defc565b506103c082015181601d01908051906020019061afd492919061df73565b506103e082015181601e01908051906020019061aff292919061dfee565b5061040082015181601f01908051906020019061b01092919061e06d565b5090505061b47e565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061b0f192919061d0ff565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e0820151816006015561010082015181600701908051906020019061b17492919061d17f565b5061012082015181600801908051906020019061b19292919061d1df565b5061014082015181600901908051906020019061b1b092919061d269565b5061016082015181600a01908051906020019061b1ce92919061d30f565b5061018082015181600b01908051906020019061b1ec92919061d3b6565b506101a082015181600c01908051906020019061b20a92919061d460565b506101c082015181600d01908051906020019061b22892919061d510565b506101e082015181600e01908051906020019061b24692919061d5cc565b5061020082015181600f01908051906020019061b26492919061d6a0565b5061022082015181601001908051906020019061b28292919061d6ed565b5061024082015181601101908051906020019061b2a092919061d797565b5061026082015181601201908051906020019061b2be92919061d844565b5061028082015181601301908051906020019061b2dc92919061d8f7565b506102a082015181601401908051906020019061b2fa92919061d9b6565b506102c082015181601501908051906020019061b31892919061da8d565b506102e082015181601601908051906020019061b33692919061dada565b5061030082015181601701908051906020019061b35492919061db81565b5061032082015181601801908051906020019061b37292919061dc2a565b5061034082015181601901908051906020019061b39092919061dcd5565b5061036082015181601a01908051906020019061b3ae92919061dd82565b5061038082015181601b01908051906020019061b3cc92919061de37565b506103a082015181601c01908051906020019061b3ea92919061defc565b506103c082015181601d01908051906020019061b40892919061df73565b506103e082015181601e01908051906020019061b42692919061dfee565b5061040082015181601f01908051906020019061b44492919061e06d565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b61b49f61cefc565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561b59e5780601f1061b5735761010080835404028352916020019161b59e565b820191906000526020600020905b81548152906001019060200180831161b58157829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b8282101561b6fc578382906000526020600020018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561b6e85780601f1061b6bd5761010080835404028352916020019161b6e8565b820191906000526020600020905b81548152906001019060200180831161b6cb57829003601f168201915b50505050508152602001906001019061b640565b5050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561b78957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161b73f575b505050505081526020016009820180548060200260200160405190810160405280929190818152602001828054801561b80657602002820191906000526020600020906000905b82829054906101000a900460ff1615158152602001906001019060208260000104928301926001038202915080841161b7d05790505b50505050508152602001600a820180548060200260200160405190810160405280929190818152602001828054801561b88457602002820191906000526020600020906000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161b84d5790505b50505050508152602001600b820180548060200260200160405190810160405280929190818152602001828054801561b90457602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161b8cb5790505b50505050508152602001600c820180548060200260200160405190810160405280929190818152602001828054801561b98857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161b94b5790505b50505050508152602001600d820180548060200260200160405190810160405280929190818152602001828054801561ba1457602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841161b9cf5790505b50505050508152602001600e820180548060200260200160405190810160405280929190818152602001828054801561bab057602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f0104928301926001038202915080841161ba5b5790505b50505050508152602001600f820180548060200260200160405190810160405280929190818152602001828054801561bb0857602002820191906000526020600020905b81548152602001906001019080831161baf4575b505050505081526020016010820180548060200260200160405190810160405280929190818152602001828054801561bb8657602002820191906000526020600020906000905b82829054906101000a900460000b60000b8152602001906001019060208260000104928301926001038202915080841161bb4f5790505b505050505081526020016011820180548060200260200160405190810160405280929190818152602001828054801561bc0457602002820191906000526020600020906000905b82829054906101000a900460010b60010b8152602001906002019060208260010104928301926001038202915080841161bbcd5790505b505050505081526020016012820180548060200260200160405190810160405280929190818152602001828054801561bc8257602002820191906000526020600020906000905b82829054906101000a900460030b60030b8152602001906004019060208260030104928301926001038202915080841161bc4b5790505b505050505081526020016013820180548060200260200160405190810160405280929190818152602001828054801561bd0057602002820191906000526020600020906000905b82829054906101000a900460070b60070b8152602001906008019060208260070104928301926001038202915080841161bcc95790505b505050505081526020016014820180548060200260200160405190810160405280929190818152602001828054801561bd7e57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f0104928301926001038202915080841161bd475790505b505050505081526020016015820180548060200260200160405190810160405280929190818152602001828054801561bdd657602002820191906000526020600020905b81548152602001906001019080831161bdc2575b505050505081526020016016820180548060200260200160405190810160405280929190818152602001828054801561be7357602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906001019060208260000104928301926001038202915080841161be1d5790505b505050505081526020016017820180548060200260200160405190810160405280929190818152602001828054801561bf0f57602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906002019060208260010104928301926001038202915080841161beba5790505b505050505081526020016018820180548060200260200160405190810160405280929190818152602001828054801561bfaa57602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906003019060208260020104928301926001038202915080841161bf565790505b505050505081526020016019820180548060200260200160405190810160405280929190818152602001828054801561c04457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161bff15790505b50505050508152602001601a820180548060200260200160405190810160405280929190818152602001828054801561c0da57602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906008019060208260070104928301926001038202915080841161c08b5790505b50505050508152602001601b820180548060200260200160405190810160405280929190818152602001828054801561c16857602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f0104928301926001038202915080841161c1215790505b50505050508152602001601c820180548060200260200160405190810160405280929190818152602001828054801561c1dc57602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff19168152602001906001019080831161c1ac575b50505050508152602001601d820180548060200260200160405190810160405280929190818152602001828054801561c24c57602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff19168152602001906001019080831161c220575b50505050508152602001601e820180548060200260200160405190810160405280929190818152602001828054801561c2b857602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff19168152602001906001019080831161c290575b50505050508152602001601f820180548060200260200160405190810160405280929190818152602001828054801561c31057602002820191906000526020600020905b81548152602001906001019080831161c2fc575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b600061c3c98360006003811061c3ad57fe5b60200201518360006003811061c3bf57fe5b602002015161ce90565b90506000811461c3db5780905061c448565b61c4078360016003811061c3eb57fe5b60200201518360016003811061c3fd57fe5b602002015161ce90565b90506000811461c4195780905061c448565b61c4458360026003811061c42957fe5b60200201518360026003811061c43b57fe5b602002015161ce90565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b600061c4b061ceea565b905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005600d60196101000a81548160ff0219169083600781111561c63557fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561c69857fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a261c7107f41475245454d454e545f53544154455f4348414e4745440000000000000000003061c712565b565b60008090505b600a60000160008481526020019081526020016000206001018054905081101561c83657600a6000016000848152602001908152602001600020600101818154811061c76057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561c81157600080fd5b505af115801561c825573d6000803e3d6000fd5b50505050808060010191505061c718565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561c91a57600080fd5b505af415801561c92e573d6000803e3d6000fd5b505050506040513d602081101561c94457600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82518451141561c9c161c35e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561ca2257808201518184015260208101905061ca07565b50505050905090810190601f16801561ca4f5780820380516001836020036101000a031916815260200191505b508481038352603281526020018061e95f603291396040018481038252606681526020018061ed96606691396080019550505050505060006040518083038186803b15801561ca9d57600080fd5b505af415801561cab1573d6000803e3d6000fd5b50505050600080905060008090505b835181101561cc565760008090505b835181101561cc4857600073ffffffffffffffffffffffffffffffffffffffff1684828151811061cafc57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561cb255761cc3b565b84828151811061cb3157fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b15801561cb7e57600080fd5b505afa15801561cb92573d6000803e3d6000fd5b505050506040513d602081101561cba857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1684828151811061cbdb57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561cc3a5783818151811061cc0b57fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff16815250828060010193505061cc48565b5b808060010191505061cacf565b50808060010191505061cac0565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000845111801561cc83575083518314155b61cc8b61c35e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561ccec57808201518184015260208101905061ccd1565b50505050905090810190601f16801561cd195780820380516001836020036101000a031916815260200191505b508481038352603281526020018061e95f603291396040018481038252607a81526020018061eab9607a91396080019550505050505060006040518083038186803b15801561cd6757600080fd5b505af415801561cd7b573d6000803e3d6000fd5b50505050505050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561ce03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061ed02602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000609f905090565b600061ce8261cef3565b905090565b60006065905090565b60008260ff168260ff16141561cea9576000905061cee4565b8260ff168260ff16101561cedf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061cee4565b600190505b92915050565b60006012905090565b60006008905090565b60405180610420016040528060008019168152602001600060ff168152602001600015158152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b81548183558181111561d05a5781836000526020600020918201910161d059919061e0ba565b5b505050565b82805482825590600052602060002090810192821561d0ee579160200282015b8281111561d0ed57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061d07f565b5b50905061d0fb919061e0df565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061d14057805160ff191683800117855561d16e565b8280016001018555821561d16e579182015b8281111561d16d57825182559160200191906001019061d152565b5b50905061d17b919061e0ba565b5090565b82805482825590600052602060002090810192821561d1ce579160200282015b8281111561d1cd57825182908051906020019061d1bd92919061d0ff565b509160200191906001019061d19f565b5b50905061d1db919061e122565b5090565b82805482825590600052602060002090810192821561d258579160200282015b8281111561d2575782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061d1ff565b5b50905061d265919061e0df565b5090565b82805482825590600052602060002090601f0160209004810192821561d2fe5791602002820160005b8382111561d2cf57835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030261d292565b801561d2fc5782816101000a81549060ff021916905560010160208160000104928301926001030261d2cf565b505b50905061d30b919061e14e565b5090565b82805482825590600052602060002090601f0160209004810192821561d3a55791602002820160005b8382111561d37657835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030261d338565b801561d3a35782816101000a81549060ff021916905560010160208160000104928301926001030261d376565b505b50905061d3b2919061e17e565b5090565b82805482825590600052602060002090600f0160109004810192821561d44f5791602002820160005b8382111561d41f57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261d3df565b801561d44d5782816101000a81549061ffff021916905560020160208160010104928301926001030261d41f565b505b50905061d45c919061e1ae565b5090565b8280548282559060005260206000209060070160089004810192821561d4ff5791602002820160005b8382111561d4cd57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261d489565b801561d4fd5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d4cd565b505b50905061d50c919061e1df565b5090565b8280548282559060005260206000209060030160049004810192821561d5bb5791602002820160005b8382111561d58557835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d539565b801561d5b95782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261d585565b505b50905061d5c8919061e212565b5090565b8280548282559060005260206000209060010160029004810192821561d68f5791602002820160005b8382111561d65157835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261d5f5565b801561d68d5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261d651565b505b50905061d69c919061e249565b5090565b82805482825590600052602060002090810192821561d6dc579160200282015b8281111561d6db57825182559160200191906001019061d6c0565b5b50905061d6e9919061e0ba565b5090565b82805482825590600052602060002090601f0160209004810192821561d7865791602002820160005b8382111561d75757835183826101000a81548160ff021916908360000b60ff160217905550926020019260010160208160000104928301926001030261d716565b801561d7845782816101000a81549060ff021916905560010160208160000104928301926001030261d757565b505b50905061d793919061e288565b5090565b82805482825590600052602060002090600f0160109004810192821561d8335791602002820160005b8382111561d80357835183826101000a81548161ffff021916908360010b61ffff160217905550926020019260020160208160010104928301926001030261d7c0565b801561d8315782816101000a81549061ffff021916905560020160208160010104928301926001030261d803565b505b50905061d840919061e2b8565b5090565b8280548282559060005260206000209060070160089004810192821561d8e65791602002820160005b8382111561d8b457835183826101000a81548163ffffffff021916908360030b63ffffffff160217905550926020019260040160208160030104928301926001030261d86d565b801561d8e45782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d8b4565b505b50905061d8f3919061e2e9565b5090565b8280548282559060005260206000209060030160049004810192821561d9a55791602002820160005b8382111561d96f57835183826101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d920565b801561d9a35782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261d96f565b505b50905061d9b2919061e31c565b5090565b8280548282559060005260206000209060010160029004810192821561da7c5791602002820160005b8382111561da3e57835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261d9df565b801561da7a5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261da3e565b505b50905061da89919061e353565b5090565b82805482825590600052602060002090810192821561dac9579160200282015b8281111561dac857825182559160200191906001019061daad565b5b50905061dad6919061e392565b5090565b82805482825590600052602060002090601f0160209004810192821561db705791602002820160005b8382111561db4157835183826101000a81548160ff021916908360f81c0217905550926020019260010160208160000104928301926001030261db03565b801561db6e5782816101000a81549060ff021916905560010160208160000104928301926001030261db41565b505b50905061db7d919061e3b7565b5090565b82805482825590600052602060002090600f0160109004810192821561dc195791602002820160005b8382111561dbe957835183826101000a81548161ffff021916908360f01c0217905550926020019260020160208160010104928301926001030261dbaa565b801561dc175782816101000a81549061ffff021916905560020160208160010104928301926001030261dbe9565b505b50905061dc26919061e3e7565b5090565b82805482825590600052602060002090600901600a9004810192821561dcc45791602002820160005b8382111561dc9357835183826101000a81548162ffffff021916908360e81c0217905550926020019260030160208160020104928301926001030261dc53565b801561dcc25782816101000a81549062ffffff021916905560030160208160020104928301926001030261dc93565b505b50905061dcd1919061e418565b5090565b8280548282559060005260206000209060070160089004810192821561dd715791602002820160005b8382111561dd3f57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261dcfe565b801561dd6f5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261dd3f565b505b50905061dd7e919061e44a565b5090565b8280548282559060005260206000209060030160049004810192821561de265791602002820160005b8382111561ddf057835183826101000a81548167ffffffffffffffff021916908360c01c0217905550926020019260080160208160070104928301926001030261ddab565b801561de245782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261ddf0565b505b50905061de33919061e47d565b5090565b8280548282559060005260206000209060010160029004810192821561deeb5791602002820160005b8382111561dead57835183826101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055509260200192601001602081600f0104928301926001030261de60565b801561dee95782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261dead565b505b50905061def8919061e4b4565b5090565b82805482825590600052602060002090810192821561df62579160200282015b8281111561df615782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055509160200191906001019061df1c565b5b50905061df6f919061e4f3565b5090565b82805482825590600052602060002090810192821561dfdd579160200282015b8281111561dfdc5782518260006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908360401c02179055509160200191906001019061df93565b5b50905061dfea919061e536565b5090565b82805482825590600052602060002090810192821561e05c579160200282015b8281111561e05b5782518260006101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360201c02179055509160200191906001019061e00e565b5b50905061e069919061e57d565b5090565b82805482825590600052602060002090810192821561e0a9579160200282015b8281111561e0a857825182559160200191906001019061e08d565b5b50905061e0b6919061e5c8565b5090565b61e0dc91905b8082111561e0d857600081600090555060010161e0c0565b5090565b90565b61e11f91905b8082111561e11b57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e0e5565b5090565b90565b61e14b91905b8082111561e147576000818161e13e919061e5ed565b5060010161e128565b5090565b90565b61e17b91905b8082111561e17757600081816101000a81549060ff02191690555060010161e154565b5090565b90565b61e1ab91905b8082111561e1a757600081816101000a81549060ff02191690555060010161e184565b5090565b90565b61e1dc91905b8082111561e1d857600081816101000a81549061ffff02191690555060010161e1b4565b5090565b90565b61e20f91905b8082111561e20b57600081816101000a81549063ffffffff02191690555060010161e1e5565b5090565b90565b61e24691905b8082111561e24257600081816101000a81549067ffffffffffffffff02191690555060010161e218565b5090565b90565b61e28591905b8082111561e28157600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e24f565b5090565b90565b61e2b591905b8082111561e2b157600081816101000a81549060ff02191690555060010161e28e565b5090565b90565b61e2e691905b8082111561e2e257600081816101000a81549061ffff02191690555060010161e2be565b5090565b90565b61e31991905b8082111561e31557600081816101000a81549063ffffffff02191690555060010161e2ef565b5090565b90565b61e35091905b8082111561e34c57600081816101000a81549067ffffffffffffffff02191690555060010161e322565b5090565b90565b61e38f91905b8082111561e38b57600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e359565b5090565b90565b61e3b491905b8082111561e3b057600081600090555060010161e398565b5090565b90565b61e3e491905b8082111561e3e057600081816101000a81549060ff02191690555060010161e3bd565b5090565b90565b61e41591905b8082111561e41157600081816101000a81549061ffff02191690555060010161e3ed565b5090565b90565b61e44791905b8082111561e44357600081816101000a81549062ffffff02191690555060010161e41e565b5090565b90565b61e47a91905b8082111561e47657600081816101000a81549063ffffffff02191690555060010161e450565b5090565b90565b61e4b191905b8082111561e4ad57600081816101000a81549067ffffffffffffffff02191690555060010161e483565b5090565b90565b61e4f091905b8082111561e4ec57600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e4ba565b5090565b90565b61e53391905b8082111561e52f57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e4f9565b5090565b90565b61e57a91905b8082111561e57657600081816101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e53c565b5090565b90565b61e5c591905b8082111561e5c157600081816101000a8154907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e583565b5090565b90565b61e5ea91905b8082111561e5e657600081600090555060010161e5ce565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061e613575061e632565b601f01602090049060005260206000209081019061e631919061e0ba565b5b5056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6553696e676c652d68656c64207065726d697373696f6e20746861742068617320616c7265616479206265656e206772616e7465642063616e6e6f74206265206f7665727772697474656e20627920746865207065726d697373696f6e2061646d696e2e20557365207472616e736665725065726d697373696f6e20696e73746561642e5468652070726f7669646564206f776e65722061646472657373206d757374206e6f7420626520656d70747941627374726163745065726d697373696f6e65642e6772616e745065726d697373696f6e54686520737065636966696564207065726d697373696f6e20646f6573206e6f742065786973742e204372656174652069742066697273742e41627374726163745065726d697373696f6e65642e7072655f72657175697265735065726d697373696f6e546869732076657273696f6e206f6620696e697469616c697a65206973206e6f206c6f6e67657220737570706f727465642e20506c65617365207573652044656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d2954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564546865206d73672e73656e64657220646f6573206e6f74206861766520746865207265717569726564207065726d697373696f6e54686520737065636966696564207065726d697373696f6e206973206e6f74207472616e7366657261626c657265736f6c76654164647265737353636f706528616464726573732c627974657333322c61646472657373294f6e6c79207468652061677265656d656e74206f776e6572206d6179207265717565737420726564616374696f6e5468652061677265656d656e742063616e6e6f742062652072656461637465642e2054686520726567697374657265642070617274696573206d7573742063616e63656c20697420666972737444656661756c7441637469766541677265656d656e742e76616c6964617465476f7665726e696e6741677265656d656e7473546865206f626a6563742061646d696e2068617320616c7265616479206265656e2073657420616e642063616e6e6f74206265206f7665727772697474656e46697865642073636f706520616e6420436f6e646974696f6e616c44617461206d757374206e6f7420626f746820626520656d70747954686520737065636966696564207065726d697373696f6e206973206e6f74207265766f6361626c655468652063616c6c6572206973206e6f7420617574686f72697a656420746f207369676e5468652063616c6c6572206973206e6f7420617574686f72697a656420746f2063616e63656c7365744164647265737353636f706528616464726573732c627974657333322c627974657333322c627974657333322c627974657333322c61646472657373295468652070726f766964656420676f7665726e696e672061677265656d656e747320646f206e6f74206d6174636820616c6c206f662074686520676f7665726e696e6720617263686574797065732072657175697265642062792074686520617263686574797065206f6620746869732061677265656d656e74546865206e657720686f6c64657220616c726561647920686f6c64732074686520737065636966696564207065726d697373696f6e41627374726163745065726d697373696f6e65642e7265766f6b655065726d697373696f6e41627374726163745065726d697373696f6e65642e7472616e736665725065726d697373696f6e6765744164647265737353636f706544657461696c7328616464726573732c6279746573333229546865206d73672e73656e64657220646f6573206e6f7420686f6c642074686520737065636966696564207065726d697373696f6e44656661756c7441637469766541677265656d656e742e646f43616e63656c282941646d696e207065726d697373696f6e20686f6c646572732063616e6e6f74206265206c65667420656d70747941627374726163745065726d697373696f6e65642e6372656174655065726d697373696f6e5468652061677265656d656e7420697320616c726561647920696e20737461746520524544414354454441627374726163745065726d697373696f6e65642e696e697469616c697a654f626a65637441646d696e6973747261746f724172636865747970652061646472657373206d757374206e6f7420626520656d707479466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365546865204461746153746f7261676520706172616d6574657220697320726571756972656420666f72206120436f6e646974696f6e616c446174612073636f706520776974686f75742061206669786564206461746153746f726167652061646472657373546865206e756d626572206f662070726f766964656420676f7665726e696e672061677265656d656e747320646f6573206e6f74206d6174636820746865207265717569726564206e756d626572206f6620676f7665726e696e672061726368657479706573546865206164647265737320746f20776869636820746f2061646420612073636f7065206d757374206e6f7420626520656d70747954686520676976656e206163636f756e7420646f6573206e6f7420686f6c642074686973207065726d697373696f6e2e41207065726d697373696f6e207769746820746865206964656e746966696572206e616d6520616c72656164792065786973747344656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d295468652070726f76696465642063726561746f722061646472657373206d757374206e6f7420626520656d70747944656661756c7441637469766541677265656d656e742e696e697469616c697a656765744164647265737353636f706544657461696c73466f724b6579286279746573333229a265627a7a7231582016ba7bfbf8a7ed742bb29b7728fc0d371f2b7c5a7619991e081406dd4ac4c1d464736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return client.encode("1314CF66", []); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}