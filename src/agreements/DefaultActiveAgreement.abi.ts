//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156125b357600080fd5b505af41580156125c7573d6000803e3d6000fd5b505050506040513d60208110156125dd57600080fd5b8101908080519060200190929190505050505050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801561269557600080fd5b505af41580156126a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156126d357600080fd5b81019080805160405193929190846401000000008211156126f357600080fd5b8382019150602082018581111561270957600080fd5b825186600182028301116401000000008211171561272657600080fd5b8083526020830192505050908051906020019080838360005b8381101561275a57808201518184015260208101905061273f565b50505050905090810190601f1680156127875780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601380549050905090565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80600d60156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1680156128f45750816014600085815260200190815260200160002060000180549050115b1561294c5760146000848152602001908152602001600020600001828154811061291a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612951565b600090505b92915050565b61295f61cf90565b8381600001818152505061297161ac93565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506129e381600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b612ab261cf90565b82816000018181525050612ac461b522565b816020019060ff16908160ff168152505081816040019015159081151581525050612af981600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b6000612bad82600361b52b90919063ffffffff16565b60e001519050919050565b60006014600084815260200190815260200160002060010160039054906101000a900460ff1615612e4f576014600084815260200190815260200160002060010160009054906101000a900460ff16612cb05760006014600085815260200190815260200160002060000180549050118015612cab57508173ffffffffffffffffffffffffffffffffffffffff1660146000858152602001908152602001600020600001600081548110612c6857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b612e4c565b60146000848152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015612d4657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612cfc575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015612dec578082015181840152602081019050612dd1565b50505050905001935050505060206040518083038186803b158015612e1057600080fd5b505af4158015612e24573d6000803e3d6000fd5b505050506040513d6020811015612e3a57600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b158015612ef057600080fd5b505af4158015612f04573d6000803e3d6000fd5b505050506040513d6020811015612f1a57600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015612fad57600080fd5b505af4158015612fc1573d6000803e3d6000fd5b505050506040513d6040811015612fd757600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461304c61c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156130ad578082015181840152602081019050613092565b50505050905090810190601f1680156130da5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018061eaf1602491396040019550505050505060006040518083038186803b15801561314557600080fd5b505af4158015613159573d6000803e3d6000fd5b505050506000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561355c5781601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156133df57600080fd5b505af41580156133f3573d6000803e3d6000fd5b505050506040513d602081101561340957600080fd5b81019080805190602001909291905050508015613485575060006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b1561355b576002600d60196101000a81548160ff021916908360078111156134a957fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561350c57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25b5b5050565b600061357682600361b52b90919063ffffffff16565b604001519050919050565b606061359782600361b52b90919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156135ff57600080fd5b505af4158015613613573d6000803e3d6000fd5b505050506040513d602081101561362957600080fd5b81019080805190602001909291905050509050919050565b600061365782600361b52b90919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156136be57600080fd5b505af41580156136d2573d6000803e3d6000fd5b505050506040513d60408110156136e857600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006005600083815260200190815260200160002060010160010154146137b6576005600082815260200190815260200160002060010160010154915050613b3a565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff1615613b3857600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156139ba5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146138a861c3f2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156139095780820151818401526020810190506138ee565b50505050905090810190601f1680156139365780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018061ee27606591396080019550505050505060006040518083038186803b1580156139a157600080fd5b505af41580156139b5573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015613a5957600080fd5b505af4158015613a6d573d6000803e3d6000fd5b505050506040513d6040811015613a8357600080fd5b810190808051906020019092919080519060200190929190505050915091508173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613af357600080fd5b505afa158015613b07573d6000803e3d6000fd5b505050506040513d6020811015613b1d57600080fd5b81019080805190602001909291905050509350505050613b3a565b505b9392505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60006007811115613b6857fe5b600d60199054906101000a900460ff166007811115613b8357fe5b14158015613bb7575060016007811115613b9957fe5b600d60199054906101000a900460ff166007811115613bb457fe5b14155b613bbf61c42f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613c20578082015181840152602081019050613c05565b50505050905090810190601f168015613c4d5780820380516001836020036101000a031916815260200191505b508481038352603481526020018061ecd2603491396040018481038252602e81526020018061e6ca602e91396040019550505050505060006040518083038186803b158015613c9b57600080fd5b505af4158015613caf573d6000803e3d6000fd5b50505050600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015613d8757600080fd5b505af4158015613d9b573d6000803e3d6000fd5b505050506040513d6020811015613db157600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015613ed957600080fd5b505af4158015613eed573d6000803e3d6000fd5b505050506040513d6020811015613f0357600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561401057600080fd5b505af4158015614024573d6000803e3d6000fd5b505050506040513d602081101561403a57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b6000600260006003811061419457fe5b602091828204019190069054906101000a900460ff16905090565b6141b98133612518565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6142278333612bb8565b1561423061c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614291578082015181840152602081019050614276565b50505050905090810190601f1680156142be5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e82e602b91396040018481038252603481526020018061e91a603491396040019550505050505060006040518083038186803b15801561430c57600080fd5b505af4158015614320573d6000803e3d6000fd5b5050505081600d60196101000a81548160ff0219169083600781111561434257fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff1660078111156143a557fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25050565b6000600d60199054906101000a900460ff16600781111561441457fe5b905090565b6000600d60159054906101000a900463ffffffff16905090565b60006145286002600380602002604051908101604052809291908260038015614497576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116144605790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156144e257600080fd5b505afa1580156144f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561451b57600080fd5b810190809190505061c46c565b9050919050565b60008060008060006014600087815260200190815260200160002060010160039054906101000a900460ff16945084156145f2576014600087815260200190815260200160002060010160009054906101000a900460ff1693506014600087815260200190815260200160002060010160019054906101000a900460ff1692506014600087815260200190815260200160002060010160029054906101000a900460ff169150601460008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b61461261cf90565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610120018190525061466f61c51f565b816020019060ff16908160ff168152505061469481600361ac9c90919063ffffffff16565b5050505050565b6146a361cf90565b828160000181815250506146b561c528565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061471281600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b6147e061cf90565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c0018190525061483d61c531565b816020019060ff16908160ff168152505061486281600361ac9c90919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146148bb61c53a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561491c578082015181840152602081019050614901565b50505050905090810190601f1680156149495780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018061eef2603591396040019550505050505060006040518083038186803b1580156149b457600080fd5b505af41580156149c8573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000861480156149f65750600085145b6149fe61c3f2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614a5f578082015181840152602081019050614a44565b50505050905090810190601f168015614a8c5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603681526020018061ea92603691396040019550505050505060006040518083038186803b158015614af757600080fd5b505af4158015614b0b573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff16614bc65760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514614c6457846005600083815260200190815260200160002060010160010181905550614d36565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b614ea88133612e55565b50565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015614eff57602002820191906000526020600020905b815481526020019060010190808311614eeb575b5050505050905090565b60085481565b614f1761cf90565b82816000018181525050614f2961c577565b816020019060ff16908160ff1681525050818160a0018181525050614f5881600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b614ffa61d0a5565b6002600380602002604051908101604052809291908260038015615059576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116150225790505b5050505050905090565b6000600260016003811061507357fe5b602091828204019190069054906101000a900460ff16905090565b60006150fd60026003806020026040519081016040528092919082600380156150f2576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116150bb5790505b50505050508361c46c565b9050919050565b6000601280549050821015615152576012828154811061512057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050615153565b5b919050565b6000601280549050905090565b600080600090505b60128054905081101561525e578273ffffffffffffffffffffffffffffffffffffffff1660106000601284815481106151a257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415615251576001915050615264565b808060010191505061516d565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff1661531961c586565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561537a57808201518184015260208101905061535f565b50505050905090810190601f1680156153a75780820380516001836020036101000a031916815260200191505b508481038352603281526020018061eda3603291396040018481038252603f81526020018061ea53603f91396040019550505050505060006040518083038186803b1580156153f557600080fd5b505af4158015615409573d6000803e3d6000fd5b505050506014600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146154a357816154a5565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b6000806014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001805490501161574e5760006157e2565b6014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106157b657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b6157ef61cf90565b8281600001818152505061580161c5c3565b816020019060ff16908160ff1681525050818160e001818152505061583081600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60078081111561593c57fe5b600d60199054906101000a900460ff16600781111561595757fe5b1461596061c3f2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156159c15780820151818401526020810190506159a6565b50505050905090810190601f1680156159ee5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018061ed79602a91396040019550505050505060006040518083038186803b158015615a5957600080fd5b505af4158015615a6d573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015615ab957600080fd5b505afa158015615acd573d6000803e3d6000fd5b505050506040513d6020811015615ae357600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905080158015615c36575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8783615b5561c5cc565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015615bfa57600080fd5b505af4158015615c0e573d6000803e3d6000fd5b505050506040513d6020811015615c2457600080fd5b81019080805190602001909291905050505b15615cf9578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160200191505060206040518083038186803b158015615cbb57600080fd5b505afa158015615ccf573d6000803e3d6000fd5b505050506040513d6020811015615ce557600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215615d1d61c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615d7e578082015181840152602081019050615d63565b50505050905090810190601f168015615dab5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e81526020018061e9a6602e91396040019550505050505060006040518083038186803b158015615e1657600080fd5b505af4158015615e2a573d6000803e3d6000fd5b50505050600060056007811115615e3d57fe5b600d60199054906101000a900460ff166007811115615e5857fe5b14158015615e8c575060036007811115615e6e57fe5b600d60199054906101000a900460ff166007811115615e8957fe5b14155b8015615ebe575060046007811115615ea057fe5b600d60199054906101000a900460ff166007811115615ebb57fe5b14155b9050801561600b5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060128054905011615ef161c6aa565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615f52578082015181840152602081019050615f37565b50505050905090810190601f168015615f7f5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018061e9d4604d91396060019550505050505060006040518083038186803b158015615fea57600080fd5b505af4158015615ffe573d6000803e3d6000fd5b5050505061600a61c6e7565b5b6007600d60196101000a81548160ff0219169083600781111561602a57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff16600781111561608d57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a26161057f41475245454d454e545f53544154455f4348414e4745440000000000000000003061c7e3565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2600d60199054906101000a900460ff16935050505090565b6161b261cf90565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610200018190525061620f61c90c565b816020019060ff16908160ff168152505061623481600361ac9c90919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6162a68333612bb8565b156162af61c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156163105780820151818401526020810190506162f5565b50505050905090810190601f16801561633d5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e82e602b91396040018481038252603481526020018061e91a603491396040019550505050505060006040518083038186803b15801561638b57600080fd5b505af415801561639f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600088815260200190815260200160002060010160039054906101000a900460ff166163e961c915565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561644a57808201518184015260208101905061642f565b50505050905090810190601f1680156164775780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ed54602591396040018481038252603481526020018061ef57603491396040019550505050505060006040518083038186803b1580156164c557600080fd5b505af41580156164d9573d6000803e3d6000fd5b50505050836014600087815260200190815260200160002060010160006101000a81548160ff021916908315150217905550826014600087815260200190815260200160002060010160016101000a81548160ff021916908315150217905550816014600087815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b6000806000806166098686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012061ab69565b90919293945090919293508094508195508296508397505050505092959194509250565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156166cf57600080fd5b505af41580156166e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561670d57600080fd5b810190808051604051939291908464010000000082111561672d57600080fd5b8382019150602082018581111561674357600080fd5b825186600182028301116401000000008211171561676057600080fd5b8083526020830192505050908051906020019080838360005b83811015616794578082015181840152602081019050616779565b50505050905090810190601f1680156167c15780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015616870575061686e60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012033612bb8565b155b61687861c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156168d95780820151818401526020810190506168be565b50505050905090810190601f1680156169065780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec2a602591396040018481038252603481526020018061e91a603491396040019550505050505060006040518083038186803b15801561695457600080fd5b505af4158015616968573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff16156169b361c952565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616a145780820151818401526020810190506169f9565b50505050905090810190601f168015616a415780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec2a602591396040018481038252603981526020018061e7f5603991396040019550505050505060006040518083038186803b158015616a8f57600080fd5b505af4158015616aa3573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160019054906101000a900460ff1615616aee61c6aa565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616b4f578082015181840152602081019050616b34565b50505050905090810190601f168015616b7c5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec2a602591396040018481038252602981526020018061eac8602991396040019550505050505060006040518083038186803b158015616bca57600080fd5b505af4158015616bde573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012084148015616cb0575060016014600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b616cb861c6aa565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616d19578082015181840152602081019050616cfe565b50505050905090810190601f168015616d465780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec2a602591396040018481038252602d81526020018061ed27602d91396040019550505050505060006040518083038186803b158015616d9457600080fd5b505af4158015616da8573d6000803e3d6000fd5b50505050600080600090505b6014600085815260200190815260200160002060000180549050811015616f5a578273ffffffffffffffffffffffffffffffffffffffff16601460008681526020019081526020016000206000018281548110616e0d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415616f4d576001915060008190505b6001601460008781526020019081526020016000206000018054905003811015616f4757601460008681526020019081526020016000206000016001820181548110616ea657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008781526020019081526020016000206000018281548110616ef257fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050616e5e565b50616f5a565b8080600101915050616db4565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215616f7f61c952565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616fe0578082015181840152602081019050616fc5565b50505050905090810190601f16801561700d5780820380516001836020036101000a031916815260200191505b508481038352602581526020018061ec2a602591396040018481038252603081526020018061ef27603091396040019550505050505060006040518083038186803b15801561705b57600080fd5b505af415801561706f573d6000803e3d6000fd5b505050506014600084815260200190815260200160002060000180548091906001900361709c919061d0c7565b50505050565b60007f41475245454d454e545f504152544945530000000000000000000000000000008214156170d95760128054905090506170e5565b6170e28261c98f565b90505b919050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6171798333612bb8565b1561718261c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156171e35780820151818401526020810190506171c8565b50505050905090810190601f1680156172105780820380516001836020036101000a031916815260200191505b508481038352602b81526020018061e82e602b91396040018481038252603481526020018061e91a603491396040019550505050505060006040518083038186803b15801561725e57600080fd5b505af4158015617272573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600086815260200190815260200160002060010160039054906101000a900460ff16156172bd61c952565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561731e578082015181840152602081019050617303565b50505050905090810190601f16801561734b5780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e7d1602491396040018481038252603981526020018061e7f5603991396040019550505050505060006040518083038186803b15801561739957600080fd5b505af41580156173ad573d6000803e3d6000fd5b505050506014600084815260200190815260200160002060010160009054906101000a900460ff16156175f9576014600084815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561747057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311617426575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156175165780820151818401526020810190506174fb565b50505050905001935050505060206040518083038186803b15801561753a57600080fd5b505af415801561754e573d6000803e3d6000fd5b505050506040513d602081101561756457600080fd5b81019080805190602001909291905050506175f457601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b617928565b60006014600085815260200190815260200160002060000180549050141561769a57601460008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050617927565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996176bc61c586565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156177135780820151818401526020810190506176f8565b50505050905090810190601f1680156177405780820380516001836020036101000a031916815260200191505b508481038352602481526020018061e7d1602491396040018481038252608381526020018061e7226083913960a00194505050505060006040518083038186803b15801561778d57600080fd5b505af41580156177a1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156177cb57600080fd5b81019080805160405193929190846401000000008211156177eb57600080fd5b8382019150602082018581111561780157600080fd5b825186600182028301116401000000008211171561781e57600080fd5b8083526020830192505050908051906020019080838360005b83811015617852578082015181840152602081019050617837565b50505050905090810190601f16801561787f5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156178ec5780820151818401526020810190506178d1565b50505050905090810190601f1680156179195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061f02c60259139602501905060405160208183030381529060405280519060200120604051602001808061ec7660279139602701905060405160208183030381529060405280519060200120604051602001808061e97a602c9139602c01905060405160208183030381529060405280519060200120604051602001808061eb3b604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff16617a5561c6aa565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617ab6578082015181840152602081019050617a9b565b50505050905090810190601f168015617ae35780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061e6f8602a91396040018481038252602981526020018061e8f1602991396040019550505050505060006040518083038186803b158015617b3157600080fd5b505af4158015617b45573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614617b9b61c53a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617bfc578082015181840152602081019050617be1565b50505050905090810190601f168015617c295780820380516001836020036101000a031916815260200191505b508481038352602181526020018061f00b602191396040018481038252602e81526020018061efdd602e91396040019550505050505060006040518083038186803b158015617c7757600080fd5b505af4158015617c8b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614617ce161c53a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617d42578082015181840152602081019050617d27565b50505050905090810190601f168015617d6f5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061f00b602191396040018481038252602c81526020018061e7a5602c91396040019550505050505060006040518083038186803b158015617dbd57600080fd5b505af4158015617dd1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614617e2761c53a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617e88578082015181840152602081019050617e6d565b50505050905090810190601f168015617eb55780820380516001836020036101000a031916815260200191505b508481038352602181526020018061f00b602191396040018481038252602381526020018061edd5602391396040019550505050505060006040518083038186803b158015617f0357600080fd5b505af4158015617f17573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b158015617f7b57600080fd5b505afa158015617f8f573d6000803e3d6000fd5b505050506040513d6020811015617fa557600080fd5b810190808051906020019092919050505015617fbf61c42f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618020578082015181840152602081019050618005565b50505050905090810190601f16801561804d5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061f00b60219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b1580156180b857600080fd5b505af41580156180cc573d6000803e3d6000fd5b50505050618235828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b15801561815b57600080fd5b505afa15801561816f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561819957600080fd5b81019080805160405193929190846401000000008211156181b957600080fd5b838201915060208201858111156181cf57600080fd5b82518660208202830111640100000000821117156181ec57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015618223578082015181840152602081019050618208565b5050505090500160405250505061ca2d565b61833060405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808061f02c60259139602501905060405160208183030381529060405280519060200120604051602001808061ec7660279139602701905060405160208183030381529060405280519060200120604051602001808061e97a602c9139602c01905060405160208183030381529060405280519060200120604051602001808061eb3b604091396040019050604051602081830303815290604052805190602001201818181861ce18565b89600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008787905011156184cf57600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561849257600080fd5b505af41580156184a6573d6000803e3d6000fd5b505050506040513d60208110156184bc57600080fd5b8101908080519060200190929190505050505b84600d60146101000a81548160ff0219169083151502179055508383601291906184fa92919061d0f3565b5081816013919061850c92919061d0f3565b506001600d60196101000a81548160ff0219169083600781111561852c57fe5b021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060006014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000018161876e919061d0c7565b50876014600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106187d857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff02191690831515021790555060016014600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c600d60199054906101000a900460ff166007811115618a5857fe5b600d60159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b84849050811015618cf1577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30878785818110618c1657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a28080600101915050618bbc565b600090505b82829050811015618dee577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd30858585818110618d5057fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a28080600101915050618cf6565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b6003600d60196101000a81548160ff02191690836007811115618e3457fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930600d60199054906101000a900460ff166007811115618e9757fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a2565b600060138281548110618ef657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060618f3e82600361b52b90919063ffffffff16565b606001519050919050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b6060618fcf82600361b52b90919063ffffffff16565b61014001519050919050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b600061903b82600361b52b90919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996190b261c6aa565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156191095780820151818401526020810190506190ee565b50505050905090810190601f1680156191365780820380516001836020036101000a031916815260200191505b508481038352605281526020018061ef8b605291396060018481038252609881526020018061e8596098913960a00194505050505060006040518083038186803b15801561918357600080fd5b505af4158015619197573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156191c157600080fd5b81019080805160405193929190846401000000008211156191e157600080fd5b838201915060208201858111156191f757600080fd5b825186600182028301116401000000008211171561921457600080fd5b8083526020830192505050908051906020019080838360005b8381101561924857808201518184015260208101905061922d565b50505050905090810190601f1680156192755780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156192e25780820151818401526020810190506192c7565b50505050905090810190601f16801561930f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561939a57600080fd5b505af41580156193ae573d6000803e3d6000fd5b505050506040513d60408110156193c457600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461943561c3b5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561949657808201518184015260208101905061947b565b50505050905090810190601f1680156194c35780820380516001836020036101000a031916815260200191505b508481038352602181526020018061ed06602191396040018481038252602681526020018061eb15602691396040019550505050505060006040518083038186803b15801561951157600080fd5b505af4158015619525573d6000803e3d6000fd5b505050506000600781111561953657fe5b600d60199054906101000a900460ff16600781111561955157fe5b148061958257506001600781111561956557fe5b600d60199054906101000a900460ff16600781111561958057fe5b145b156197505781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061965761c6e7565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a2619a49565b6002600781111561975d57fe5b600d60199054906101000a900460ff16600781111561977857fe5b1415619a48576000601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415619a475781601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b601280549050811015619a4557600060116000601284815481106199ab57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415619a1f57619a45565b600160128054905003811415619a3857619a3761c6e7565b5b808060010191505061998b565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160039054906101000a900460ff1615619a9461c952565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619af5578082015181840152602081019050619ada565b50505050905090810190601f168015619b225780820380516001836020036101000a031916815260200191505b508481038352602781526020018061ec4f602791396040018481038252603981526020018061e7f5603991396040019550505050505060006040518083038186803b158015619b7057600080fd5b505af4158015619b84573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6014600085815260200190815260200160002060010160029054906101000a900460ff1615619bcf61c6aa565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619c30578082015181840152602081019050619c15565b50505050905090810190601f168015619c5d5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061ec4f602791396040018481038252602c81526020018061e94e602c91396040019550505050505060006040518083038186803b158015619cab57600080fd5b505af4158015619cbf573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60146000858152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015619d7357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311619d29575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015619e19578082015181840152602081019050619dfe565b50505050905001935050505060206040518083038186803b158015619e3d57600080fd5b505af4158015619e51573d6000803e3d6000fd5b505050506040513d6020811015619e6757600080fd5b8101908080519060200190929190505050619e8061c915565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619ee1578082015181840152602081019050619ec6565b50505050905090810190601f168015619f0e5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061ec4f602791396040018481038252603581526020018061ebf5603591396040019550505050505060006040518083038186803b158015619f5c57600080fd5b505af4158015619f70573d6000803e3d6000fd5b5050505060008090505b601460008481526020019081526020016000206000018054905081101561a097573373ffffffffffffffffffffffffffffffffffffffff16601460008581526020019081526020016000206000018281548110619fd357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561a08a578160146000858152602001908152602001600020600001828154811061a03c57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061a325565b8080600101915050619f7a565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961a0ba61c3b5565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a11157808201518184015260208101905061a0f6565b50505050905090810190601f16801561a13e5780820380516001836020036101000a031916815260200191505b508481038352602781526020018061ec4f602791396040018481038252603581526020018061ec9d6035913960400194505050505060006040518083038186803b15801561a18b57600080fd5b505af415801561a19f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561a1c957600080fd5b810190808051604051939291908464010000000082111561a1e957600080fd5b8382019150602082018581111561a1ff57600080fd5b825186600182028301116401000000008211171561a21c57600080fd5b8083526020830192505050908051906020019080838360005b8381101561a25057808201518184015260208101905061a235565b50505050905090810190601f16801561a27d5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561a2ea57808201518184015260208101905061a2cf565b50505050905090810190601f16801561a3175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b61a33161cf90565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610400018190525061a38e61cf03565b816020019060ff16908160ff168152505061a3b381600361ac9c90919063ffffffff16565b5050505050565b60607f41475245454d454e545f5041525449455300000000000000000000000000000082141561a47257601280548060200260200160405190810160405280929190818152602001828054801561a46657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161a41c575b5050505050905061a48e565b61a48682600361b52b90919063ffffffff16565b610120015190505b919050565b60006002806003811061a4a257fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b606061a4d982600361b52b90919063ffffffff16565b6102c001519050919050565b61a4ed61cf90565b8281600001818152505061a4ff61cf0c565b816020019060ff16908160ff16815250508181608001818152505061a52e81600361ac9c90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b600061a5de82600361b52b90919063ffffffff16565b60c001519050919050565b600080601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b61a6a361cf90565b8381600001818152505061a6b561cf1b565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610140018190525061a72581600361ac9c90919063ffffffff16565b5050505050565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b600e73__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561a84a57600080fd5b505af415801561a85e573d6000803e3d6000fd5b505050506040513d602081101561a87457600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060600e73__$5e3d4bda46c81e962f48c99e99f980d175$$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561c9eb57600080fd5b505af415801561c9ff573d6000803e3d6000fd5b505050506040513d602081101561ca1557600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82518451141561ca5561c3f2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561cab657808201518184015260208101905061ca9b565b50505050905090810190601f16801561cae35780820380516001836020036101000a031916815260200191505b508481038352603281526020018061ea21603291396040018481038252606681526020018061ee8c606691396080019550505050505060006040518083038186803b15801561cb3157600080fd5b505af415801561cb45573d6000803e3d6000fd5b50505050600080905060008090505b835181101561ccea5760008090505b835181101561ccdc57600073ffffffffffffffffffffffffffffffffffffffff1684828151811061cb9057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561cbb95761cccf565b84828151811061cbc557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b15801561cc1257600080fd5b505afa15801561cc26573d6000803e3d6000fd5b505050506040513d602081101561cc3c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1684828151811061cc6f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561ccce5783818151811061cc9f57fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff16815250828060010193505061ccdc565b5b808060010191505061cb63565b50808060010191505061cb54565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000845111801561cd17575083518314155b61cd1f61c3f2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561cd8057808201518184015260208101905061cd65565b50505050905090810190601f16801561cdad5780820380516001836020036101000a031916815260200191505b508481038352603281526020018061ea21603291396040018481038252607a81526020018061eb7b607a91396080019550505050505060006040518083038186803b15801561cdfb57600080fd5b505af415801561ce0f573d6000803e3d6000fd5b50505050505050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561ce97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061edf8602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000609f905090565b600061cf1661cf87565b905090565b60006065905090565b60008260ff168260ff16141561cf3d576000905061cf78565b8260ff168260ff16101561cf73577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061cf78565b600190505b92915050565b60006012905090565b60006008905090565b60405180610420016040528060008019168152602001600060ff168152602001600015158152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b81548183558181111561d0ee5781836000526020600020918201910161d0ed919061e14e565b5b505050565b82805482825590600052602060002090810192821561d182579160200282015b8281111561d18157823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061d113565b5b50905061d18f919061e173565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061d1d457805160ff191683800117855561d202565b8280016001018555821561d202579182015b8281111561d20157825182559160200191906001019061d1e6565b5b50905061d20f919061e14e565b5090565b82805482825590600052602060002090810192821561d262579160200282015b8281111561d26157825182908051906020019061d25192919061d193565b509160200191906001019061d233565b5b50905061d26f919061e1b6565b5090565b82805482825590600052602060002090810192821561d2ec579160200282015b8281111561d2eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061d293565b5b50905061d2f9919061e173565b5090565b82805482825590600052602060002090601f0160209004810192821561d3925791602002820160005b8382111561d36357835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030261d326565b801561d3905782816101000a81549060ff021916905560010160208160000104928301926001030261d363565b505b50905061d39f919061e1e2565b5090565b82805482825590600052602060002090601f0160209004810192821561d4395791602002820160005b8382111561d40a57835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030261d3cc565b801561d4375782816101000a81549060ff021916905560010160208160000104928301926001030261d40a565b505b50905061d446919061e212565b5090565b82805482825590600052602060002090600f0160109004810192821561d4e35791602002820160005b8382111561d4b357835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030261d473565b801561d4e15782816101000a81549061ffff021916905560020160208160010104928301926001030261d4b3565b505b50905061d4f0919061e242565b5090565b8280548282559060005260206000209060070160089004810192821561d5935791602002820160005b8382111561d56157835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261d51d565b801561d5915782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d561565b505b50905061d5a0919061e273565b5090565b8280548282559060005260206000209060030160049004810192821561d64f5791602002820160005b8382111561d61957835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d5cd565b801561d64d5782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261d619565b505b50905061d65c919061e2a6565b5090565b8280548282559060005260206000209060010160029004810192821561d7235791602002820160005b8382111561d6e557835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261d689565b801561d7215782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261d6e5565b505b50905061d730919061e2dd565b5090565b82805482825590600052602060002090810192821561d770579160200282015b8281111561d76f57825182559160200191906001019061d754565b5b50905061d77d919061e14e565b5090565b82805482825590600052602060002090601f0160209004810192821561d81a5791602002820160005b8382111561d7eb57835183826101000a81548160ff021916908360000b60ff160217905550926020019260010160208160000104928301926001030261d7aa565b801561d8185782816101000a81549060ff021916905560010160208160000104928301926001030261d7eb565b505b50905061d827919061e31c565b5090565b82805482825590600052602060002090600f0160109004810192821561d8c75791602002820160005b8382111561d89757835183826101000a81548161ffff021916908360010b61ffff160217905550926020019260020160208160010104928301926001030261d854565b801561d8c55782816101000a81549061ffff021916905560020160208160010104928301926001030261d897565b505b50905061d8d4919061e34c565b5090565b8280548282559060005260206000209060070160089004810192821561d97a5791602002820160005b8382111561d94857835183826101000a81548163ffffffff021916908360030b63ffffffff160217905550926020019260040160208160030104928301926001030261d901565b801561d9785782816101000a81549063ffffffff021916905560040160208160030104928301926001030261d948565b505b50905061d987919061e37d565b5090565b8280548282559060005260206000209060030160049004810192821561da395791602002820160005b8382111561da0357835183826101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550926020019260080160208160070104928301926001030261d9b4565b801561da375782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261da03565b505b50905061da46919061e3b0565b5090565b8280548282559060005260206000209060010160029004810192821561db105791602002820160005b8382111561dad257835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030261da73565b801561db0e5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261dad2565b505b50905061db1d919061e3e7565b5090565b82805482825590600052602060002090810192821561db5d579160200282015b8281111561db5c57825182559160200191906001019061db41565b5b50905061db6a919061e426565b5090565b82805482825590600052602060002090601f0160209004810192821561dc045791602002820160005b8382111561dbd557835183826101000a81548160ff021916908360f81c0217905550926020019260010160208160000104928301926001030261db97565b801561dc025782816101000a81549060ff021916905560010160208160000104928301926001030261dbd5565b505b50905061dc11919061e44b565b5090565b82805482825590600052602060002090600f0160109004810192821561dcad5791602002820160005b8382111561dc7d57835183826101000a81548161ffff021916908360f01c0217905550926020019260020160208160010104928301926001030261dc3e565b801561dcab5782816101000a81549061ffff021916905560020160208160010104928301926001030261dc7d565b505b50905061dcba919061e47b565b5090565b82805482825590600052602060002090600901600a9004810192821561dd585791602002820160005b8382111561dd2757835183826101000a81548162ffffff021916908360e81c0217905550926020019260030160208160020104928301926001030261dce7565b801561dd565782816101000a81549062ffffff021916905560030160208160020104928301926001030261dd27565b505b50905061dd65919061e4ac565b5090565b8280548282559060005260206000209060070160089004810192821561de055791602002820160005b8382111561ddd357835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030261dd92565b801561de035782816101000a81549063ffffffff021916905560040160208160030104928301926001030261ddd3565b505b50905061de12919061e4de565b5090565b8280548282559060005260206000209060030160049004810192821561deba5791602002820160005b8382111561de8457835183826101000a81548167ffffffffffffffff021916908360c01c0217905550926020019260080160208160070104928301926001030261de3f565b801561deb85782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030261de84565b505b50905061dec7919061e511565b5090565b8280548282559060005260206000209060010160029004810192821561df7f5791602002820160005b8382111561df4157835183826101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055509260200192601001602081600f0104928301926001030261def4565b801561df7d5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030261df41565b505b50905061df8c919061e548565b5090565b82805482825590600052602060002090810192821561dff6579160200282015b8281111561dff55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055509160200191906001019061dfb0565b5b50905061e003919061e587565b5090565b82805482825590600052602060002090810192821561e071579160200282015b8281111561e0705782518260006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908360401c02179055509160200191906001019061e027565b5b50905061e07e919061e5ca565b5090565b82805482825590600052602060002090810192821561e0f0579160200282015b8281111561e0ef5782518260006101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360201c02179055509160200191906001019061e0a2565b5b50905061e0fd919061e611565b5090565b82805482825590600052602060002090810192821561e13d579160200282015b8281111561e13c57825182559160200191906001019061e121565b5b50905061e14a919061e65c565b5090565b61e17091905b8082111561e16c57600081600090555060010161e154565b5090565b90565b61e1b391905b8082111561e1af57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e179565b5090565b90565b61e1df91905b8082111561e1db576000818161e1d2919061e681565b5060010161e1bc565b5090565b90565b61e20f91905b8082111561e20b57600081816101000a81549060ff02191690555060010161e1e8565b5090565b90565b61e23f91905b8082111561e23b57600081816101000a81549060ff02191690555060010161e218565b5090565b90565b61e27091905b8082111561e26c57600081816101000a81549061ffff02191690555060010161e248565b5090565b90565b61e2a391905b8082111561e29f57600081816101000a81549063ffffffff02191690555060010161e279565b5090565b90565b61e2da91905b8082111561e2d657600081816101000a81549067ffffffffffffffff02191690555060010161e2ac565b5090565b90565b61e31991905b8082111561e31557600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e2e3565b5090565b90565b61e34991905b8082111561e34557600081816101000a81549060ff02191690555060010161e322565b5090565b90565b61e37a91905b8082111561e37657600081816101000a81549061ffff02191690555060010161e352565b5090565b90565b61e3ad91905b8082111561e3a957600081816101000a81549063ffffffff02191690555060010161e383565b5090565b90565b61e3e491905b8082111561e3e057600081816101000a81549067ffffffffffffffff02191690555060010161e3b6565b5090565b90565b61e42391905b8082111561e41f57600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e3ed565b5090565b90565b61e44891905b8082111561e44457600081600090555060010161e42c565b5090565b90565b61e47891905b8082111561e47457600081816101000a81549060ff02191690555060010161e451565b5090565b90565b61e4a991905b8082111561e4a557600081816101000a81549061ffff02191690555060010161e481565b5090565b90565b61e4db91905b8082111561e4d757600081816101000a81549062ffffff02191690555060010161e4b2565b5090565b90565b61e50e91905b8082111561e50a57600081816101000a81549063ffffffff02191690555060010161e4e4565b5090565b90565b61e54591905b8082111561e54157600081816101000a81549067ffffffffffffffff02191690555060010161e517565b5090565b90565b61e58491905b8082111561e58057600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010161e54e565b5090565b90565b61e5c791905b8082111561e5c357600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161e58d565b5090565b90565b61e60e91905b8082111561e60a57600081816101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e5d0565b5090565b90565b61e65991905b8082111561e65557600081816101000a8154907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010161e617565b5090565b90565b61e67e91905b8082111561e67a57600081600090555060010161e662565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061e6a7575061e6c6565b601f01602090049060005260206000209081019061e6c5919061e14e565b5b5056fe41677265656d656e74206d75737420626520696e204452414654206f7220464f524d554c41544544207374617465416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6553696e676c652d68656c64207065726d697373696f6e20746861742068617320616c7265616479206265656e206772616e7465642063616e6e6f74206265206f7665727772697474656e20627920746865207065726d697373696f6e2061646d696e2e20557365207472616e736665725065726d697373696f6e20696e73746561642e5468652070726f7669646564206f776e65722061646472657373206d757374206e6f7420626520656d70747941627374726163745065726d697373696f6e65642e6772616e745065726d697373696f6e54686520737065636966696564207065726d697373696f6e20646f6573206e6f742065786973742e204372656174652069742066697273742e41627374726163745065726d697373696f6e65642e7072655f72657175697265735065726d697373696f6e546869732076657273696f6e206f6620696e697469616c697a65206973206e6f206c6f6e67657220737570706f727465642e20506c65617365207573652044656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d2954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564546865206d73672e73656e64657220646f6573206e6f74206861766520746865207265717569726564207065726d697373696f6e54686520737065636966696564207065726d697373696f6e206973206e6f74207472616e7366657261626c657265736f6c76654164647265737353636f706528616464726573732c627974657333322c61646472657373294f6e6c79207468652061677265656d656e74206f776e6572206d6179207265717565737420726564616374696f6e5468652061677265656d656e742063616e6e6f742062652072656461637465642e2054686520726567697374657265642070617274696573206d7573742063616e63656c20697420666972737444656661756c7441637469766541677265656d656e742e76616c6964617465476f7665726e696e6741677265656d656e7473546865206f626a6563742061646d696e2068617320616c7265616479206265656e2073657420616e642063616e6e6f74206265206f7665727772697474656e46697865642073636f706520616e6420436f6e646974696f6e616c44617461206d757374206e6f7420626f746820626520656d70747954686520737065636966696564207065726d697373696f6e206973206e6f74207265766f6361626c655468652063616c6c6572206973206e6f7420617574686f72697a656420746f207369676e5468652063616c6c6572206973206e6f7420617574686f72697a656420746f2063616e63656c7365744164647265737353636f706528616464726573732c627974657333322c627974657333322c627974657333322c627974657333322c61646472657373295468652070726f766964656420676f7665726e696e672061677265656d656e747320646f206e6f74206d6174636820616c6c206f662074686520676f7665726e696e6720617263686574797065732072657175697265642062792074686520617263686574797065206f6620746869732061677265656d656e74546865206e657720686f6c64657220616c726561647920686f6c64732074686520737065636966696564207065726d697373696f6e41627374726163745065726d697373696f6e65642e7265766f6b655065726d697373696f6e41627374726163745065726d697373696f6e65642e7472616e736665725065726d697373696f6e6765744164647265737353636f706544657461696c7328616464726573732c6279746573333229546865206d73672e73656e64657220646f6573206e6f7420686f6c642074686520737065636966696564207065726d697373696f6e44656661756c7441637469766541677265656d656e742e73657450726976617465506172616d65746572735265666572656e636544656661756c7441637469766541677265656d656e742e646f43616e63656c282941646d696e207065726d697373696f6e20686f6c646572732063616e6e6f74206265206c65667420656d70747941627374726163745065726d697373696f6e65642e6372656174655065726d697373696f6e5468652061677265656d656e7420697320616c726561647920696e20737461746520524544414354454441627374726163745065726d697373696f6e65642e696e697469616c697a654f626a65637441646d696e6973747261746f724172636865747970652061646472657373206d757374206e6f7420626520656d707479466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365546865204461746153746f7261676520706172616d6574657220697320726571756972656420666f72206120436f6e646974696f6e616c446174612073636f706520776974686f75742061206669786564206461746153746f726167652061646472657373546865206e756d626572206f662070726f766964656420676f7665726e696e672061677265656d656e747320646f6573206e6f74206d6174636820746865207265717569726564206e756d626572206f6620676f7665726e696e672061726368657479706573546865206164647265737320746f20776869636820746f2061646420612073636f7065206d757374206e6f7420626520656d70747954686520676976656e206163636f756e7420646f6573206e6f7420686f6c642074686973207065726d697373696f6e2e41207065726d697373696f6e207769746820746865206964656e746966696572206e616d6520616c72656164792065786973747344656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d295468652070726f76696465642063726561746f722061646472657373206d757374206e6f7420626520656d70747944656661756c7441637469766541677265656d656e742e696e697469616c697a656765744164647265737353636f706544657461696c73466f724b6579286279746573333229a265627a7a72315820971cfa6b5f202915e45f4020ea910ef33f4a1acd6ad512695633c2519a6d1a4464736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}