//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "60806040527f63726561746564000000000000000000000000000000000000000000000000006007557f75706461746564000000000000000000000000000000000000000000000000006008557f64656c657465640000000000000000000000000000000000000000000000000060095560016006600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550826002600060038110620000d757fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200010757fe5b602091828204019190066101000a81548160ff021916908360ff16021790555080600280600381106200013657fe5b602091828204019190066101000a81548160ff021916908360ff160217905550620001ad60405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001b660201b60201c565b505050620002a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062012353602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6201209f80620002b46000396000f3fe60806040523480156200001157600080fd5b5060043610620007185760003560e01c806380c86ba711620003a5578063d42ea97611620001ef578063f0a405271162000129578063f8d660d311620000bd578063fb1a14931162000093578063fb1a14931462002b78578063fc344a731462002bc4578063fcb4862a1462002be4578063fe3c84b21462002c6c5762000718565b8063f8d660d31462002a4d578063f9f3f2831462002acc578063faff660e1462002b545762000718565b8063f4b9d96e11620000ff578063f4b9d96e14620028f6578063f5081e9f1462002984578063f6ec229e1462002a0d578063f76829c91462002a2d5762000718565b8063f0a4052714620027c2578063f3420d1a146200284a578063f364e37914620028855762000718565b8063e703a9e411620001a1578063edec4c4f1162000177578063edec4c4f146200266b578063eeb8b80914620026f4578063f085f6dd146200277c578063f0897db714620027a25762000718565b8063e703a9e41462002493578063ea8a1af0146200260e578063ec9cb2ce146200261a5762000718565b8063d42ea9761462002308578063d734c53a1462002328578063d779c8a114620023b0578063e10533c614620023d0578063e2be8fe1146200242e578063e6f936f914620024735762000718565b8063a6a8f17b11620002df578063be60fc0c1162000273578063c4521ffb1162000249578063c4521ffb146200215e578063c6e8dfd014620021cf578063d2e8a0fa1462002200578063d39c4faa14620022ad5762000718565b8063be60fc0c1462001fab578063c0647c2e1462002146578063c3f0a89514620021525762000718565b8063b20ba33711620002b5578063b20ba3371462001ea9578063b7d647771462001edc578063bc5864561462001efc578063bd9e06601462001f4d5762000718565b8063a6a8f17b1462001c82578063aa0ac16f1462001cd3578063b00b64281462001d185762000718565b80638c2a4dae116200035757806394e38624116200032d57806394e386241462001a7657806394feb1521462001aff5780639561aa321462001b545780639f75dfd91462001bfa5762000718565b80638c2a4dae1462001a1b5780639090fd851462001a2757806391bec7121462001a475762000718565b806380c86ba7146200187057806384a6cd4d1462001890578063859360f51462001929578063893d20e814620019705780638aa137f514620019bc5780638aaeff8c14620019f75762000718565b806351e213fc11620005675780636d73c8bc11620004a157806372ea1826116200043557806378bc0b0d116200040b57806378bc0b0d146200170457806379ce3cb214620017805780637f80938114620017f15780637f91fb7d14620018115762000718565b806372ea18261462001688578063756b2e6c14620016945780637589adb714620016de5762000718565b80636f78733b11620004775780636f78733b14620015aa57806370a9c99714620015ca5780637207b07f146200162d578063720e72e9146200164d5762000718565b80636d73c8bc14620014ca5780636dbbc67b14620015595780636ea1944b14620015795762000718565b80635abf32021162000519578063641375ad11620004ef578063641375ad14620012f657806368e78011146200137f5780636a78a81514620013d05780636d6a7e8f14620014415762000718565b80635abf320214620011fe5780635c030138146200122a57806363a84c0414620012855762000718565b806351e213fc14620010a65780635666f9ac146200112d57806357e0ebca146200114d578063586ca7ab146200117357806358892b8614620011a457806359d585ee14620011d85762000718565b806328545c0d1162000657578063374b7d2211620005eb5780634773f6fc11620005c15780634773f6fc1462000f5757806347dd48e01462000fd65780634828c43b14620010075780634f7e37bb14620010275762000718565b8063374b7d221462000d125780633c0e52451462000d5e57806340514a1a1462000de35762000718565b806330c676c9116200062d57806330c676c91462000bb1578063311851821462000bfa57806331502f131462000c8257806335ce1bd11462000ccd5762000718565b806328545c0d1462000aeb5780632a7cbfde1462000b545780632ca151221462000ba55762000718565b806311ce584411620006cf578063141b422a11620006a5578063141b422a14620009655780631c5422d214620009e05780631cb355401462000a695780632512e6f11462000aa65762000718565b806311ce584414620008ee578063130c5985146200090e5780631314cf6614620009455762000718565b806301ffc9a7146200071d57806304fce01514620007855780630775cb0014620007a95780630cb61b3414620007fa5780630d9bfa8014620008825780630ee2cb1014620008a2575b600080fd5b6200076b600480360360208110156200073557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062002d2c565b604051808215151515815260200191505060405180910390f35b6200078f62002d93565b604051808215151515815260200191505060405180910390f35b620007f860048036036040811015620007c157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002daa565b005b6200080462002e88565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200084657808201518184015260208101905062000829565b50505050905090810190601f168015620008745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200088c62003031565b6040518082815260200191505060405180910390f35b620008ac6200303e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620008f862003068565b6040518082815260200191505060405180910390f35b62000943600480360360208110156200092657600080fd5b81019080803563ffffffff1690602001909291905050506200308c565b005b6200094f62003148565b6040518082815260200191505060405180910390f35b6200099e600480360360408110156200097d57600080fd5b8101908080359060200190929190803590602001909291905050506200316c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000a6760048036036040811015620009f857600080fd5b81019080803590602001909291908035906020019064010000000081111562000a2057600080fd5b82018360208201111562000a3357600080fd5b8035906020019184600183028401116401000000008311171562000a5657600080fd5b90919293919293905050506200321d565b005b62000aa46004803603604081101562000a8157600080fd5b810190808035906020019092919080351515906020019092919050505062003376565b005b62000ad56004803603602081101562000abe57600080fd5b810190808035906020019092919050505062003469565b6040518082815260200191505060405180910390f35b62000b3a6004803603604081101562000b0357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200348c565b604051808215151515815260200191505060405180910390f35b62000ba36004803603604081101562000b6c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062003735565b005b62000baf62003813565b005b62000be06004803603602081101562000bc957600080fd5b810190808035906020019092919050505062003faa565b604051808215151515815260200191505060405180910390f35b62000c296004803603602081101562000c1257600080fd5b810190808035906020019092919050505062003fcd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000c6e57808201518184015260208101905062000c51565b505050509050019250505060405180910390f35b62000cb16004803603602081101562000c9a57600080fd5b810190808035906020019092919050505062003ff1565b604051808260ff1660ff16815260200191505060405180910390f35b62000cfc6004803603602081101562000ce557600080fd5b810190808035906020019092919050505062004092565b6040518082815260200191505060405180910390f35b62000d416004803603602081101562000d2a57600080fd5b8101908080359060200190929190505050620040b5565b604051808381526020018281526020019250505060405180910390f35b62000dcd6004803603606081101562000d7657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004166565b6040518082815260200191505060405180910390f35b62000ded62004691565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101562000e4357808201518184015260208101905062000e26565b50505050905090810190601f16801562000e715780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101562000eac57808201518184015260208101905062000e8f565b50505050905090810190601f16801562000eda5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101562000f1557808201518184015260208101905062000ef8565b50505050905090810190601f16801562000f435780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b62000fd46004803603602081101562000f6f57600080fd5b810190808035906020019064010000000081111562000f8d57600080fd5b82018360208201111562000fa057600080fd5b8035906020019184600183028401116401000000008311171562000fc357600080fd5b909192939192939050505062004894565b005b620010056004803603602081101562000fee57600080fd5b810190808035906020019092919050505062004a63565b005b6200101162004aff565b6040518082815260200191505060405180910390f35b620010a4600480360360208110156200103f57600080fd5b81019080803590602001906401000000008111156200105d57600080fd5b8201836020820111156200107057600080fd5b803590602001918460018302840111640100000000831117156200109357600080fd5b909192939192939050505062004b23565b005b620010eb60048036036020811015620010be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004cf2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200113762004d5e565b6040518082815260200191505060405180910390f35b6200115762004d6e565b604051808260ff1660ff16815260200191505060405180910390f35b620011a2600480360360208110156200118b57600080fd5b810190808035906020019092919050505062004d9a565b005b620011d660048036036020811015620011bc57600080fd5b81019080803560ff16906020019092919050505062004da9565b005b620011e262004ff9565b604051808260ff1660ff16815260200191505060405180910390f35b620012086200501c565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6200126f600480360360208110156200124257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005036565b6040518082815260200191505060405180910390f35b620012b4600480360360208110156200129d57600080fd5b810190808035906020019092919050505062005139565b60405180861515151581526020018515151515815260200184151515158152602001831515151581526020018281526020019550505050505060405180910390f35b6200137d600480360360408110156200130e57600080fd5b8101908080359060200190929190803590602001906401000000008111156200133657600080fd5b8201836020820111156200134957600080fd5b803590602001918460208302840111640100000000831117156200136c57600080fd5b909192939192939050505062005215565b005b620013ce600480360360408110156200139757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620052ac565b005b620013ff60048036036020811015620013e857600080fd5b8101908080359060200190929190505050620053ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620014c8600480360360408110156200145957600080fd5b8101908080359060200190929190803590602001906401000000008111156200148157600080fd5b8201836020820111156200149457600080fd5b80359060200191846020830284011164010000000083111715620014b757600080fd5b909192939192939050505062005446565b005b62001557600480360360c0811015620014e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620054dd565b005b6200156362005b02565b6040518082815260200191505060405180910390f35b620015a8600480360360208110156200159157600080fd5b810190808035906020019092919050505062005b26565b005b620015b462005b35565b6040518082815260200191505060405180910390f35b620015d462005b3b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562001619578082015181840152602081019050620015fc565b505050509050019250505060405180910390f35b6200163762005b95565b6040518082815260200191505060405180910390f35b62001686600480360360408110156200166557600080fd5b81019080803590602001909291908035906020019092919050505062005b9b565b005b6200169262005c84565b005b6200169e620061af565b6040518082600360200280838360005b83811015620016cb578082015181840152602081019050620016ae565b5050505090500191505060405180910390f35b620016e862006224565b604051808260ff1660ff16815260200191505060405180910390f35b6200176a600480360360608110156200171c57600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062006250565b6040518082815260200191505060405180910390f35b620017af600480360360208110156200179857600080fd5b8101908080359060200190929190505050620062ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620017fb62006321565b6040518082815260200191505060405180910390f35b62001856600480360360208110156200182957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200632e565b604051808215151515815260200191505060405180910390f35b6200187a62006437565b6040518082815260200191505060405180910390f35b620018d560048036036020811015620018a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200645b565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390f35b6200196e600480360360208110156200194157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006563565b005b6200197a620069c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620019f560048036036040811015620019d457600080fd5b81019080803590602001909291908035906020019092919050505062006acb565b005b62001a0162006bb4565b604051808215151515815260200191505060405180910390f35b62001a2562006bcb565b005b62001a3162006ca5565b6040518082815260200191505060405180910390f35b62001a5162006cef565b6040518082600781111562001a6257fe5b60ff16815260200191505060405180910390f35b62001afd6004803603604081101562001a8e57600080fd5b81019080803590602001909291908035906020019064010000000081111562001ab657600080fd5b82018360208201111562001ac957600080fd5b8035906020019184602083028401116401000000008311171562001aec57600080fd5b9091929391929390505050620075e8565b005b62001b526004803603608081101562001b1757600080fd5b81019080803590602001909291908035151590602001909291908035151590602001909291908035151590602001909291905050506200767f565b005b62001ba36004803603604081101562001b6c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620079f5565b604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b62001c0462007a87565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001c4657808201518184015260208101905062001c29565b50505050905090810190601f16801562001c745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62001cd16004803603604081101562001c9a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062007c30565b005b62001d026004803603602081101562001ceb57600080fd5b810190808035906020019092919050505062008541565b6040518082815260200191505060405180910390f35b62001ea7600480360360a081101562001d3057600080fd5b810190808035906020019064010000000081111562001d4e57600080fd5b82018360208201111562001d6157600080fd5b8035906020019184602083028401116401000000008311171562001d8457600080fd5b9091929391929390803590602001909291908035906020019064010000000081111562001db057600080fd5b82018360208201111562001dc357600080fd5b8035906020019184600183028401116401000000008311171562001de657600080fd5b90919293919293908035906020019064010000000081111562001e0857600080fd5b82018360208201111562001e1b57600080fd5b8035906020019184600183028401116401000000008311171562001e3e57600080fd5b90919293919293908035906020019064010000000081111562001e6057600080fd5b82018360208201111562001e7357600080fd5b8035906020019184600183028401116401000000008311171562001e9657600080fd5b90919293919293905050506200858d565b005b62001eda6004803603602081101562001ec157600080fd5b8101908080351515906020019092919050505062008e1c565b005b62001ee662009650565b6040518082815260200191505060405180910390f35b62001f4b6004803603604081101562001f1457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062009674565b005b62001f5762009ec6565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62002144600480360360e081101562001fc357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200204157600080fd5b8201836020820111156200205457600080fd5b803590602001918460018302840111640100000000831117156200207757600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620020a557600080fd5b820183602082011115620020b857600080fd5b80359060200191846020830284011164010000000083111715620020db57600080fd5b909192939192939080359060200190640100000000811115620020fd57600080fd5b8201836020820111156200211057600080fd5b803590602001918460208302840111640100000000831117156200213357600080fd5b909192939192939050505062009fc0565b005b620021506200b404565b005b6200215c6200b74f565b005b6200218d600480360360208110156200217657600080fd5b81019080803590602001909291905050506200b82b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620021fe60048036036020811015620021e757600080fd5b81019080803590602001909291905050506200b86d565b005b6200222f600480360360208110156200221857600080fd5b81019080803590602001909291905050506200b877565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200227157808201518184015260208101905062002254565b50505050905090810190601f1680156200229f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620022f260048036036020811015620022c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200b89a565b6040518082815260200191505060405180910390f35b620023126200b8e6565b6040518082815260200191505060405180910390f35b62002357600480360360208110156200234057600080fd5b81019080803590602001909291905050506200b90a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200239c5780820151818401526020810190506200237f565b505050509050019250505060405180910390f35b620023ba6200b92e565b6040518082815260200191505060405180910390f35b620023da6200b93b565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6200245d600480360360208110156200244657600080fd5b81019080803590602001909291905050506200b985565b6040518082815260200191505060405180910390f35b6200247d6200b9a8565b6040518082815260200191505060405180910390f35b6200260c600480360360c0811015620024ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200250957600080fd5b8201836020820111156200251c57600080fd5b803590602001918460018302840111640100000000831117156200253f57600080fd5b9091929391929390803515159060200190929190803590602001906401000000008111156200256d57600080fd5b8201836020820111156200258057600080fd5b80359060200191846020830284011164010000000083111715620025a357600080fd5b909192939192939080359060200190640100000000811115620025c557600080fd5b820183602082011115620025d857600080fd5b80359060200191846020830284011164010000000083111715620025fb57600080fd5b90919293919293905050506200b9f2565b005b620026186200bc92565b005b62002669600480360360408110156200263257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200c3e3565b005b620026f2600480360360408110156200268357600080fd5b810190808035906020019092919080359060200190640100000000811115620026ab57600080fd5b820183602082011115620026be57600080fd5b80359060200191846020830284011164010000000083111715620026e157600080fd5b90919293919293905050506200ccfa565b005b62002723600480360360208110156200270c57600080fd5b81019080803590602001909291905050506200cd91565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620027685780820151818401526020810190506200274b565b505050509050019250505060405180910390f35b620027866200ce70565b604051808260ff1660ff16815260200191505060405180910390f35b620027ac6200ce9b565b6040518082815260200191505060405180910390f35b620027f160048036036020811015620027da57600080fd5b81019080803590602001909291905050506200cea1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200283657808201518184015260208101905062002819565b505050509050019250505060405180910390f35b62002883600480360360408110156200286257600080fd5b8101908080359060200190929190803590602001909291905050506200cec5565b005b620028b4600480360360208110156200289d57600080fd5b81019080803590602001909291905050506200cfae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200293b600480360360208110156200290e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200cfd1565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b62002a0b600480360360408110156200299c57600080fd5b810190808035906020019092919080359060200190640100000000811115620029c457600080fd5b820183602082011115620029d757600080fd5b80359060200191846020830284011164010000000083111715620029fa57600080fd5b90919293919293905050506200d083565b005b62002a176200d11a565b6040518082815260200191505060405180910390f35b62002a376200d13e565b6040518082815260200191505060405180910390f35b62002aca6004803603602081101562002a6557600080fd5b810190808035906020019064010000000081111562002a8357600080fd5b82018360208201111562002a9657600080fd5b8035906020019184600183028401116401000000008311171562002ab957600080fd5b90919293919293905050506200d188565b005b62002ad66200d357565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002b1857808201518184015260208101905062002afb565b50505050905090810190601f16801562002b465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62002b5e6200d500565b604051808215151515815260200191505060405180910390f35b62002b826200d517565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002bce6200d541565b6040518082815260200191505060405180910390f35b62002c136004803603602081101562002bfc57600080fd5b81019080803590602001909291905050506200d565565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562002c5857808201518184015260208101905062002c3b565b505050509050019250505060405180910390f35b62002c9b6004803603602081101562002c8457600080fd5b81019080803590602001909291905050506200d589565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000601260019054906101000a900460ff16905090565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b15801562002e4657600080fd5b505af415801562002e5b573d6000803e3d6000fd5b505050506040513d602081101562002e7257600080fd5b8101908080519060200190929190505050505050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801562002f2b57600080fd5b505af415801562002f40573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562002f6b57600080fd5b810190808051604051939291908464010000000082111562002f8c57600080fd5b8382019150602082018581111562002fa357600080fd5b825186600182028301116401000000008211171562002fc157600080fd5b8083526020830192505050908051906020019080838360005b8381101562002ff757808201518184015260208101905062002fda565b50505050905090810190601f168015620030255780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601c80549050905090565b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80601660156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b7f41677265656d656e74204566666563746976652044617465000000000000000081565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff168015620031b7575081601d600085815260200190815260200160002060000180549050115b156200321257601d60008481526020019081526020016000206000018281548110620031df57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062003217565b600090505b92915050565b620032276200fcdd565b838160000181815250506200323b6200d6b4565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160600181905250620032af8160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b620033806200fcdd565b82816000018181525050620033946200dfad565b816020019060ff16908160ff168152505081816040019015159081151581525050620033cb8160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b6000620034818260036200dfb690919063ffffffff16565b60e001519050919050565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff16156200372f57601d600084815260200190815260200160002060010160009054906101000a900460ff1662003589576000601d6000858152602001908152602001600020600001805490501180156200358357508173ffffffffffffffffffffffffffffffffffffffff16601d60008581526020019081526020016000206000016000815481106200354057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6200372c565b601d60008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200362157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620035d6575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015620036c9578082015181840152602081019050620036ac565b50505050905001935050505060206040518083038186803b158015620036ee57600080fd5b505af415801562003703573d6000803e3d6000fd5b505050506040513d60208110156200371a57600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b158015620037d157600080fd5b505af4158015620037e6573d6000803e3d6000fd5b505050506040513d6020811015620037fd57600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200389157600080fd5b505af4158015620038a6573d6000803e3d6000fd5b505050506040513d6040811015620038bd57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620039346200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620039975780820151818401526020810190506200397a565b50505050905090810190601f168015620039c55780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018062011a44602491396040019550505050505060006040518083038186803b15801562003a3257600080fd5b505af415801562003a47573d6000803e3d6000fd5b505050506000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141562003fa65781601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801562003ccf57600080fd5b505af415801562003ce4573d6000803e3d6000fd5b505050506040513d602081101562003cfb57600080fd5b81019080805190602001909291905050501562003fa5576000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050141562003e56576002601660196101000a81548160ff0219169083600781111562003d9b57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff16600781111562003dff57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25b60003073ffffffffffffffffffffffffffffffffffffffff1663e2be8fe17f41677265656d656e7420456666656374697665204461746500000000000000006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562003eca57600080fd5b505afa15801562003edf573d6000803e3d6000fd5b505050506040513d602081101562003ef657600080fd5b8101908080519060200190929190505050141562003fa4573073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045666665637469766520446174650000000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801562003f8a57600080fd5b505af115801562003f9f573d6000803e3d6000fd5b505050505b5b5b5050565b600062003fc28260036200dfb690919063ffffffff16565b604001519050919050565b606062003fe58260036200dfb690919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200404e57600080fd5b505af415801562004063573d6000803e3d6000fd5b505050506040513d60208110156200407a57600080fd5b81019080805190602001909291905050509050919050565b6000620040aa8260036200dfb690919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156200411257600080fd5b505af415801562004127573d6000803e3d6000fd5b505050506040513d60408110156200413e57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006005600083815260200190815260200160002060010160010154146200420e5760056000828152602001908152602001600020600101600101549150506200468a565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff16156200466557600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200441c5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614620043046200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620043675780820151818401526020810190506200434a565b50505050905090810190601f168015620043955780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018062011e09606591396080019550505050505060006040518083038186803b1580156200440257600080fd5b505af415801562004417573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015620044bc57600080fd5b505af4158015620044d1573d6000803e3d6000fd5b505050506040513d6040811015620044e857600080fd5b8101908080519060200190929190805190602001909291905050509150915060008273ffffffffffffffffffffffffffffffffffffffff16632512e6f1836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200455b57600080fd5b505afa15801562004570573d6000803e3d6000fd5b505050506040513d60208110156200458757600080fd5b81019080805190602001909291905050501415620045cb577f454d5054595f53434f504500000000000000000000000000000000000000000093505050506200468a565b8173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200461d57600080fd5b505afa15801562004632573d6000803e3d6000fd5b505050506040513d60208110156200464957600080fd5b810190808051906020019092919050505093505050506200468a565b7f454d5054595f53434f50450000000000000000000000000000000000000000009150505b9392505050565b60008060608060606011549450620046a86200eef6565b9350600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620047445780601f10620047185761010080835404028352916020019162004744565b820191906000526020600020905b8154815290600101906020018083116200472657829003601f168201915b50505050509250600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620047e55780601f10620047b957610100808354040283529160200191620047e5565b820191906000526020600020905b815481529060010190602001808311620047c757829003601f168201915b5050505050915060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620048865780601f106200485a5761010080835404028352916020019162004886565b820191906000526020600020905b8154815290600101906020018083116200486857829003601f168201915b505050505090509091929394565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200496957600080fd5b505af41580156200497e573d6000803e3d6000fd5b505050506040513d60208110156200499557600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801562004abe57600080fd5b505af415801562004ad3573d6000803e3d6000fd5b505050506040513d602081101562004aea57600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801562004bf857600080fd5b505af415801562004c0d573d6000803e3d6000fd5b505050506040513d602081101562004c2457600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b6000600260006003811062004d7f57fe5b602091828204019190069054906101000a900460ff16905090565b62004da6813362002daa565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62004e1683336200348c565b1562004e216200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004e8457808201518184015260208101905062004e67565b50505050905090810190601f16801562004eb25780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011712602b913960400184810382526034815260200180620117fe603491396040019550505050505060006040518083038186803b15801562004f0357600080fd5b505af415801562004f18573d6000803e3d6000fd5b5050505081601660196101000a81548160ff0219169083600781111562004f3b57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff16600781111562004f9f57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25050565b6000601660199054906101000a900460ff1660078111156200501757fe5b905090565b6000601660159054906101000a900463ffffffff16905090565b60006200513260026003806020026040519081016040528092919082600380156200509d576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620050655790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b158015620050e957600080fd5b505afa158015620050fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156200512457600080fd5b81019080919050506200efac565b9050919050565b6000806000806000601d600087815260200190815260200160002060010160039054906101000a900460ff1694508415620051fd57601d600087815260200190815260200160002060010160009054906101000a900460ff169350601d600087815260200190815260200160002060010160019054906101000a900460ff169250601d600087815260200190815260200160002060010160029054906101000a900460ff169150601d60008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b6200521f6200fcdd565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161012001819052506200527e6200f06f565b816020019060ff16908160ff1681525050620052a58160036200d6bd90919063ffffffff16565b5050505050565b620052b66200fcdd565b82816000018181525050620052ca6200f078565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050620053298160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b60006013805490508210156200544057601382815481106200540d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062005441565b5b919050565b620054506200fcdd565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c00181905250620054af6200f081565b816020019060ff16908160ff1681525050620054d68160036200d6bd90919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614620055316200f08a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200559457808201518184015260208101905062005577565b50505050905090810190601f168015620055c25780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018062011ed4603591396040019550505050505060006040518083038186803b1580156200562f57600080fd5b505af415801562005644573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600086148015620056735750600085145b6200567d6200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620056e0578082015181840152602081019050620056c3565b50505050905090810190601f1680156200570e5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f7065000081525060200184810382526036815260200180620119e5603691396040019550505050505060006040518083038186803b1580156200577b57600080fd5b505af415801562005790573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff166200584c5760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514620058ec57846005600083815260200190815260200160002060010160010181905550620059be565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b62005b32813362003735565b50565b60095481565b6060600680548060200260200160405190810160405280929190818152602001828054801562005b8b57602002820191906000526020600020905b81548152602001906001019080831162005b76575b5050505050905090565b60085481565b62005ba56200fcdd565b8281600001818152505062005bb96200f0c7565b816020019060ff16908160ff1681525050818160a001818152505062005bea8160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff1662005cb86200f0d8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005d1b57808201518184015260208101905062005cfe565b50505050905090810190601f16801562005d495780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f416273747261637452656e657761626c652e7265736574566f746573282900008152506020018481038252602f81526020018062011b89602f91396040019550505050505060006040518083038186803b15801562005db657600080fd5b505af415801562005dcb573d6000803e3d6000fd5b5050505060008090505b601380549050811015620061a25760006013828154811062005df357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f76c512528b3348a170fce985b7603a2ba143bdf1e4645153b4d2952e99573e093083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a250808060010191505062005dd5565b50620061ad6200f115565b565b620061b96200fdf2565b60026003806020026040519081016040528092919082600380156200621a576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620061e25790505b5050505050905090565b600060026001600381106200623557fe5b602091828204019190069054906101000a900460ff16905090565b6000620062c36002600380602002604051908101604052809291908260038015620062b7576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200627f5790505b5050505050836200efac565b9050919050565b6000601b805490508210156200631b57601b8281548110620062e857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506200631c565b5b919050565b6000601b80549050905090565b600080600090505b601b805490508110156200642c578273ffffffffffffffffffffffffffffffffffffffff1660196000601b84815481106200636d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200641e57600191505062006432565b808060010191505062006336565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b6000806000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169150601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490509193909250565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff16620065f16200f295565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200665457808201518184015260208101905062006637565b50505050905090810190601f168015620066825780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011d55603291396040018481038252603f81526020018062011982603f91396040019550505050505060006040518083038186803b158015620066d357600080fd5b505af4158015620066e8573d6000803e3d6000fd5b50505050601d600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462006784578162006786565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b600080601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001805490501162006a3157600062006ac6565b601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000160008154811062006a9a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b62006ad56200fcdd565b8281600001818152505062006ae96200f2d2565b816020019060ff16908160ff1681525050818160e001818152505062006b1a8160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b6000601260009054906101000a900460ff16905090565b601260009054906101000a900460ff1662006ca3576001601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f38afd8082def1261a99c6531cd2d0f21a60d79baec07015b980d61457b75243430601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a25b565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60078081111562006d1857fe5b601660199054906101000a900460ff16600781111562006d3457fe5b1462006d3f6200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562006da257808201518184015260208101905062006d85565b50505050905090810190601f16801562006dd05780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018062011d2b602a91396040019550505050505060006040518083038186803b15801562006e3d57600080fd5b505af415801562006e52573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801562006e9f57600080fd5b505afa15801562006eb4573d6000803e3d6000fd5b505050506040513d602081101562006ecb57600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490508015801562007024575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b878362006f406200f2db565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801562006fe657600080fd5b505af415801562006ffb573d6000803e3d6000fd5b505050506040513d60208110156200701257600080fd5b81019080805190602001909291905050505b1562007110578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001807f454d5054595f53434f504500000000000000000000000000000000000000000081525060200191505060206040518083038186803b158015620070d057600080fd5b505afa158015620070e5573d6000803e3d6000fd5b505050506040513d6020811015620070fc57600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215620071366200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620071995780820151818401526020810190506200717c565b50505050905090810190601f168015620071c75780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e815260200180620118d5602e91396040019550505050505060006040518083038186803b1580156200723457600080fd5b505af415801562007249573d6000803e3d6000fd5b505050506000600560078111156200725d57fe5b601660199054906101000a900460ff1660078111156200727957fe5b14158015620072b05750600360078111156200729157fe5b601660199054906101000a900460ff166007811115620072ad57fe5b14155b8015620072e5575060046007811115620072c657fe5b601660199054906101000a900460ff166007811115620072e257fe5b14155b905080156200743d5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000601b80549050116200731b6200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200737e57808201518184015260208101905062007361565b50505050905090810190601f168015620073ac5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018062011903604d91396060019550505050505060006040518083038186803b1580156200741957600080fd5b505af41580156200742e573d6000803e3d6000fd5b505050506200743c6200f3f6565b5b6007601660196101000a81548160ff021916908360078111156200745d57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff166007811115620074c157fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a2620075437f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f4fe565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2601660199054906101000a900460ff16935050505090565b620075f26200fcdd565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102000181905250620076516200f62c565b816020019060ff16908160ff1681525050620076788160036200d6bd90919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef620076ec83336200348c565b15620076f76200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200775a5780820151818401526020810190506200773d565b50505050905090810190601f168015620077885780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011712602b913960400184810382526034815260200180620117fe603491396040019550505050505060006040518083038186803b158015620077d957600080fd5b505af4158015620077ee573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600088815260200190815260200160002060010160039054906101000a900460ff166200783a6200f635565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200789d57808201518184015260208101905062007880565b50505050905090810190601f168015620078cb5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d06602591396040018481038252603481526020018062011f71603491396040019550505050505060006040518083038186803b1580156200791c57600080fd5b505af415801562007931573d6000803e3d6000fd5b5050505083601d600087815260200190815260200160002060010160006101000a81548160ff02191690831515021790555082601d600087815260200190815260200160002060010160016101000a81548160ff02191690831515021790555081601d600087815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b60008060008062007a638686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001206200d589565b90919293945090919293508094508195508296508397505050505092959194509250565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801562007b2a57600080fd5b505af415801562007b3f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562007b6a57600080fd5b810190808051604051939291908464010000000082111562007b8b57600080fd5b8382019150602082018581111562007ba257600080fd5b825186600182028301116401000000008211171562007bc057600080fd5b8083526020830192505050908051906020019080838360005b8381101562007bf657808201518184015260208101905062007bd9565b50505050905090810190601f16801562007c245780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801562007cd6575062007cd460405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120336200348c565b155b62007ce06200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007d4357808201518184015260208101905062007d26565b50505050905090810190601f16801562007d715780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011bed6025913960400184810382526034815260200180620117fe603491396040019550505050505060006040518083038186803b15801562007dc257600080fd5b505af415801562007dd7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff161562007e246200f672565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007e8757808201518184015260208101905062007e6a565b50505050905090810190601f16801562007eb55780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011bed60259139604001848103825260398152602001806201169c603991396040019550505050505060006040518083038186803b15801562007f0657600080fd5b505af415801562007f1b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160019054906101000a900460ff161562007f686200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007fcb57808201518184015260208101905062007fae565b50505050905090810190601f16801562007ff95780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011bed602591396040018481038252602981526020018062011a1b602991396040019550505050505060006040518083038186803b1580156200804a57600080fd5b505af41580156200805f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120841480156200813257506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b6200813c6200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200819f57808201518184015260208101905062008182565b50505050905090810190601f168015620081cd5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011bed602591396040018481038252602d81526020018062011cd9602d91396040019550505050505060006040518083038186803b1580156200821e57600080fd5b505af415801562008233573d6000803e3d6000fd5b50505050600080600090505b601d600085815260200190815260200160002060000180549050811015620083ee578273ffffffffffffffffffffffffffffffffffffffff16601d600086815260200190815260200160002060000182815481106200829a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620083e0576001915060008190505b6001601d60008781526020019081526020016000206000018054905003811015620083d957601d600086815260200190815260200160002060000160018201815481106200833657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601d600087815260200190815260200160002060000182815481106200838357fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050620082ec565b50620083ee565b80806001019150506200823f565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215620084156200f672565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620084785780820151818401526020810190506200845b565b50505050905090810190601f168015620084a65780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011bed602591396040018481038252603081526020018062011f09603091396040019550505050505060006040518083038186803b158015620084f757600080fd5b505af41580156200850c573d6000803e3d6000fd5b50505050601d60008481526020019081526020016000206000018054809190600190036200853b91906200fe14565b50505050565b60007f41475245454d454e545f504152544945530000000000000000000000000000008214156200857a57601b80549050905062008588565b62008585826200f6af565b90505b919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008b8b905014620085b86200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200861b578082015181840152602081019050620085fe565b50505050905090810190601f168015620086495780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252603881526020018062011f39603891396040019550505050505060006040518083038186803b158015620086b657600080fd5b505af4158015620086cb573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8a8a90508911620086f96200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200875c5780820151818401526020810190506200873f565b50505050905090810190601f1680156200878a5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252604b8152602001806201185e604b91396060019550505050505060006040518083038186803b158015620087f757600080fd5b505af41580156200880c573d6000803e3d6000fd5b50505050888860139190620088239291906200fe43565b50866011819055508585600e91906200883e9291906200fee8565b508383600f9190620088529291906200fee8565b50818160109190620088669291906200fee8565b506200887162005c84565b3073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c204f70656e7320417400000000000000000000000000000000600e6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620089525780601f10620089265761010080835404028352916020019162008952565b820191906000526020600020905b8154815290600101906020018083116200893457829003601f168201915b50509350505050600060405180830381600087803b1580156200897457600080fd5b505af115801562008989573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c20436c6f736573204174000000000000000000000000000000600f6040518363ffffffff1660e01b8152600401808381526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008a6e5780601f1062008a425761010080835404028352916020019162008a6e565b820191906000526020600020905b81548152906001019060200180831162008a5057829003601f168201915b50509350505050600060405180830381600087803b15801562008a9057600080fd5b505af115801562008aa5573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f457874656e642045787069726174696f6e20427900000000000000000000000060106040518363ffffffff1660e01b8152600401808381526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008b8a5780601f1062008b5e5761010080835404028352916020019162008b8a565b820191906000526020600020905b81548152906001019060200180831162008b6c57829003601f168201915b50509350505050600060405180830381600087803b15801562008bac57600080fd5b505af115801562008bc1573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fa4607fdd9293c6f4b8b00c658e9537cb8c9962323efb992b43517d29d462fff73062008c126200eef6565b601154600e600f6010604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200180602001806020018060200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008cee5780601f1062008cc25761010080835404028352916020019162008cee565b820191906000526020600020905b81548152906001019060200180831162008cd057829003601f168201915b505084810383528681815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008d755780601f1062008d495761010080835404028352916020019162008d75565b820191906000526020600020905b81548152906001019060200180831162008d5757829003601f168201915b505084810382528581815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008dfc5780601f1062008dd05761010080835404028352916020019162008dfc565b820191906000526020600020905b81548152906001019060200180831162008dde57829003601f168201915b5050995050505050505050505060405180910390a2505050505050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff161562008e516200f0d8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008eb457808201518184015260208101905062008e97565b50505050905090810190601f16801562008ee25780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252602381526020018062011c95602391396040019550505050505060006040518083038186803b15801562008f4f57600080fd5b505af415801562008f64573d6000803e3d6000fd5b5050505060008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801562008fe657600080fd5b505af415801562008ffb573d6000803e3d6000fd5b505050506040513d60408110156200901257600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620090896200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620090ec578082015181840152602081019050620090cf565b50505050905090810190601f1680156200911a5780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252603081526020018062011daa603091396040019550505050505060006040518083038186803b1580156200918757600080fd5b505af41580156200919c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615620092156200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620092785780820151818401526020810190506200925b565b50505050905090810190601f168015620092a65780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252604181526020018062011a8e604191396060019550505050505060006040518083038186803b1580156200931357600080fd5b505af415801562009328573d6000803e3d6000fd5b5050505081601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555042601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f51b47958068fc9bea1acf9a821d66c2e1bd06eb6261035948b9185300cbcac5b3083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a26200964b6200f115565b505050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef620096e183336200348c565b15620096ec6200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200974f57808201518184015260208101905062009732565b50505050905090810190601f1680156200977d5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011712602b913960400184810382526034815260200180620117fe603491396040019550505050505060006040518083038186803b158015620097ce57600080fd5b505af4158015620097e3573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600086815260200190815260200160002060010160039054906101000a900460ff1615620098306200f672565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200989357808201518184015260208101905062009876565b50505050905090810190601f168015620098c15780820380516001836020036101000a031916815260200191505b50848103835260248152602001806201167860249139604001848103825260398152602001806201169c603991396040019550505050505060006040518083038186803b1580156200991257600080fd5b505af415801562009927573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060010160009054906101000a900460ff161562009b7d57601d6000848152602001908152602001600020600001805480602002602001604051908101604052809291908181526020018280548015620099ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620099a2575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b8381101562009a9557808201518184015260208101905062009a78565b50505050905001935050505060206040518083038186803b15801562009aba57600080fd5b505af415801562009acf573d6000803e3d6000fd5b505050506040513d602081101562009ae657600080fd5b810190808051906020019092919050505062009b7757601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b62009ec1565b6000601d600085815260200190815260200160002060000180549050141562009c2057601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062009ec0565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369962009c446200f295565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009c9d57808201518184015260208101905062009c80565b50505050905090810190601f16801562009ccb5780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620116786024913960400184810382526083815260200180620115c96083913960a00194505050505060006040518083038186803b15801562009d1b57600080fd5b505af415801562009d30573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562009d5b57600080fd5b810190808051604051939291908464010000000082111562009d7c57600080fd5b8382019150602082018581111562009d9357600080fd5b825186600182028301116401000000008211171562009db157600080fd5b8083526020830192505050908051906020019080838360005b8381101562009de757808201518184015260208101905062009dca565b50505050905090810190601f16801562009e155780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562009e8457808201518184015260208101905062009e67565b50505050905090810190601f16801562009eb25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b6579732829000000000000000000000081525060150190506040516020818303038152906040528051906020012060405160200180806201204660259139602501905060405160208183030381529060405280519060200120604051602001808062011c39602791396027019050604051602081830303815290604052805190602001206040516020018080620118a9602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011acf604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff1662009ff46200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a0575780820151818401526020810190506200a03a565b50505050905090810190601f1680156200a0855780820380516001836020036101000a031916815260200191505b508481038352602a8152602001806201159f602a913960400184810382526029815260200180620117d5602991396040019550505050505060006040518083038186803b1580156200a0d657600080fd5b505af41580156200a0eb573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16146200a1436200f08a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a1a65780820151818401526020810190506200a189565b50505050905090810190601f1680156200a1d45780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012025602191396040018481038252602e81526020018062011ff7602e91396040019550505050505060006040518083038186803b1580156200a22557600080fd5b505af41580156200a23a573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146200a2926200f08a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a2f55780820151818401526020810190506200a2d8565b50505050905090810190601f1680156200a3235780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012025602191396040018481038252602c8152602001806201164c602c91396040019550505050505060006040518083038186803b1580156200a37457600080fd5b505af41580156200a389573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16146200a3e16200f08a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a4445780820151818401526020810190506200a427565b50505050905090810190601f1680156200a4725780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012025602191396040018481038252602381526020018062011d87602391396040019550505050505060006040518083038186803b1580156200a4c357600080fd5b505af41580156200a4d8573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200a53d57600080fd5b505afa1580156200a552573d6000803e3d6000fd5b505050506040513d60208110156200a56957600080fd5b8101908080519060200190929190505050156200a5856200f0d8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a5e85780820151818401526020810190506200a5cb565b50505050905090810190601f1680156200a6165780820380516001836020036101000a031916815260200191505b50848103835260218152602001806201202560219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b1580156200a68357600080fd5b505af41580156200a698573d6000803e3d6000fd5b505050506200a80b828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b1580156200a72957600080fd5b505afa1580156200a73e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200a76957600080fd5b81019080805160405193929190846401000000008211156200a78a57600080fd5b838201915060208201858111156200a7a157600080fd5b82518660208202830111640100000000821117156200a7bf57600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200a7f85780820151818401526020810190506200a7db565b505050509050016040525050506200f750565b6200a90c60405160200180807f6765744164647265737353636f70654b6579732829000000000000000000000081525060150190506040516020818303038152906040528051906020012060405160200180806201204660259139602501905060405160208183030381529060405280519060200120604051602001808062011c39602791396027019050604051602081830303815290604052805190602001206040516020018080620118a9602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011acf60409139604001905060405160208183030381529060405280519060200120181818186200fb5d565b89601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008787905011156200aaaf57601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200aa7057600080fd5b505af41580156200aa85573d6000803e3d6000fd5b505050506040513d60208110156200aa9c57600080fd5b8101908080519060200190929190505050505b84601660146101000a81548160ff0219169083151502179055508383601b91906200aadc9291906200fe43565b508181601c91906200aaf09291906200fe43565b506001601660196101000a81548160ff021916908360078111156200ab1157fe5b02179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816200ad5591906200fe14565b5087601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106200adc057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c601660199054906101000a900460ff1660078111156200b04157fe5b601660159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b848490508110156200b2dd577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc308787858181106200b20157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a280806001019150506200b1a5565b600090505b828290508110156200b3dd577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd308585858181106200b33e57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a280806001019150506200b2e2565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b601260009054906101000a900460ff16156200b74d576000601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fd999895ef4e74c2e812b1770fc1d6fb3b5cd235ba2acb0429f95846e6ca99a6f30601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a2601260019054906101000a900460ff16156200b74c5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600d54146200b51c6200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200b57f5780820151818401526020810190506200b562565b50505050905090810190601f1680156200b5ad5780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620119c1602491396040018481038252603d815260200180620116d5603d91396040019550505050505060006040518083038186803b1580156200b5fe57600080fd5b505af41580156200b613573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000600d546040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b69557600080fd5b505af11580156200b6aa573d6000803e3d6000fd5b505050506000600d819055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c306200b7036200eef6565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a25b5b565b6003601660196101000a81548160ff021916908360078111156200b76f57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200b7d357fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a2565b6000601c82815481106200b83b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600d8190555050565b60606200b88f8260036200dfb690919063ffffffff16565b606001519050919050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b60606200b9228260036200dfb690919063ffffffff16565b61014001519050919050565b6000601380549050905090565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006200b99d8260036200dfb690919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ba166200f3b9565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200ba6f5780820151818401526020810190506200ba52565b50505050905090810190601f1680156200ba9d5780820380516001836020036101000a031916815260200191505b508481038352605281526020018062011fa560529139606001848103825260988152602001806201173d6098913960a00194505050505060006040518083038186803b1580156200baed57600080fd5b505af41580156200bb02573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200bb2d57600080fd5b81019080805160405193929190846401000000008211156200bb4e57600080fd5b838201915060208201858111156200bb6557600080fd5b82518660018202830111640100000000821117156200bb8357600080fd5b8083526020830192505050908051906020019080838360005b838110156200bbb95780820151818401526020810190506200bb9c565b50505050905090810190601f1680156200bbe75780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200bc565780820151818401526020810190506200bc39565b50505050905090810190601f1680156200bc845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200bd1057600080fd5b505af41580156200bd25573d6000803e3d6000fd5b505050506040513d60408110156200bd3c57600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146200bdaf6200ee7c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200be125780820151818401526020810190506200bdf5565b50505050905090810190601f1680156200be405780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011cb8602191396040018481038252602681526020018062011a68602691396040019550505050505060006040518083038186803b1580156200be9157600080fd5b505af41580156200bea6573d6000803e3d6000fd5b50505050600060078111156200beb857fe5b601660199054906101000a900460ff1660078111156200bed457fe5b14806200bf085750600160078111156200beea57fe5b601660199054906101000a900460ff1660078111156200bf0657fe5b145b156200c0da5781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200bfe06200f3f6565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26200c3df565b600260078111156200c0e857fe5b601660199054906101000a900460ff1660078111156200c10457fe5b14156200c3de576000601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3dd5781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b601b805490508110156200c3db576000601a6000601b84815481106200c33b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3b1576200c3db565b6001601b80549050038114156200c3cd576200c3cc6200f3f6565b5b80806001019150506200c319565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200c42c6200f672565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c48f5780820151818401526020810190506200c472565b50505050905090810190601f1680156200c4bd5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011c1260279139604001848103825260398152602001806201169c603991396040019550505050505060006040518083038186803b1580156200c50e57600080fd5b505af41580156200c523573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160029054906101000a900460ff16156200c5706200f3b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c5d35780820151818401526020810190506200c5b6565b50505050905090810190601f1680156200c6015780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011c12602791396040018481038252602c81526020018062011832602c91396040019550505050505060006040518083038186803b1580156200c65257600080fd5b505af41580156200c667573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d60008581526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200c71d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200c6d2575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200c7c55780820151818401526020810190506200c7a8565b50505050905001935050505060206040518083038186803b1580156200c7ea57600080fd5b505af41580156200c7ff573d6000803e3d6000fd5b505050506040513d60208110156200c81657600080fd5b81019080805190602001909291905050506200c8316200f635565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c8945780820151818401526020810190506200c877565b50505050905090810190601f1680156200c8c25780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011c12602791396040018481038252603581526020018062011bb8603591396040019550505050505060006040518083038186803b1580156200c91357600080fd5b505af41580156200c928573d6000803e3d6000fd5b5050505060008090505b601d6000848152602001908152602001600020600001805490508110156200ca55573373ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000182815481106200c98d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200ca475781601d600085815260200190815260200160002060000182815481106200c9f857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200ccf6565b80806001019150506200c932565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ca7a6200ee7c565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200cad35780820151818401526020810190506200cab6565b50505050905090810190601f1680156200cb015780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011c12602791396040018481038252603581526020018062011c606035913960400194505050505060006040518083038186803b1580156200cb5157600080fd5b505af41580156200cb66573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200cb9157600080fd5b81019080805160405193929190846401000000008211156200cbb257600080fd5b838201915060208201858111156200cbc957600080fd5b82518660018202830111640100000000821117156200cbe757600080fd5b8083526020830192505050908051906020019080838360005b838110156200cc1d5780820151818401526020810190506200cc00565b50505050905090810190601f1680156200cc4b5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200ccba5780820151818401526020810190506200cc9d565b50505050905090810190601f1680156200cce85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b6200cd046200fcdd565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161040001819052506200cd636200fc4a565b816020019060ff16908160ff16815250506200cd8a8160036200d6bd90919063ffffffff16565b5050505050565b60607f41475245454d454e545f504152544945530000000000000000000000000000008214156200ce4d57601b8054806020026020016040519081016040528092919081815260200182805480156200ce4057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200cdf5575b505050505090506200ce6b565b6200ce638260036200dfb690919063ffffffff16565b610120015190505b919050565b6000600280600381106200ce8057fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b60606200ceb98260036200dfb690919063ffffffff16565b6102c001519050919050565b6200cecf6200fcdd565b828160000181815250506200cee36200fc53565b816020019060ff16908160ff1681525050818160800181815250506200cf148160036200d6bd90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60006200cfc68260036200dfb690919063ffffffff16565b60c001519050919050565b600080601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6200d08d6200fcdd565b838160000181815250506200d0a16200fc64565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161014001819052506200d1138160036200d6bd90919063ffffffff16565b5050505050565b7f454d5054595f53434f504500000000000000000000000000000000000000000081565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200d25d57600080fd5b505af41580156200d272573d6000803e3d6000fd5b505050506040513d60208110156200d28957600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200d3fa57600080fd5b505af41580156200d40f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200d43a57600080fd5b81019080805160405193929190846401000000008211156200d45b57600080fd5b838201915060208201858111156200d47257600080fd5b82518660018202830111640100000000821117156200d49057600080fd5b8083526020830192505050908051906020019080838360005b838110156200d4c65780820151818401526020810190506200d4a9565b50505050905090810190601f1680156200d4f45780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601660149054906101000a900460ff16905090565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b60606200d57d8260036200dfb690919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff16156200d6ab576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff16156200db045781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200d7759291906200ff6f565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200d7fa9291906200fff6565b506101208201518160080190805190602001906200d81a9291906201005d565b506101408201518160090190805190602001906200d83a929190620100ec565b5061016082015181600a0190805190602001906200d85a92919062010199565b5061018082015181600b0190805190602001906200d87a92919062010247565b506101a082015181600c0190805190602001906200d89a929190620102f8565b506101c082015181600d0190805190602001906200d8ba929190620103af565b506101e082015181600e0190805190602001906200d8da92919062010472565b5061020082015181600f0190805190602001906200d8fa9291906201054d565b506102208201518160100190805190602001906200d91a9291906201059f565b506102408201518160110190805190602001906200d93a92919062010650565b506102608201518160120190805190602001906200d95a92919062010704565b506102808201518160130190805190602001906200d97a929190620107be565b506102a08201518160140190805190602001906200d99a92919062010884565b506102c08201518160150190805190602001906200d9ba92919062010962565b506102e08201518160160190805190602001906200d9da929190620109b4565b506103008201518160170190805190602001906200d9fa92919062010a62565b506103208201518160180190805190602001906200da1a92919062010b12565b506103408201518160190190805190602001906200da3a92919062010bc4565b5061036082015181601a0190805190602001906200da5a92919062010c78565b5061038082015181601b0190805190602001906200da7a92919062010d34565b506103a082015181601c0190805190602001906200da9a92919062010e00565b506103c082015181601d0190805190602001906200daba92919062010e7c565b506103e082015181601e0190805190602001906200dada92919062010efc565b5061040082015181601f0190805190602001906200dafa92919062010f80565b509050506200df9d565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200dbde9291906200ff6f565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200dc639291906200fff6565b506101208201518160080190805190602001906200dc839291906201005d565b506101408201518160090190805190602001906200dca3929190620100ec565b5061016082015181600a0190805190602001906200dcc392919062010199565b5061018082015181600b0190805190602001906200dce392919062010247565b506101a082015181600c0190805190602001906200dd03929190620102f8565b506101c082015181600d0190805190602001906200dd23929190620103af565b506101e082015181600e0190805190602001906200dd4392919062010472565b5061020082015181600f0190805190602001906200dd639291906201054d565b506102208201518160100190805190602001906200dd839291906201059f565b506102408201518160110190805190602001906200dda392919062010650565b506102608201518160120190805190602001906200ddc392919062010704565b506102808201518160130190805190602001906200dde3929190620107be565b506102a08201518160140190805190602001906200de0392919062010884565b506102c08201518160150190805190602001906200de2392919062010962565b506102e08201518160160190805190602001906200de43929190620109b4565b506103008201518160170190805190602001906200de6392919062010a62565b506103208201518160180190805190602001906200de8392919062010b12565b506103408201518160190190805190602001906200dea392919062010bc4565b5061036082015181601a0190805190602001906200dec392919062010c78565b5061038082015181601b0190805190602001906200dee392919062010d34565b506103a082015181601c0190805190602001906200df0392919062010e00565b506103c082015181601d0190805190602001906200df2392919062010e7c565b506103e082015181601e0190805190602001906200df4392919062010efc565b5061040082015181601f0190805190602001906200df6392919062010f80565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b6200dfc06200fcdd565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e0c35780601f106200e097576101008083540402835291602001916200e0c3565b820191906000526020600020905b8154815290600101906020018083116200e0a557829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156200e227578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e2125780601f106200e1e6576101008083540402835291602001916200e212565b820191906000526020600020905b8154815290600101906020018083116200e1f457829003601f168201915b5050505050815260200190600101906200e165565b505050508152602001600882018054806020026020016040519081016040528092919081815260200182805480156200e2b657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200e26b575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156200e33557602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116200e2fe5790505b50505050508152602001600a82018054806020026020016040519081016040528092919081815260200182805480156200e3b557602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200e37d5790505b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156200e43757602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116200e3fd5790505b50505050508152602001600c82018054806020026020016040519081016040528092919081815260200182805480156200e4bd57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116200e47f5790505b50505050508152602001600d82018054806020026020016040519081016040528092919081815260200182805480156200e54b57602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff16815260200190600801906020826007010492830192600103820291508084116200e5055790505b50505050508152602001600e82018054806020026020016040519081016040528092919081815260200182805480156200e5e957602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116200e5935790505b50505050508152602001600f82018054806020026020016040519081016040528092919081815260200182805480156200e64357602002820191906000526020600020905b8154815260200190600101908083116200e62e575b50505050508152602001601082018054806020026020016040519081016040528092919081815260200182805480156200e6c357602002820191906000526020600020906000905b82829054906101000a900460000b60000b815260200190600101906020826000010492830192600103820291508084116200e68b5790505b50505050508152602001601182018054806020026020016040519081016040528092919081815260200182805480156200e74357602002820191906000526020600020906000905b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116200e70b5790505b50505050508152602001601282018054806020026020016040519081016040528092919081815260200182805480156200e7c357602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116200e78b5790505b50505050508152602001601382018054806020026020016040519081016040528092919081815260200182805480156200e84357602002820191906000526020600020906000905b82829054906101000a900460070b60070b815260200190600801906020826007010492830192600103820291508084116200e80b5790505b50505050508152602001601482018054806020026020016040519081016040528092919081815260200182805480156200e8c357602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116200e88b5790505b50505050508152602001601582018054806020026020016040519081016040528092919081815260200182805480156200e91d57602002820191906000526020600020905b8154815260200190600101908083116200e908575b50505050508152602001601682018054806020026020016040519081016040528092919081815260200182805480156200e9bc57602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600101906020826000010492830192600103820291508084116200e9655790505b50505050508152602001601782018054806020026020016040519081016040528092919081815260200182805480156200ea5a57602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600201906020826001010492830192600103820291508084116200ea045790505b50505050508152602001601882018054806020026020016040519081016040528092919081815260200182805480156200eaf757602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600301906020826002010492830192600103820291508084116200eaa25790505b50505050508152602001601982018054806020026020016040519081016040528092919081815260200182805480156200eb9357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200eb3f5790505b50505050508152602001601a82018054806020026020016040519081016040528092919081815260200182805480156200ec2b57602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600801906020826007010492830192600103820291508084116200ebdb5790505b50505050508152602001601b82018054806020026020016040519081016040528092919081815260200182805480156200ecbb57602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f010492830192600103820291508084116200ec735790505b50505050508152602001601c82018054806020026020016040519081016040528092919081815260200182805480156200ed3157602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff1916815260200190600101908083116200ed00575b50505050508152602001601d82018054806020026020016040519081016040528092919081815260200182805480156200eda357602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff1916815260200190600101908083116200ed76575b50505050508152602001601e82018054806020026020016040519081016040528092919081815260200182805480156200ee1157602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff1916815260200190600101908083116200ede8575b50505050508152602001601f82018054806020026020016040519081016040528092919081815260200182805480156200ee6b57602002820191906000526020600020905b8154815260200190600101908083116200ee56575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60003073ffffffffffffffffffffffffffffffffffffffff1663e2be8fe17f41677265656d656e742045787069726174696f6e2044617465000000000000006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200ef6a57600080fd5b505afa1580156200ef7f573d6000803e3d6000fd5b505050506040513d60208110156200ef9657600080fd5b8101908080519060200190929190505050905090565b60006200efde836000600381106200efc057fe5b6020020151836000600381106200efd357fe5b60200201516200fc6d565b9050600081146200eff2578090506200f069565b6200f022836001600381106200f00457fe5b6020020151836001600381106200f01757fe5b60200201516200fc6d565b9050600081146200f036578090506200f069565b6200f066836002600381106200f04857fe5b6020020151836002600381106200f05b57fe5b60200201516200fc6d565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006200f0d36200fccb565b905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b600080905060008090505b6013805490508110156200f1d35760146000601383815481106200f14057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16156200f1c55781806001019250505b80806001019150506200f120565b50601154811015601260016101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fb943efb3fc1da02bb1e14eed2ee64f5394e1f6f800ee4ea04c80cefe3a79bc7530601260019054906101000a900460ff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a250565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005601660196101000a81548160ff021916908360078111156200f41657fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200f47a57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a26200f4fc7f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f4fe565b565b60008090505b600a6000016000848152602001908152602001600020600101805490508110156200f62757600a600001600084815260200190815260200160002060010181815481106200f54e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200f60057600080fd5b505af11580156200f615573d6000803e3d6000fd5b5050505080806001019150506200f504565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200f70c57600080fd5b505af41580156200f721573d6000803e3d6000fd5b505050506040513d60208110156200f73857600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8251845114156200f77a6200eeb9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200f7dd5780820151818401526020810190506200f7c0565b50505050905090810190601f1680156200f80b5780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011950603291396040018481038252606681526020018062011e6e606691396080019550505050505060006040518083038186803b1580156200f85c57600080fd5b505af41580156200f871573d6000803e3d6000fd5b50505050600080905060008090505b83518110156200fa255760008090505b83518110156200fa1657600073ffffffffffffffffffffffffffffffffffffffff168482815181106200f8bf57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200f8ea576200fa08565b8482815181106200f8f757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200f94557600080fd5b505afa1580156200f95a573d6000803e3d6000fd5b505050506040513d60208110156200f97157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168482815181106200f9a557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200fa07578381815181106200f9d757fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff1681525082806001019350506200fa16565b5b80806001019150506200f890565b5080806001019150506200f880565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementRenewalExpirationDateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalExpirationDateUpdate", this.address, callback); }
        LogAgreementRenewalFranchiseeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalFranchiseeUpdate", this.address, callback); }
        LogAgreementRenewalResultUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalResultUpdate", this.address, callback); }
        LogAgreementRenewalTermsDefined(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalTermsDefined", this.address, callback); }
        LogAgreementRenewalVoteCast(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalVoteCast", this.address, callback); }
        LogAgreementRenewalWindowClosed(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowClosed", this.address, callback); }
        LogAgreementRenewalWindowOpened(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowOpened", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        EMPTY_SCOPE() {
            const data = Encode(this.client).EMPTY_SCOPE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EMPTY_SCOPE();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        castRenewalVote(_renew: boolean) {
            const data = Encode(this.client).castRenewalVote(_renew);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).castRenewalVote();
            });
        }
        closeRenewalWindow() {
            const data = Encode(this.client).closeRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).closeRenewalWindow();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        defineRenewalTerms(_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) {
            const data = Encode(this.client).defineRenewalTerms(_franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).defineRenewalTerms();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getNumberOfRenewalFranchisees() {
            const data = Encode(this.client).getNumberOfRenewalFranchisees();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfRenewalFranchisees();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getRenewalFranchiseeAtIndex(_index: number) {
            const data = Encode(this.client).getRenewalFranchiseeAtIndex(_index);
            return Call<Tx, {
                franchisee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalFranchiseeAtIndex();
            });
        }
        getRenewalState() {
            const data = Encode(this.client).getRenewalState();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalState();
            });
        }
        getRenewalTerms() {
            const data = Encode(this.client).getRenewalTerms();
            return Call<Tx, {
                renewalThreshold: number;
                agreementExpirationDate: number;
                renewalOpensAtOffset: string;
                renewalClosesAtOffset: string;
                renewalExtensionOffset: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalTerms();
            });
        }
        getRenewalVoteDetails(_franchisee: string) {
            const data = Encode(this.client).getRenewalVoteDetails(_franchisee);
            return Call<Tx, {
                renewalVoter: string;
                renewVote: boolean;
                voteTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalVoteDetails();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isRenewalWindowOpen() {
            const data = Encode(this.client).isRenewalWindowOpen();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isRenewalWindowOpen();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        openRenewalWindow() {
            const data = Encode(this.client).openRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).openRenewalWindow();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resetRenewalVotes() {
            const data = Encode(this.client).resetRenewalVotes();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).resetRenewalVotes();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setNextExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setNextExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setNextExpirationDate();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return client.encode("1314CF66", []); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        EMPTY_SCOPE: () => { return client.encode("F6EC229E", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        castRenewalVote: (_renew: boolean) => { return client.encode("B20BA337", ["bool"], _renew); },
        closeRenewalWindow: () => { return client.encode("C0647C2E", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        defineRenewalTerms: (_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) => { return client.encode("B00B6428", ["address[]", "uint256", "string", "string", "string"], _franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getNumberOfRenewalFranchisees: () => { return client.encode("D779C8A1", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getRenewalFranchiseeAtIndex: (_index: number) => { return client.encode("6A78A815", ["uint256"], _index); },
        getRenewalState: () => { return client.encode("04FCE015", []); },
        getRenewalTerms: () => { return client.encode("40514A1A", []); },
        getRenewalVoteDetails: (_franchisee: string) => { return client.encode("84A6CD4D", ["address"], _franchisee); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isRenewalWindowOpen: () => { return client.encode("8AAEFF8C", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        openRenewalWindow: () => { return client.encode("8C2A4DAE", []); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resetRenewalVotes: () => { return client.encode("72EA1826", []); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setNextExpirationDate: (_expirationDate: number) => { return client.encode("C6E8DFD0", ["int256"], _expirationDate); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EMPTY_SCOPE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        castRenewalVote: (): void => { return; },
        closeRenewalWindow: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        defineRenewalTerms: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfRenewalFranchisees: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getRenewalFranchiseeAtIndex: (): {
            franchisee: string;
        } => {
            const [franchisee] = client.decode(data, ["address"]);
            return { franchisee: franchisee };
        },
        getRenewalState: (): [boolean] => { return client.decode(data, ["bool"]); },
        getRenewalTerms: (): {
            renewalThreshold: number;
            agreementExpirationDate: number;
            renewalOpensAtOffset: string;
            renewalClosesAtOffset: string;
            renewalExtensionOffset: string;
        } => {
            const [renewalThreshold, agreementExpirationDate, renewalOpensAtOffset, renewalClosesAtOffset, renewalExtensionOffset] = client.decode(data, ["uint256", "int256", "string", "string", "string"]);
            return { renewalThreshold: renewalThreshold, agreementExpirationDate: agreementExpirationDate, renewalOpensAtOffset: renewalOpensAtOffset, renewalClosesAtOffset: renewalClosesAtOffset, renewalExtensionOffset: renewalExtensionOffset };
        },
        getRenewalVoteDetails: (): {
            renewalVoter: string;
            renewVote: boolean;
            voteTimestamp: number;
        } => {
            const [renewalVoter, renewVote, voteTimestamp] = client.decode(data, ["address", "bool", "uint256"]);
            return { renewalVoter: renewalVoter, renewVote: renewVote, voteTimestamp: voteTimestamp };
        },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isRenewalWindowOpen: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        openRenewalWindow: (): void => { return; },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resetRenewalVotes: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setNextExpirationDate: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}