//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "60806040527f63726561746564000000000000000000000000000000000000000000000000006007557f75706461746564000000000000000000000000000000000000000000000000006008557f64656c657465640000000000000000000000000000000000000000000000000060095560016006600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550826002600060038110620000d757fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200010757fe5b602091828204019190066101000a81548160ff021916908360ff16021790555080600280600381106200013657fe5b602091828204019190066101000a81548160ff021916908360ff160217905550620001ad60405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001b660201b60201c565b505050620002a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806201228a602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b62011fd680620002b46000396000f3fe60806040523480156200001157600080fd5b5060043610620007185760003560e01c80637f91fb7d11620003a5578063d39c4faa11620001ef578063f0897db71162000129578063f8d660d311620000bd578063fb1a14931162000093578063fb1a14931462002b93578063fc344a731462002bdf578063fcb4862a1462002bff578063fe3c84b21462002c875762000718565b8063f8d660d31462002a68578063f9f3f2831462002ae7578063faff660e1462002b6f5762000718565b8063f364e37911620000ff578063f364e37914620028c0578063f4b9d96e1462002931578063f5081e9f14620029bf578063f76829c91462002a485762000718565b8063f0897db714620027dd578063f0a4052714620027fd578063f3420d1a14620028855762000718565b8063e6f936f911620001a1578063ec9cb2ce1162000177578063ec9cb2ce1462002655578063edec4c4f14620026a6578063eeb8b809146200272f578063f085f6dd14620027b75762000718565b8063e6f936f914620024ae578063e703a9e414620024ce578063ea8a1af014620026495762000718565b8063d39c4faa14620022e8578063d42ea9761462002343578063d734c53a1462002363578063d779c8a114620023eb578063e10533c6146200240b578063e2be8fe114620024695762000718565b80639f75dfd911620002df578063be60fc0c1162000273578063c4521ffb1162000249578063c4521ffb1462002168578063c6e8dfd014620021d9578063cfdc4942146200220a578063d2e8a0fa146200223b5762000718565b8063be60fc0c1462001fb5578063c0647c2e1462002150578063c3f0a895146200215c5762000718565b8063b20ba33711620002b5578063b20ba3371462001eb3578063b7d647771462001ee6578063bc5864561462001f06578063bd9e06601462001f575762000718565b80639f75dfd91462001d95578063a6a8f17b1462001e1d578063aa0ac16f1462001e6e5762000718565b80638aaeff8c116200035757806391bec712116200032d57806391bec7121462001be257806394e386241462001c1157806394feb1521462001c9a5780639561aa321462001cef5762000718565b80638aaeff8c1462001b925780638c2a4dae1462001bb65780639090fd851462001bc25762000718565b80637f91fb7d14620019ac57806380c86ba71462001a0b57806384a6cd4d1462001a2b578063859360f51462001ac4578063893d20e81462001b0b5780638aa137f51462001b575762000718565b80634f7e37bb11620005675780636d6a7e8f11620004a1578063720e72e911620004355780637589adb7116200040b5780637589adb7146200187957806378bc0b0d146200189f57806379ce3cb2146200191b5780637f809381146200198c5762000718565b8063720e72e914620017e857806372ea18261462001823578063756b2e6c146200182f5762000718565b80636ea1944b11620004775780636ea1944b14620017145780636f78733b146200174557806370a9c99714620017655780637207b07f14620017c85762000718565b80636d6a7e8f14620015dc5780636d73c8bc14620016655780636dbbc67b14620016f45762000718565b806359d585ee116200051957806363a84c0411620004ef57806363a84c041462001420578063641375ad146200149157806368e78011146200151a5780636a78a815146200156b5762000718565b806359d585ee14620013735780635abf320214620013995780635c03013814620013c55762000718565b80634f7e37bb14620011c257806351e213fc14620012415780635666f9ac14620012c857806357e0ebca14620012e8578063586ca7ab146200130e57806358892b86146200133f5762000718565b80632512e6f1116200065757806335ce1bd111620005eb57806340514a1a11620005c157806340514a1a1462000f7e5780634773f6fc14620010f257806347dd48e014620011715780634828c43b14620011a25762000718565b806335ce1bd11462000e68578063374b7d221462000ead5780633c0e52451462000ef95762000718565b80632ca15122116200062d5780632ca151221462000d4057806330c676c91462000d4c578063311851821462000d9557806331502f131462000e1d5762000718565b80632512e6f11462000c4157806328545c0d1462000c865780632a7cbfde1462000cef5762000718565b80630ee2cb1011620006cf5780631314cf6611620006a55780631314cf661462000ae0578063141b422a1462000b005780631c5422d21462000b7b5780631cb355401462000c045762000718565b80630ee2cb101462000a3d57806311ce58441462000a89578063130c59851462000aa95762000718565b80630130b3e0146200071d57806301ffc9a714620008b857806304fce01514620009205780630775cb0014620009445780630cb61b3414620009955780630d9bfa801462000a1d575b600080fd5b620008b6600480360360c08110156200073557600080fd5b81019080803590602001906401000000008111156200075357600080fd5b8201836020820111156200076657600080fd5b803590602001918460208302840111640100000000831117156200078957600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190640100000000811115620007bf57600080fd5b820183602082011115620007d257600080fd5b80359060200191846001830284011164010000000083111715620007f557600080fd5b9091929391929390803590602001906401000000008111156200081757600080fd5b8201836020820111156200082a57600080fd5b803590602001918460018302840111640100000000831117156200084d57600080fd5b9091929391929390803590602001906401000000008111156200086f57600080fd5b8201836020820111156200088257600080fd5b80359060200191846001830284011164010000000083111715620008a557600080fd5b909192939192939050505062002d47565b005b6200090660048036036020811015620008d057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200366e565b604051808215151515815260200191505060405180910390f35b6200092a620036d5565b604051808215151515815260200191505060405180910390f35b62000993600480360360408110156200095c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620036ec565b005b6200099f620037ca565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620009e1578082015181840152602081019050620009c4565b50505050905090810190601f16801562000a0f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000a2762003973565b6040518082815260200191505060405180910390f35b62000a4762003980565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000a93620039aa565b6040518082815260200191505060405180910390f35b62000ade6004803603602081101562000ac157600080fd5b81019080803563ffffffff169060200190929190505050620039ce565b005b62000aea62003a8a565b6040518082815260200191505060405180910390f35b62000b396004803603604081101562000b1857600080fd5b81019080803590602001909291908035906020019092919050505062003aae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000c026004803603604081101562000b9357600080fd5b81019080803590602001909291908035906020019064010000000081111562000bbb57600080fd5b82018360208201111562000bce57600080fd5b8035906020019184600183028401116401000000008311171562000bf157600080fd5b909192939192939050505062003b5f565b005b62000c3f6004803603604081101562000c1c57600080fd5b810190808035906020019092919080351515906020019092919050505062003cb8565b005b62000c706004803603602081101562000c5957600080fd5b810190808035906020019092919050505062003dab565b6040518082815260200191505060405180910390f35b62000cd56004803603604081101562000c9e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062003dce565b604051808215151515815260200191505060405180910390f35b62000d3e6004803603604081101562000d0757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004077565b005b62000d4a62004155565b005b62000d7b6004803603602081101562000d6457600080fd5b8101908080359060200190929190505050620048e4565b604051808215151515815260200191505060405180910390f35b62000dc46004803603602081101562000dad57600080fd5b810190808035906020019092919050505062004907565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000e0957808201518184015260208101905062000dec565b505050509050019250505060405180910390f35b62000e4c6004803603602081101562000e3557600080fd5b81019080803590602001909291905050506200492b565b604051808260ff1660ff16815260200191505060405180910390f35b62000e976004803603602081101562000e8057600080fd5b8101908080359060200190929190505050620049cc565b6040518082815260200191505060405180910390f35b62000edc6004803603602081101562000ec557600080fd5b8101908080359060200190929190505050620049ef565b604051808381526020018281526020019250505060405180910390f35b62000f686004803603606081101562000f1157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004aa0565b6040518082815260200191505060405180910390f35b62000f8862004ee4565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101562000fde57808201518184015260208101905062000fc1565b50505050905090810190601f1680156200100c5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015620010475780820151818401526020810190506200102a565b50505050905090810190601f168015620010755780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015620010b057808201518184015260208101905062001093565b50505050905090810190601f168015620010de5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6200116f600480360360208110156200110a57600080fd5b81019080803590602001906401000000008111156200112857600080fd5b8201836020820111156200113b57600080fd5b803590602001918460018302840111640100000000831117156200115e57600080fd5b9091929391929390505050620050e0565b005b620011a0600480360360208110156200118957600080fd5b8101908080359060200190929190505050620052af565b005b620011ac6200534b565b6040518082815260200191505060405180910390f35b6200123f60048036036020811015620011da57600080fd5b8101908080359060200190640100000000811115620011f857600080fd5b8201836020820111156200120b57600080fd5b803590602001918460018302840111640100000000831117156200122e57600080fd5b90919293919293905050506200536f565b005b62001286600480360360208110156200125957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200553e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620012d2620055aa565b6040518082815260200191505060405180910390f35b620012f2620055ba565b604051808260ff1660ff16815260200191505060405180910390f35b6200133d600480360360208110156200132657600080fd5b8101908080359060200190929190505050620055e6565b005b62001371600480360360208110156200135757600080fd5b81019080803560ff169060200190929190505050620055f5565b005b6200137d6200583d565b604051808260ff1660ff16815260200191505060405180910390f35b620013a362005860565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6200140a60048036036020811015620013dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200587a565b6040518082815260200191505060405180910390f35b6200144f600480360360208110156200143857600080fd5b81019080803590602001909291905050506200597d565b60405180861515151581526020018515151515815260200184151515158152602001831515151581526020018281526020019550505050505060405180910390f35b6200151860048036036040811015620014a957600080fd5b810190808035906020019092919080359060200190640100000000811115620014d157600080fd5b820183602082011115620014e457600080fd5b803590602001918460208302840111640100000000831117156200150757600080fd5b909192939192939050505062005a59565b005b62001569600480360360408110156200153257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005af0565b005b6200159a600480360360208110156200158357600080fd5b810190808035906020019092919050505062005c33565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200166360048036036040811015620015f457600080fd5b8101908080359060200190929190803590602001906401000000008111156200161c57600080fd5b8201836020820111156200162f57600080fd5b803590602001918460208302840111640100000000831117156200165257600080fd5b909192939192939050505062005c8a565b005b620016f2600480360360c08110156200167d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005d21565b005b620016fe62006346565b6040518082815260200191505060405180910390f35b62001743600480360360208110156200172c57600080fd5b81019080803590602001909291905050506200636a565b005b6200174f62006379565b6040518082815260200191505060405180910390f35b6200176f6200637f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620017b457808201518184015260208101905062001797565b505050509050019250505060405180910390f35b620017d2620063d9565b6040518082815260200191505060405180910390f35b62001821600480360360408110156200180057600080fd5b810190808035906020019092919080359060200190929190505050620063df565b005b6200182d620064c8565b005b62001839620069f3565b6040518082600360200280838360005b838110156200186657808201518184015260208101905062001849565b5050505090500191505060405180910390f35b6200188362006a68565b604051808260ff1660ff16815260200191505060405180910390f35b6200190560048036036060811015620018b757600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062006a94565b6040518082815260200191505060405180910390f35b6200194a600480360360208110156200193357600080fd5b810190808035906020019092919050505062006b0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200199662006b65565b6040518082815260200191505060405180910390f35b620019f160048036036020811015620019c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006b72565b604051808215151515815260200191505060405180910390f35b62001a1562006c7b565b6040518082815260200191505060405180910390f35b62001a706004803603602081101562001a4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006c9f565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390f35b62001b096004803603602081101562001adc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006da7565b005b62001b1562007204565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001b906004803603604081101562001b6f57600080fd5b8101908080359060200190929190803590602001909291905050506200730f565b005b62001b9c620073f8565b604051808215151515815260200191505060405180910390f35b62001bc06200740f565b005b62001bcc620074e9565b6040518082815260200191505060405180910390f35b62001bec62007533565b6040518082600781111562001bfd57fe5b60ff16815260200191505060405180910390f35b62001c986004803603604081101562001c2957600080fd5b81019080803590602001909291908035906020019064010000000081111562001c5157600080fd5b82018360208201111562001c6457600080fd5b8035906020019184602083028401116401000000008311171562001c8757600080fd5b909192939192939050505062007dff565b005b62001ced6004803603608081101562001cb257600080fd5b810190808035906020019092919080351515906020019092919080351515906020019092919080351515906020019092919050505062007e96565b005b62001d3e6004803603604081101562001d0757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200820c565b604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b62001d9f6200829e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001de157808201518184015260208101905062001dc4565b50505050905090810190601f16801562001e0f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62001e6c6004803603604081101562001e3557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062008447565b005b62001e9d6004803603602081101562001e8657600080fd5b810190808035906020019092919050505062008d58565b6040518082815260200191505060405180910390f35b62001ee46004803603602081101562001ecb57600080fd5b8101908080351515906020019092919050505062008da4565b005b62001ef0620095d8565b6040518082815260200191505060405180910390f35b62001f556004803603604081101562001f1e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620095fc565b005b62001f6162009e4e565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6200214e600480360360e081101562001fcd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200204b57600080fd5b8201836020820111156200205e57600080fd5b803590602001918460018302840111640100000000831117156200208157600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620020af57600080fd5b820183602082011115620020c257600080fd5b80359060200191846020830284011164010000000083111715620020e557600080fd5b9091929391929390803590602001906401000000008111156200210757600080fd5b8201836020820111156200211a57600080fd5b803590602001918460208302840111640100000000831117156200213d57600080fd5b909192939192939050505062009f48565b005b6200215a6200b38c565b005b620021666200b642565b005b62002197600480360360208110156200218057600080fd5b81019080803590602001909291905050506200b716565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200220860048036036020811015620021f157600080fd5b81019080803590602001909291905050506200b758565b005b62002239600480360360208110156200222257600080fd5b81019080803590602001909291905050506200b762565b005b6200226a600480360360208110156200225357600080fd5b81019080803590602001909291905050506200b88f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620022ac5780820151818401526020810190506200228f565b50505050905090810190601f168015620022da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200232d600480360360208110156200230057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200b8b2565b6040518082815260200191505060405180910390f35b6200234d6200b8fe565b6040518082815260200191505060405180910390f35b62002392600480360360208110156200237b57600080fd5b81019080803590602001909291905050506200b922565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620023d7578082015181840152602081019050620023ba565b505050509050019250505060405180910390f35b620023f56200b946565b6040518082815260200191505060405180910390f35b620024156200b953565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62002498600480360360208110156200248157600080fd5b81019080803590602001909291905050506200b99d565b6040518082815260200191505060405180910390f35b620024b86200b9c0565b6040518082815260200191505060405180910390f35b62002647600480360360c0811015620024e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200254457600080fd5b8201836020820111156200255757600080fd5b803590602001918460018302840111640100000000831117156200257a57600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620025a857600080fd5b820183602082011115620025bb57600080fd5b80359060200191846020830284011164010000000083111715620025de57600080fd5b9091929391929390803590602001906401000000008111156200260057600080fd5b8201836020820111156200261357600080fd5b803590602001918460208302840111640100000000831117156200263657600080fd5b90919293919293905050506200ba0a565b005b620026536200bcaa565b005b620026a4600480360360408110156200266d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200c3fb565b005b6200272d60048036036040811015620026be57600080fd5b810190808035906020019092919080359060200190640100000000811115620026e657600080fd5b820183602082011115620026f957600080fd5b803590602001918460208302840111640100000000831117156200271c57600080fd5b90919293919293905050506200cd12565b005b6200275e600480360360208110156200274757600080fd5b81019080803590602001909291905050506200cda9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620027a357808201518184015260208101905062002786565b505050509050019250505060405180910390f35b620027c16200ce88565b604051808260ff1660ff16815260200191505060405180910390f35b620027e76200ceb3565b6040518082815260200191505060405180910390f35b6200282c600480360360208110156200281557600080fd5b81019080803590602001909291905050506200ceb9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200287157808201518184015260208101905062002854565b505050509050019250505060405180910390f35b620028be600480360360408110156200289d57600080fd5b8101908080359060200190929190803590602001909291905050506200cedd565b005b620028ef60048036036020811015620028d857600080fd5b81019080803590602001909291905050506200cfc6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002976600480360360208110156200294957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200cfe9565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b62002a4660048036036040811015620029d757600080fd5b810190808035906020019092919080359060200190640100000000811115620029ff57600080fd5b82018360208201111562002a1257600080fd5b8035906020019184602083028401116401000000008311171562002a3557600080fd5b90919293919293905050506200d09b565b005b62002a526200d132565b6040518082815260200191505060405180910390f35b62002ae56004803603602081101562002a8057600080fd5b810190808035906020019064010000000081111562002a9e57600080fd5b82018360208201111562002ab157600080fd5b8035906020019184600183028401116401000000008311171562002ad457600080fd5b90919293919293905050506200d17c565b005b62002af16200d34b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002b3357808201518184015260208101905062002b16565b50505050905090810190601f16801562002b615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62002b796200d4f4565b604051808215151515815260200191505060405180910390f35b62002b9d6200d50b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002be96200d535565b6040518082815260200191505060405180910390f35b62002c2e6004803603602081101562002c1757600080fd5b81019080803590602001909291905050506200d559565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562002c7357808201518184015260208101905062002c56565b505050509050019250505060405180910390f35b62002cb66004803603602081101562002c9f57600080fd5b81019080803590602001909291905050506200d57d565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008c8c90501462002d726200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002dd557808201518184015260208101905062002db8565b50505050905090810190601f16801562002e035780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252603881526020018062011e70603891396040019550505050505060006040518083038186803b15801562002e7057600080fd5b505af415801562002e85573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b8b90508a1162002eb36200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002f1657808201518184015260208101905062002ef9565b50505050905090810190601f16801562002f445780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252604b81526020018062011794604b91396060019550505050505060006040518083038186803b15801562002fb157600080fd5b505af415801562002fc6573d6000803e3d6000fd5b5050505086600c8190555089896013919062002fe49291906200fc13565b50876011819055508585600e919062002fff9291906200fcb8565b508383600f9190620030139291906200fcb8565b50818160109190620030279291906200fcb8565b5062003032620064c8565b3073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000600c546040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015620030b057600080fd5b505af1158015620030c5573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c204f70656e7320417400000000000000000000000000000000600e6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620031aa5780601f106200317e57610100808354040283529160200191620031aa565b820191906000526020600020905b8154815290600101906020018083116200318c57829003601f168201915b50509350505050600060405180830381600087803b158015620031cc57600080fd5b505af1158015620031e1573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c20436c6f736573204174000000000000000000000000000000600f6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620032c65780601f106200329a57610100808354040283529160200191620032c6565b820191906000526020600020905b815481529060010190602001808311620032a857829003601f168201915b50509350505050600060405180830381600087803b158015620032e857600080fd5b505af1158015620032fd573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f457874656e642045787069726174696f6e20427900000000000000000000000060106040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620033e25780601f10620033b657610100808354040283529160200191620033e2565b820191906000526020600020905b815481529060010190602001808311620033c457829003601f168201915b50509350505050600060405180830381600087803b1580156200340457600080fd5b505af115801562003419573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fa4607fdd9293c6f4b8b00c658e9537cb8c9962323efb992b43517d29d462fff730600c54601154600e600f6010604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018060200180602001806020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200353f5780601f1062003513576101008083540402835291602001916200353f565b820191906000526020600020905b8154815290600101906020018083116200352157829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620035c65780601f106200359a57610100808354040283529160200191620035c6565b820191906000526020600020905b815481529060010190602001808311620035a857829003601f168201915b50508481038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200364d5780601f1062003621576101008083540402835291602001916200364d565b820191906000526020600020905b8154815290600101906020018083116200362f57829003601f168201915b5050995050505050505050505060405180910390a250505050505050505050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000601260019054906101000a900460ff16905090565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156200378857600080fd5b505af41580156200379d573d6000803e3d6000fd5b505050506040513d6020811015620037b457600080fd5b8101908080519060200190929190505050505050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200386d57600080fd5b505af415801562003882573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015620038ad57600080fd5b8101908080516040519392919084640100000000821115620038ce57600080fd5b83820191506020820185811115620038e557600080fd5b82518660018202830111640100000000821117156200390357600080fd5b8083526020830192505050908051906020019080838360005b83811015620039395780820151818401526020810190506200391c565b50505050905090810190601f168015620039675780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601c80549050905090565b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80601660156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b7f41677265656d656e74204566666563746976652044617465000000000000000081565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff16801562003af9575081601d600085815260200190815260200160002060000180549050115b1562003b5457601d6000848152602001908152602001600020600001828154811062003b2157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062003b59565b600090505b92915050565b62003b696200fd3f565b8381600001818152505062003b7d6200d6e5565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525062003bf18160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b62003cc26200fd3f565b8281600001818152505062003cd66200dfde565b816020019060ff16908160ff16815250508181604001901515908115158152505062003d0d8160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b600062003dc38260036200dfe790919063ffffffff16565b60e001519050919050565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff16156200407157601d600084815260200190815260200160002060010160009054906101000a900460ff1662003ecb576000601d60008581526020019081526020016000206000018054905011801562003ec557508173ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000160008154811062003e8257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6200406e565b601d600084815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801562003f6357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003f18575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200400b57808201518184015260208101905062003fee565b50505050905001935050505060206040518083038186803b1580156200403057600080fd5b505af415801562004045573d6000803e3d6000fd5b505050506040513d60208110156200405c57600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156200411357600080fd5b505af415801562004128573d6000803e3d6000fd5b505050506040513d60208110156200413f57600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015620041d357600080fd5b505af4158015620041e8573d6000803e3d6000fd5b505050506040513d6040811015620041ff57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620042766200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620042d9578082015181840152602081019050620042bc565b50505050905090810190601f168015620043075780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e282900000081525060200184810382526024815260200180620119bc602491396040019550505050505060006040518083038186803b1580156200437457600080fd5b505af415801562004389573d6000803e3d6000fd5b505050506000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415620048e05781601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200461157600080fd5b505af415801562004626573d6000803e3d6000fd5b505050506040513d60208110156200463d57600080fd5b810190808051906020019092919050505015620048df576000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050141562004790576002601660196101000a81548160ff02191690836007811115620046dd57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930601660199054906101000a900460ff1660078111156200474157fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25b60003073ffffffffffffffffffffffffffffffffffffffff166335ce1bd17f41677265656d656e7420456666656374697665204461746500000000000000006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200480457600080fd5b505afa15801562004819573d6000803e3d6000fd5b505050506040513d60208110156200483057600080fd5b81019080805190602001909291905050501415620048de573073ffffffffffffffffffffffffffffffffffffffff1663f3420d1a7f41677265656d656e742045666665637469766520446174650000000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015620048c457600080fd5b505af1158015620048d9573d6000803e3d6000fd5b505050505b5b5b5050565b6000620048fc8260036200dfe790919063ffffffff16565b604001519050919050565b60606200491f8260036200dfe790919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200498857600080fd5b505af41580156200499d573d6000803e3d6000fd5b505050506040513d6020811015620049b457600080fd5b81019080805190602001909291905050509050919050565b6000620049e48260036200dfe790919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801562004a4c57600080fd5b505af415801562004a61573d6000803e3d6000fd5b505050506040513d604081101562004a7857600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001209050600060056000838152602001908152602001600020600101600101541462004b4857600560008281526020019081526020016000206001016001015491505062004edd565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff161562004edb57600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562004d565773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161462004c3e6200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004ca157808201518184015260208101905062004c84565b50505050905090810190601f16801562004ccf5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018062011d40606591396080019550505050505060006040518083038186803b15801562004d3c57600080fd5b505af415801562004d51573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801562004df657600080fd5b505af415801562004e0b573d6000803e3d6000fd5b505050506040513d604081101562004e2257600080fd5b810190808051906020019092919080519060200190929190505050915091508173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562004e9357600080fd5b505afa15801562004ea8573d6000803e3d6000fd5b505050506040513d602081101562004ebf57600080fd5b8101908080519060200190929190505050935050505062004edd565b505b9392505050565b60008060608060606011549450600c549350600e8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562004f905780601f1062004f645761010080835404028352916020019162004f90565b820191906000526020600020905b81548152906001019060200180831162004f7257829003601f168201915b50505050509250600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620050315780601f10620050055761010080835404028352916020019162005031565b820191906000526020600020905b8154815290600101906020018083116200501357829003601f168201915b5050505050915060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620050d25780601f10620050a657610100808354040283529160200191620050d2565b820191906000526020600020905b815481529060010190602001808311620050b457829003601f168201915b505050505090509091929394565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015620051b557600080fd5b505af4158015620051ca573d6000803e3d6000fd5b505050506040513d6020811015620051e157600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200530a57600080fd5b505af41580156200531f573d6000803e3d6000fd5b505050506040513d60208110156200533657600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200544457600080fd5b505af415801562005459573d6000803e3d6000fd5b505050506040513d60208110156200547057600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b60006002600060038110620055cb57fe5b602091828204019190069054906101000a900460ff16905090565b620055f28133620036ec565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62005662833362003dce565b156200566d6200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620056d0578082015181840152602081019050620056b3565b50505050905090810190601f168015620056fe5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011648602b91396040018481038252603481526020018062011734603491396040019550505050505060006040518083038186803b1580156200574f57600080fd5b505af415801562005764573d6000803e3d6000fd5b5050505081601660196101000a81548160ff021916908360078111156200578757fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930601660199054906101000a900460ff166007811115620057eb57fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a25050565b6000601660199054906101000a900460ff1660078111156200585b57fe5b905090565b6000601660159054906101000a900463ffffffff16905090565b6000620059766002600380602002604051908101604052809291908260038015620058e1576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620058a95790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156200592d57600080fd5b505afa15801562005942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156200596857600080fd5b81019080919050506200eeea565b9050919050565b6000806000806000601d600087815260200190815260200160002060010160039054906101000a900460ff169450841562005a4157601d600087815260200190815260200160002060010160009054906101000a900460ff169350601d600087815260200190815260200160002060010160019054906101000a900460ff169250601d600087815260200190815260200160002060010160029054906101000a900460ff169150601d60008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b62005a636200fd3f565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610120018190525062005ac26200efad565b816020019060ff16908160ff168152505062005ae98160036200d6ee90919063ffffffff16565b5050505050565b62005afa6200fd3f565b8281600001818152505062005b0e6200efb6565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505062005b6d8160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b600060138054905082101562005c84576013828154811062005c5157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062005c85565b5b919050565b62005c946200fd3f565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c0018190525062005cf36200efbf565b816020019060ff16908160ff168152505062005d1a8160036200d6ee90919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161462005d756200efc8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005dd857808201518184015260208101905062005dbb565b50505050905090810190601f16801562005e065780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018062011e0b603591396040019550505050505060006040518083038186803b15801562005e7357600080fd5b505af415801562005e88573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008614801562005eb75750600085145b62005ec16200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005f2457808201518184015260208101905062005f07565b50505050905090810190601f16801562005f525780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f70650000815250602001848103825260368152602001806201195d603691396040019550505050505060006040518083038186803b15801562005fbf57600080fd5b505af415801562005fd4573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff16620060905760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514620061305784600560008381526020019081526020016000206001016001018190555062006202565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b62006376813362004077565b50565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015620063cf57602002820191906000526020600020905b815481526020019060010190808311620063ba575b5050505050905090565b60085481565b620063e96200fd3f565b82816000018181525050620063fd6200f005565b816020019060ff16908160ff1681525050818160a00181815250506200642e8160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff16620064fc6200f016565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200655f57808201518184015260208101905062006542565b50505050905090810190601f1680156200658d5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f416273747261637452656e657761626c652e7265736574566f746573282900008152506020018481038252602f81526020018062011ac0602f91396040019550505050505060006040518083038186803b158015620065fa57600080fd5b505af41580156200660f573d6000803e3d6000fd5b5050505060008090505b601380549050811015620069e6576000601382815481106200663757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f76c512528b3348a170fce985b7603a2ba143bdf1e4645153b4d2952e99573e093083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a250808060010191505062006619565b50620069f16200f053565b565b620069fd6200fe54565b600260038060200260405190810160405280929190826003801562006a5e576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162006a265790505b5050505050905090565b6000600260016003811062006a7957fe5b602091828204019190069054906101000a900460ff16905090565b600062006b07600260038060200260405190810160405280929190826003801562006afb576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162006ac35790505b5050505050836200eeea565b9050919050565b6000601b8054905082101562006b5f57601b828154811062006b2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062006b60565b5b919050565b6000601b80549050905090565b600080600090505b601b8054905081101562006c70578273ffffffffffffffffffffffffffffffffffffffff1660196000601b848154811062006bb157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562006c6257600191505062006c76565b808060010191505062006b7a565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b6000806000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169150601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490509193909250565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff1662006e356200f1d3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562006e9857808201518184015260208101905062006e7b565b50505050905090810190601f16801562006ec65780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011c8c603291396040018481038252603f815260200180620118fa603f91396040019550505050505060006040518083038186803b15801562006f1757600080fd5b505af415801562006f2c573d6000803e3d6000fd5b50505050601d600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462006fc8578162006fca565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b600080601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000018054905011620072755760006200730a565b601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001600081548110620072de57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b620073196200fd3f565b828160000181815250506200732d6200f210565b816020019060ff16908160ff1681525050818160e00181815250506200735e8160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b6000601260009054906101000a900460ff16905090565b601260009054906101000a900460ff16620074e7576001601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f38afd8082def1261a99c6531cd2d0f21a60d79baec07015b980d61457b75243430601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a25b565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6007808111156200755c57fe5b601660199054906101000a900460ff1660078111156200757857fe5b14620075836200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620075e6578082015181840152602081019050620075c9565b50505050905090810190601f168015620076145780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018062011c62602a91396040019550505050505060006040518083038186803b1580156200768157600080fd5b505af415801562007696573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015620076e357600080fd5b505afa158015620076f8573d6000803e3d6000fd5b505050506040513d60208110156200770f57600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490508015801562007868575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8783620077846200f219565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b1580156200782a57600080fd5b505af41580156200783f573d6000803e3d6000fd5b505050506040513d60208110156200785657600080fd5b81019080805190602001909291905050505b156200792f578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160200191505060206040518083038186803b158015620078ef57600080fd5b505afa15801562007904573d6000803e3d6000fd5b505050506040513d60208110156200791b57600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215620079556200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620079b85780820151818401526020810190506200799b565b50505050905090810190601f168015620079e65780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e8152602001806201180b602e91396040019550505050505060006040518083038186803b15801562007a5357600080fd5b505af415801562007a68573d6000803e3d6000fd5b5050505060006005600781111562007a7c57fe5b601660199054906101000a900460ff16600781111562007a9857fe5b1415801562007acf57506003600781111562007ab057fe5b601660199054906101000a900460ff16600781111562007acc57fe5b14155b801562007b0457506004600781111562007ae557fe5b601660199054906101000a900460ff16600781111562007b0157fe5b14155b9050801562007c5c5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000601b805490501162007b3a6200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007b9d57808201518184015260208101905062007b80565b50505050905090810190601f16801562007bcb5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018062011839604d91396060019550505050505060006040518083038186803b15801562007c3857600080fd5b505af415801562007c4d573d6000803e3d6000fd5b5050505062007c5b6200f334565b5b6007601660196101000a81548160ff0219169083600781111562007c7c57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930601660199054906101000a900460ff16600781111562007ce057fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a262007d5a7f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f434565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2601660199054906101000a900460ff16935050505090565b62007e096200fd3f565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610200018190525062007e686200f562565b816020019060ff16908160ff168152505062007e8f8160036200d6ee90919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62007f03833362003dce565b1562007f0e6200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007f7157808201518184015260208101905062007f54565b50505050905090810190601f16801562007f9f5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011648602b91396040018481038252603481526020018062011734603491396040019550505050505060006040518083038186803b15801562007ff057600080fd5b505af415801562008005573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600088815260200190815260200160002060010160039054906101000a900460ff16620080516200f56b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620080b457808201518184015260208101905062008097565b50505050905090810190601f168015620080e25780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c3d602591396040018481038252603481526020018062011ea8603491396040019550505050505060006040518083038186803b1580156200813357600080fd5b505af415801562008148573d6000803e3d6000fd5b5050505083601d600087815260200190815260200160002060010160006101000a81548160ff02191690831515021790555082601d600087815260200190815260200160002060010160016101000a81548160ff02191690831515021790555081601d600087815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b6000806000806200827a8686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001206200d57d565b90919293945090919293508094508195508296508397505050505092959194509250565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200834157600080fd5b505af415801562008356573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200838157600080fd5b8101908080516040519392919084640100000000821115620083a257600080fd5b83820191506020820185811115620083b957600080fd5b8251866001820283011164010000000082111715620083d757600080fd5b8083526020830192505050908051906020019080838360005b838110156200840d578082015181840152602081019050620083f0565b50505050905090810190601f1680156200843b5780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015620084ed5750620084eb60405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001203362003dce565b155b620084f76200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200855a5780820151818401526020810190506200853d565b50505050905090810190601f168015620085885780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011b24602591396040018481038252603481526020018062011734603491396040019550505050505060006040518083038186803b158015620085d957600080fd5b505af4158015620085ee573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200863b6200f5a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200869e57808201518184015260208101905062008681565b50505050905090810190601f168015620086cc5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011b246025913960400184810382526039815260200180620115d2603991396040019550505050505060006040518083038186803b1580156200871d57600080fd5b505af415801562008732573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160019054906101000a900460ff16156200877f6200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620087e2578082015181840152602081019050620087c5565b50505050905090810190601f168015620088105780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011b24602591396040018481038252602981526020018062011993602991396040019550505050505060006040518083038186803b1580156200886157600080fd5b505af415801562008876573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120841480156200894957506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b620089536200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620089b657808201518184015260208101905062008999565b50505050905090810190601f168015620089e45780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011b24602591396040018481038252602d81526020018062011c10602d91396040019550505050505060006040518083038186803b15801562008a3557600080fd5b505af415801562008a4a573d6000803e3d6000fd5b50505050600080600090505b601d60008581526020019081526020016000206000018054905081101562008c05578273ffffffffffffffffffffffffffffffffffffffff16601d6000868152602001908152602001600020600001828154811062008ab157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562008bf7576001915060008190505b6001601d6000878152602001908152602001600020600001805490500381101562008bf057601d6000868152602001908152602001600020600001600182018154811062008b4d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601d6000878152602001908152602001600020600001828154811062008b9a57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808060010191505062008b03565b5062008c05565b808060010191505062008a56565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef821562008c2c6200f5a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008c8f57808201518184015260208101905062008c72565b50505050905090810190601f16801562008cbd5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011b24602591396040018481038252603081526020018062011e40603091396040019550505050505060006040518083038186803b15801562008d0e57600080fd5b505af415801562008d23573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060000180548091906001900362008d5291906200fe76565b50505050565b60007f41475245454d454e545f5041525449455300000000000000000000000000000082141562008d9157601b80549050905062008d9f565b62008d9c826200f5e5565b90505b919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff161562008dd96200f016565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008e3c57808201518184015260208101905062008e1f565b50505050905090810190601f16801562008e6a5780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252602381526020018062011bcc602391396040019550505050505060006040518083038186803b15801562008ed757600080fd5b505af415801562008eec573d6000803e3d6000fd5b5050505060008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801562008f6e57600080fd5b505af415801562008f83573d6000803e3d6000fd5b505050506040513d604081101562008f9a57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620090116200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200907457808201518184015260208101905062009057565b50505050905090810190601f168015620090a25780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252603081526020018062011ce1603091396040019550505050505060006040518083038186803b1580156200910f57600080fd5b505af415801562009124573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156200919d6200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009200578082015181840152602081019050620091e3565b50505050905090810190601f1680156200922e5780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252604281526020018062011886604291396060019550505050505060006040518083038186803b1580156200929b57600080fd5b505af4158015620092b0573d6000803e3d6000fd5b5050505081601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555042601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f51b47958068fc9bea1acf9a821d66c2e1bd06eb6261035948b9185300cbcac5b3083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a2620095d36200f053565b505050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62009669833362003dce565b15620096746200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620096d7578082015181840152602081019050620096ba565b50505050905090810190601f168015620097055780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011648602b91396040018481038252603481526020018062011734603491396040019550505050505060006040518083038186803b1580156200975657600080fd5b505af41580156200976b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600086815260200190815260200160002060010160039054906101000a900460ff1615620097b86200f5a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200981b578082015181840152602081019050620097fe565b50505050905090810190601f168015620098495780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620115ae6024913960400184810382526039815260200180620115d2603991396040019550505050505060006040518083038186803b1580156200989a57600080fd5b505af4158015620098af573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060010160009054906101000a900460ff161562009b0557601d60008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200997557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200992a575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b8381101562009a1d57808201518184015260208101905062009a00565b50505050905001935050505060206040518083038186803b15801562009a4257600080fd5b505af415801562009a57573d6000803e3d6000fd5b505050506040513d602081101562009a6e57600080fd5b810190808051906020019092919050505062009aff57601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b62009e49565b6000601d600085815260200190815260200160002060000180549050141562009ba857601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062009e48565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369962009bcc6200f1d3565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009c2557808201518184015260208101905062009c08565b50505050905090810190601f16801562009c535780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620115ae6024913960400184810382526083815260200180620114ff6083913960a00194505050505060006040518083038186803b15801562009ca357600080fd5b505af415801562009cb8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562009ce357600080fd5b810190808051604051939291908464010000000082111562009d0457600080fd5b8382019150602082018581111562009d1b57600080fd5b825186600182028301116401000000008211171562009d3957600080fd5b8083526020830192505050908051906020019080838360005b8381101562009d6f57808201518184015260208101905062009d52565b50505050905090810190601f16801562009d9d5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562009e0c57808201518184015260208101905062009def565b50505050905090810190601f16801562009e3a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808062011f7d60259139602501905060405160208183030381529060405280519060200120604051602001808062011b70602791396027019050604051602081830303815290604052805190602001206040516020018080620117df602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011a06604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff1662009f7c6200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009fdf57808201518184015260208101905062009fc2565b50505050905090810190601f1680156200a00d5780820380516001836020036101000a031916815260200191505b508481038352602a815260200180620114d5602a9139604001848103825260298152602001806201170b602991396040019550505050505060006040518083038186803b1580156200a05e57600080fd5b505af41580156200a073573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16146200a0cb6200efc8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a12e5780820151818401526020810190506200a111565b50505050905090810190601f1680156200a15c5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011f5c602191396040018481038252602e81526020018062011f2e602e91396040019550505050505060006040518083038186803b1580156200a1ad57600080fd5b505af41580156200a1c2573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146200a21a6200efc8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a27d5780820151818401526020810190506200a260565b50505050905090810190601f1680156200a2ab5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011f5c602191396040018481038252602c81526020018062011582602c91396040019550505050505060006040518083038186803b1580156200a2fc57600080fd5b505af41580156200a311573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16146200a3696200efc8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a3cc5780820151818401526020810190506200a3af565b50505050905090810190601f1680156200a3fa5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011f5c602191396040018481038252602381526020018062011cbe602391396040019550505050505060006040518083038186803b1580156200a44b57600080fd5b505af41580156200a460573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200a4c557600080fd5b505afa1580156200a4da573d6000803e3d6000fd5b505050506040513d60208110156200a4f157600080fd5b8101908080519060200190929190505050156200a50d6200f016565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a5705780820151818401526020810190506200a553565b50505050905090810190601f1680156200a59e5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011f5c60219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b1580156200a60b57600080fd5b505af41580156200a620573d6000803e3d6000fd5b505050506200a793828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b1580156200a6b157600080fd5b505afa1580156200a6c6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200a6f157600080fd5b81019080805160405193929190846401000000008211156200a71257600080fd5b838201915060208201858111156200a72957600080fd5b82518660208202830111640100000000821117156200a74757600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200a7805780820151818401526020810190506200a763565b505050509050016040525050506200f686565b6200a89460405160200180807f6765744164647265737353636f70654b65797328290000000000000000000000815250601501905060405160208183030381529060405280519060200120604051602001808062011f7d60259139602501905060405160208183030381529060405280519060200120604051602001808062011b70602791396027019050604051602081830303815290604052805190602001206040516020018080620117df602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011a0660409139604001905060405160208183030381529060405280519060200120181818186200fa93565b89601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008787905011156200aa3757601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200a9f857600080fd5b505af41580156200aa0d573d6000803e3d6000fd5b505050506040513d60208110156200aa2457600080fd5b8101908080519060200190929190505050505b84601660146101000a81548160ff0219169083151502179055508383601b91906200aa649291906200fc13565b508181601c91906200aa789291906200fc13565b506001601660196101000a81548160ff021916908360078111156200aa9957fe5b02179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816200acdd91906200fe76565b5087601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106200ad4857fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c601660199054906101000a900460ff1660078111156200afc957fe5b601660159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b848490508110156200b265577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc308787858181106200b18957fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a280806001019150506200b12d565b600090505b828290508110156200b365577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd308585858181106200b2c657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a280806001019150506200b26a565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b601260009054906101000a900460ff16156200b640576000601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fd999895ef4e74c2e812b1770fc1d6fb3b5cd235ba2acb0429f95846e6ca99a6f30601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a2601260019054906101000a900460ff16156200b63f5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600d54146200b4a46200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200b5075780820151818401526020810190506200b4ea565b50505050905090810190601f1680156200b5355780820380516001836020036101000a031916815260200191505b508481038352602481526020018062011939602491396040018481038252603d8152602001806201160b603d91396040019550505050505060006040518083038186803b1580156200b58657600080fd5b505af41580156200b59b573d6000803e3d6000fd5b50505050600d54600c819055506000600d819055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c30600c54604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a25b5b565b6003601660196101000a81548160ff021916908360078111156200b66257fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930601660199054906101000a900460ff1660078111156200b6c657fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a2565b6000601c82815481106200b72657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600d8190555050565b80600c819055503073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b7e557600080fd5b505af11580156200b7fa573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c30600c54604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a250565b60606200b8a78260036200dfe790919063ffffffff16565b606001519050919050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b60606200b93a8260036200dfe790919063ffffffff16565b61014001519050919050565b6000601380549050905090565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006200b9b58260036200dfe790919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ba2e6200f2f7565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200ba875780820151818401526020810190506200ba6a565b50505050905090810190601f1680156200bab55780820380516001836020036101000a031916815260200191505b508481038352605281526020018062011edc6052913960600184810382526098815260200180620116736098913960a00194505050505060006040518083038186803b1580156200bb0557600080fd5b505af41580156200bb1a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200bb4557600080fd5b81019080805160405193929190846401000000008211156200bb6657600080fd5b838201915060208201858111156200bb7d57600080fd5b82518660018202830111640100000000821117156200bb9b57600080fd5b8083526020830192505050908051906020019080838360005b838110156200bbd15780820151818401526020810190506200bbb4565b50505050905090810190601f1680156200bbff5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200bc6e5780820151818401526020810190506200bc51565b50505050905090810190601f1680156200bc9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200bd2857600080fd5b505af41580156200bd3d573d6000803e3d6000fd5b505050506040513d60408110156200bd5457600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146200bdc76200eead565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200be2a5780820151818401526020810190506200be0d565b50505050905090810190601f1680156200be585780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011bef6021913960400184810382526026815260200180620119e0602691396040019550505050505060006040518083038186803b1580156200bea957600080fd5b505af41580156200bebe573d6000803e3d6000fd5b50505050600060078111156200bed057fe5b601660199054906101000a900460ff1660078111156200beec57fe5b14806200bf205750600160078111156200bf0257fe5b601660199054906101000a900460ff1660078111156200bf1e57fe5b145b156200c0f25781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200bff86200f334565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26200c3f7565b600260078111156200c10057fe5b601660199054906101000a900460ff1660078111156200c11c57fe5b14156200c3f6576000601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3f55781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b601b805490508110156200c3f3576000601a6000601b84815481106200c35357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3c9576200c3f3565b6001601b80549050038114156200c3e5576200c3e46200f334565b5b80806001019150506200c331565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200c4446200f5a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c4a75780820151818401526020810190506200c48a565b50505050905090810190601f1680156200c4d55780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011b496027913960400184810382526039815260200180620115d2603991396040019550505050505060006040518083038186803b1580156200c52657600080fd5b505af41580156200c53b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160029054906101000a900460ff16156200c5886200f2f7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c5eb5780820151818401526020810190506200c5ce565b50505050905090810190601f1680156200c6195780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011b49602791396040018481038252602c81526020018062011768602c91396040019550505050505060006040518083038186803b1580156200c66a57600080fd5b505af41580156200c67f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d60008581526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200c73557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200c6ea575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200c7dd5780820151818401526020810190506200c7c0565b50505050905001935050505060206040518083038186803b1580156200c80257600080fd5b505af41580156200c817573d6000803e3d6000fd5b505050506040513d60208110156200c82e57600080fd5b81019080805190602001909291905050506200c8496200f56b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c8ac5780820151818401526020810190506200c88f565b50505050905090810190601f1680156200c8da5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011b49602791396040018481038252603581526020018062011aef603591396040019550505050505060006040518083038186803b1580156200c92b57600080fd5b505af41580156200c940573d6000803e3d6000fd5b5050505060008090505b601d6000848152602001908152602001600020600001805490508110156200ca6d573373ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000182815481106200c9a557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200ca5f5781601d600085815260200190815260200160002060000182815481106200ca1057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200cd0e565b80806001019150506200c94a565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ca926200eead565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200caeb5780820151818401526020810190506200cace565b50505050905090810190601f1680156200cb195780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011b49602791396040018481038252603581526020018062011b976035913960400194505050505060006040518083038186803b1580156200cb6957600080fd5b505af41580156200cb7e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200cba957600080fd5b81019080805160405193929190846401000000008211156200cbca57600080fd5b838201915060208201858111156200cbe157600080fd5b82518660018202830111640100000000821117156200cbff57600080fd5b8083526020830192505050908051906020019080838360005b838110156200cc355780820151818401526020810190506200cc18565b50505050905090810190601f1680156200cc635780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200ccd25780820151818401526020810190506200ccb5565b50505050905090810190601f1680156200cd005780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b6200cd1c6200fd3f565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161040001819052506200cd7b6200fb80565b816020019060ff16908160ff16815250506200cda28160036200d6ee90919063ffffffff16565b5050505050565b60607f41475245454d454e545f504152544945530000000000000000000000000000008214156200ce6557601b8054806020026020016040519081016040528092919081815260200182805480156200ce5857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200ce0d575b505050505090506200ce83565b6200ce7b8260036200dfe790919063ffffffff16565b610120015190505b919050565b6000600280600381106200ce9857fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b60606200ced18260036200dfe790919063ffffffff16565b6102c001519050919050565b6200cee76200fd3f565b828160000181815250506200cefb6200fb89565b816020019060ff16908160ff1681525050818160800181815250506200cf2c8160036200d6ee90919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60006200cfde8260036200dfe790919063ffffffff16565b60c001519050919050565b600080601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6200d0a56200fd3f565b838160000181815250506200d0b96200fb9a565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161014001819052506200d12b8160036200d6ee90919063ffffffff16565b5050505050565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200d25157600080fd5b505af41580156200d266573d6000803e3d6000fd5b505050506040513d60208110156200d27d57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200d3ee57600080fd5b505af41580156200d403573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200d42e57600080fd5b81019080805160405193929190846401000000008211156200d44f57600080fd5b838201915060208201858111156200d46657600080fd5b82518660018202830111640100000000821117156200d48457600080fd5b8083526020830192505050908051906020019080838360005b838110156200d4ba5780820151818401526020810190506200d49d565b50505050905090810190601f1680156200d4e85780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601660149054906101000a900460ff16905090565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b60606200d5718260036200dfe790919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff16156200d69f576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff16156200db355781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200d7a69291906200fea5565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200d82b9291906200ff2c565b506101208201518160080190805190602001906200d84b9291906200ff93565b506101408201518160090190805190602001906200d86b92919062010022565b5061016082015181600a0190805190602001906200d88b929190620100cf565b5061018082015181600b0190805190602001906200d8ab9291906201017d565b506101a082015181600c0190805190602001906200d8cb9291906201022e565b506101c082015181600d0190805190602001906200d8eb929190620102e5565b506101e082015181600e0190805190602001906200d90b929190620103a8565b5061020082015181600f0190805190602001906200d92b92919062010483565b506102208201518160100190805190602001906200d94b929190620104d5565b506102408201518160110190805190602001906200d96b92919062010586565b506102608201518160120190805190602001906200d98b9291906201063a565b506102808201518160130190805190602001906200d9ab929190620106f4565b506102a08201518160140190805190602001906200d9cb929190620107ba565b506102c08201518160150190805190602001906200d9eb92919062010898565b506102e08201518160160190805190602001906200da0b929190620108ea565b506103008201518160170190805190602001906200da2b92919062010998565b506103208201518160180190805190602001906200da4b92919062010a48565b506103408201518160190190805190602001906200da6b92919062010afa565b5061036082015181601a0190805190602001906200da8b92919062010bae565b5061038082015181601b0190805190602001906200daab92919062010c6a565b506103a082015181601c0190805190602001906200dacb92919062010d36565b506103c082015181601d0190805190602001906200daeb92919062010db2565b506103e082015181601e0190805190602001906200db0b92919062010e32565b5061040082015181601f0190805190602001906200db2b92919062010eb6565b509050506200dfce565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200dc0f9291906200fea5565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200dc949291906200ff2c565b506101208201518160080190805190602001906200dcb49291906200ff93565b506101408201518160090190805190602001906200dcd492919062010022565b5061016082015181600a0190805190602001906200dcf4929190620100cf565b5061018082015181600b0190805190602001906200dd149291906201017d565b506101a082015181600c0190805190602001906200dd349291906201022e565b506101c082015181600d0190805190602001906200dd54929190620102e5565b506101e082015181600e0190805190602001906200dd74929190620103a8565b5061020082015181600f0190805190602001906200dd9492919062010483565b506102208201518160100190805190602001906200ddb4929190620104d5565b506102408201518160110190805190602001906200ddd492919062010586565b506102608201518160120190805190602001906200ddf49291906201063a565b506102808201518160130190805190602001906200de14929190620106f4565b506102a08201518160140190805190602001906200de34929190620107ba565b506102c08201518160150190805190602001906200de5492919062010898565b506102e08201518160160190805190602001906200de74929190620108ea565b506103008201518160170190805190602001906200de9492919062010998565b506103208201518160180190805190602001906200deb492919062010a48565b506103408201518160190190805190602001906200ded492919062010afa565b5061036082015181601a0190805190602001906200def492919062010bae565b5061038082015181601b0190805190602001906200df1492919062010c6a565b506103a082015181601c0190805190602001906200df3492919062010d36565b506103c082015181601d0190805190602001906200df5492919062010db2565b506103e082015181601e0190805190602001906200df7492919062010e32565b5061040082015181601f0190805190602001906200df9492919062010eb6565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b6200dff16200fd3f565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e0f45780601f106200e0c8576101008083540402835291602001916200e0f4565b820191906000526020600020905b8154815290600101906020018083116200e0d657829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156200e258578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e2435780601f106200e217576101008083540402835291602001916200e243565b820191906000526020600020905b8154815290600101906020018083116200e22557829003601f168201915b5050505050815260200190600101906200e196565b505050508152602001600882018054806020026020016040519081016040528092919081815260200182805480156200e2e757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200e29c575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156200e36657602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116200e32f5790505b50505050508152602001600a82018054806020026020016040519081016040528092919081815260200182805480156200e3e657602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200e3ae5790505b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156200e46857602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116200e42e5790505b50505050508152602001600c82018054806020026020016040519081016040528092919081815260200182805480156200e4ee57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116200e4b05790505b50505050508152602001600d82018054806020026020016040519081016040528092919081815260200182805480156200e57c57602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff16815260200190600801906020826007010492830192600103820291508084116200e5365790505b50505050508152602001600e82018054806020026020016040519081016040528092919081815260200182805480156200e61a57602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116200e5c45790505b50505050508152602001600f82018054806020026020016040519081016040528092919081815260200182805480156200e67457602002820191906000526020600020905b8154815260200190600101908083116200e65f575b50505050508152602001601082018054806020026020016040519081016040528092919081815260200182805480156200e6f457602002820191906000526020600020906000905b82829054906101000a900460000b60000b815260200190600101906020826000010492830192600103820291508084116200e6bc5790505b50505050508152602001601182018054806020026020016040519081016040528092919081815260200182805480156200e77457602002820191906000526020600020906000905b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116200e73c5790505b50505050508152602001601282018054806020026020016040519081016040528092919081815260200182805480156200e7f457602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116200e7bc5790505b50505050508152602001601382018054806020026020016040519081016040528092919081815260200182805480156200e87457602002820191906000526020600020906000905b82829054906101000a900460070b60070b815260200190600801906020826007010492830192600103820291508084116200e83c5790505b50505050508152602001601482018054806020026020016040519081016040528092919081815260200182805480156200e8f457602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116200e8bc5790505b50505050508152602001601582018054806020026020016040519081016040528092919081815260200182805480156200e94e57602002820191906000526020600020905b8154815260200190600101908083116200e939575b50505050508152602001601682018054806020026020016040519081016040528092919081815260200182805480156200e9ed57602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600101906020826000010492830192600103820291508084116200e9965790505b50505050508152602001601782018054806020026020016040519081016040528092919081815260200182805480156200ea8b57602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600201906020826001010492830192600103820291508084116200ea355790505b50505050508152602001601882018054806020026020016040519081016040528092919081815260200182805480156200eb2857602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600301906020826002010492830192600103820291508084116200ead35790505b50505050508152602001601982018054806020026020016040519081016040528092919081815260200182805480156200ebc457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200eb705790505b50505050508152602001601a82018054806020026020016040519081016040528092919081815260200182805480156200ec5c57602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600801906020826007010492830192600103820291508084116200ec0c5790505b50505050508152602001601b82018054806020026020016040519081016040528092919081815260200182805480156200ecec57602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f010492830192600103820291508084116200eca45790505b50505050508152602001601c82018054806020026020016040519081016040528092919081815260200182805480156200ed6257602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff1916815260200190600101908083116200ed31575b50505050508152602001601d82018054806020026020016040519081016040528092919081815260200182805480156200edd457602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff1916815260200190600101908083116200eda7575b50505050508152602001601e82018054806020026020016040519081016040528092919081815260200182805480156200ee4257602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff1916815260200190600101908083116200ee19575b50505050508152602001601f82018054806020026020016040519081016040528092919081815260200182805480156200ee9c57602002820191906000526020600020905b8154815260200190600101908083116200ee87575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60006200ef1c836000600381106200eefe57fe5b6020020151836000600381106200ef1157fe5b60200201516200fba3565b9050600081146200ef30578090506200efa7565b6200ef60836001600381106200ef4257fe5b6020020151836001600381106200ef5557fe5b60200201516200fba3565b9050600081146200ef74578090506200efa7565b6200efa4836002600381106200ef8657fe5b6020020151836002600381106200ef9957fe5b60200201516200fba3565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006200f0116200fc01565b905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b600080905060008090505b6013805490508110156200f1115760146000601383815481106200f07e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16156200f1035781806001019250505b80806001019150506200f05e565b50601154811015601260016101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fb943efb3fc1da02bb1e14eed2ee64f5394e1f6f800ee4ea04c80cefe3a79bc7530601260019054906101000a900460ff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a250565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005601660196101000a81548160ff021916908360078111156200f35457fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007ff04560905c9eb2be1cd8992e0499230e4fbfea832fa01a52e9ce8f649e4c276930601660199054906101000a900460ff1660078111156200f3b857fe5b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390a26200f4327f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f434565b565b60008090505b600a6000016000848152602001908152602001600020600101805490508110156200f55d57600a600001600084815260200190815260200160002060010181815481106200f48457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200f53657600080fd5b505af11580156200f54b573d6000803e3d6000fd5b5050505080806001019150506200f43a565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200f64257600080fd5b505af41580156200f657573d6000803e3d6000fd5b505050506040513d60208110156200f66e57600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8251845114156200f6b06200d6a8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200f7135780820151818401526020810190506200f6f6565b50505050905090810190601f1680156200f7415780820380516001836020036101000a031916815260200191505b5084810383526032815260200180620118c8603291396040018481038252606681526020018062011da5606691396080019550505050505060006040518083038186803b1580156200f79257600080fd5b505af41580156200f7a7573d6000803e3d6000fd5b50505050600080905060008090505b83518110156200f95b5760008090505b83518110156200f94c57600073ffffffffffffffffffffffffffffffffffffffff168482815181106200f7f557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200f820576200f93e565b8482815181106200f82d57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200f87b57600080fd5b505afa1580156200f890573d6000803e3d6000fd5b505050506040513d60208110156200f8a757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168482815181106200f8db57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200f93d578381815181106200f90d57fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff1681525082806001019350506200f94c565b5b80806001019150506200f7c6565b5080806001019150506200f7b6565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementRenewalExpirationDateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalExpirationDateUpdate", this.address, callback); }
        LogAgreementRenewalFranchiseeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalFranchiseeUpdate", this.address, callback); }
        LogAgreementRenewalResultUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalResultUpdate", this.address, callback); }
        LogAgreementRenewalTermsDefined(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalTermsDefined", this.address, callback); }
        LogAgreementRenewalVoteCast(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalVoteCast", this.address, callback); }
        LogAgreementRenewalWindowClosed(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowClosed", this.address, callback); }
        LogAgreementRenewalWindowOpened(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowOpened", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        castRenewalVote(_renew: boolean) {
            const data = Encode(this.client).castRenewalVote(_renew);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).castRenewalVote();
            });
        }
        closeRenewalWindow() {
            const data = Encode(this.client).closeRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).closeRenewalWindow();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        defineRenewalTerms(_franchisees: string[], _threshold: number, _expirationDate: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) {
            const data = Encode(this.client).defineRenewalTerms(_franchisees, _threshold, _expirationDate, _opensAtOffset, _closesAtOffset, _extensionOffset);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).defineRenewalTerms();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getNumberOfRenewalFranchisees() {
            const data = Encode(this.client).getNumberOfRenewalFranchisees();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfRenewalFranchisees();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getRenewalFranchiseeAtIndex(_index: number) {
            const data = Encode(this.client).getRenewalFranchiseeAtIndex(_index);
            return Call<Tx, {
                franchisee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalFranchiseeAtIndex();
            });
        }
        getRenewalState() {
            const data = Encode(this.client).getRenewalState();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalState();
            });
        }
        getRenewalTerms() {
            const data = Encode(this.client).getRenewalTerms();
            return Call<Tx, {
                renewalThreshold: number;
                agreementExpirationDate: number;
                renewalOpensAtOffset: string;
                renewalClosesAtOffset: string;
                renewalExtensionOffset: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalTerms();
            });
        }
        getRenewalVoteDetails(_franchisee: string) {
            const data = Encode(this.client).getRenewalVoteDetails(_franchisee);
            return Call<Tx, {
                renewalVoter: string;
                renewVote: boolean;
                voteTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalVoteDetails();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isRenewalWindowOpen() {
            const data = Encode(this.client).isRenewalWindowOpen();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isRenewalWindowOpen();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        openRenewalWindow() {
            const data = Encode(this.client).openRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).openRenewalWindow();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resetRenewalVotes() {
            const data = Encode(this.client).resetRenewalVotes();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).resetRenewalVotes();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setCurrentExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setCurrentExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setCurrentExpirationDate();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setNextExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setNextExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setNextExpirationDate();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return client.encode("1314CF66", []); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        castRenewalVote: (_renew: boolean) => { return client.encode("B20BA337", ["bool"], _renew); },
        closeRenewalWindow: () => { return client.encode("C0647C2E", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        defineRenewalTerms: (_franchisees: string[], _threshold: number, _expirationDate: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) => { return client.encode("0130B3E0", ["address[]", "uint256", "int256", "string", "string", "string"], _franchisees, _threshold, _expirationDate, _opensAtOffset, _closesAtOffset, _extensionOffset); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getNumberOfRenewalFranchisees: () => { return client.encode("D779C8A1", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getRenewalFranchiseeAtIndex: (_index: number) => { return client.encode("6A78A815", ["uint256"], _index); },
        getRenewalState: () => { return client.encode("04FCE015", []); },
        getRenewalTerms: () => { return client.encode("40514A1A", []); },
        getRenewalVoteDetails: (_franchisee: string) => { return client.encode("84A6CD4D", ["address"], _franchisee); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isRenewalWindowOpen: () => { return client.encode("8AAEFF8C", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        openRenewalWindow: () => { return client.encode("8C2A4DAE", []); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resetRenewalVotes: () => { return client.encode("72EA1826", []); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setCurrentExpirationDate: (_expirationDate: number) => { return client.encode("CFDC4942", ["int256"], _expirationDate); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setNextExpirationDate: (_expirationDate: number) => { return client.encode("C6E8DFD0", ["int256"], _expirationDate); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        castRenewalVote: (): void => { return; },
        closeRenewalWindow: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        defineRenewalTerms: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfRenewalFranchisees: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getRenewalFranchiseeAtIndex: (): {
            franchisee: string;
        } => {
            const [franchisee] = client.decode(data, ["address"]);
            return { franchisee: franchisee };
        },
        getRenewalState: (): [boolean] => { return client.decode(data, ["bool"]); },
        getRenewalTerms: (): {
            renewalThreshold: number;
            agreementExpirationDate: number;
            renewalOpensAtOffset: string;
            renewalClosesAtOffset: string;
            renewalExtensionOffset: string;
        } => {
            const [renewalThreshold, agreementExpirationDate, renewalOpensAtOffset, renewalClosesAtOffset, renewalExtensionOffset] = client.decode(data, ["uint256", "int256", "string", "string", "string"]);
            return { renewalThreshold: renewalThreshold, agreementExpirationDate: agreementExpirationDate, renewalOpensAtOffset: renewalOpensAtOffset, renewalClosesAtOffset: renewalClosesAtOffset, renewalExtensionOffset: renewalExtensionOffset };
        },
        getRenewalVoteDetails: (): {
            renewalVoter: string;
            renewVote: boolean;
            voteTimestamp: number;
        } => {
            const [renewalVoter, renewVote, voteTimestamp] = client.decode(data, ["address", "bool", "uint256"]);
            return { renewalVoter: renewalVoter, renewVote: renewVote, voteTimestamp: voteTimestamp };
        },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isRenewalWindowOpen: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        openRenewalWindow: (): void => { return; },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resetRenewalVotes: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setCurrentExpirationDate: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setNextExpirationDate: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}