//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultEcosystem {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string): Promise<string> {
        let bytecode = "6080604052600160006001806000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200014960201b60201c565b50505062000236565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062002a3f602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6127f980620002466000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806378bc0b0d116100a25780639b9016ae116100715780639b9016ae14610476578063ddeb1cfc146104d2578063e10533c614610520578063f085f6dd1461057c578063f2fde38b146105a05761010b565b806378bc0b0d1461033b5780637d19ec9d146103b45780638129fc1c14610422578063893d20e81461042c5761010b565b80635c030138116100de5780635c03013814610235578063697fd9e91461028d578063756b2e6c146102d15780637589adb7146103175761010b565b806301ffc9a71461011057806330d8b8c11461017557806349c77f8c146101b957806357e0ebca14610211575b600080fd5b61015b6004803603602081101561012657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506105e4565b604051808215151515815260200191505060405180910390f35b6101b76004803603602081101561018b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061064b565b005b61020f600480360360608110156101cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061083f565b005b610219610f6d565b604051808260ff1660ff16815260200191505060405180910390f35b6102776004803603602081101561024b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f98565b6040518082815260200191505060405180910390f35b6102cf600480360360208110156102a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611094565b005b6102d9611291565b6040518082600360200280838360005b838110156103045780820151818401526020810190506102e9565b5050505090500191505060405180910390f35b61031f611302565b604051808260ff1660ff16815260200191505060405180910390f35b61039e6004803603606081101561035157600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505061132c565b6040518082815260200191505060405180910390f35b6103e0600480360360208110156103ca57600080fd5b81019080803590602001909291905050506113a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61042a6115a3565b005b610434611727565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b86004803603602081101561048c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611751565b604051808215151515815260200191505060405180910390f35b61051e600480360360408110156104e857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a7565b005b610528611e36565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610584611e80565b604051808260ff1660ff16815260200191505060405180910390f35b6105e2600480360360208110156105b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eab565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106bf612320565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610720578082015181840152602081019050610705565b50505050905090810190601f16801561074d5780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b1580156107d557600080fd5b505af41580156107e9573d6000803e3d6000fd5b50505050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b3612320565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156109145780820151818401526020810190506108f9565b50505050905090810190601f1680156109415780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b1580156109c957600080fd5b505af41580156109dd573d6000803e3d6000fd5b505050506000600473__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a3d57600080fd5b505af4158015610a51573d6000803e3d6000fd5b505050506040513d6020811015610a6757600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610acc61235d565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610b2d578082015181840152602081019050610b12565b50505050905090810190601f168015610b5a5780820380516001836020036101000a031916815260200191505b5084810383526023815260200180612657602391396040018481038252605581526020018061270f605591396060019550505050505060006040518083038186803b158015610ba857600080fd5b505af4158015610bbc573d6000803e3d6000fd5b505050506000600473__$5e3d4bda46c81e962f48c99e99f980d175$__63e9dc7279909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610c5057600080fd5b505af4158015610c64573d6000803e3d6000fd5b505050506040513d6020811015610c7a57600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef610caf61239a565b831415610cba6123a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610d1b578082015181840152602081019050610d00565b50505050905090810190601f168015610d485780820380516001836020036101000a031916815260200191505b5084810383526023815260200180612657602391396040018481038252603d815260200180612764603d91396040019550505050505060006040518083038186803b158015610d9657600080fd5b505af4158015610daa573d6000803e3d6000fd5b50505050600473__$5e3d4bda46c81e962f48c99e99f980d175$__637483a5959091866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610e0857600080fd5b505af4158015610e1c573d6000803e3d6000fd5b505050506040513d6020811015610e3257600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef610e6761239a565b831415610e726123a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610ed3578082015181840152602081019050610eb8565b50505050905090810190601f168015610f005780820380516001836020036101000a031916815260200191505b508481038352602381526020018061265760239139604001848103825260398152602001806126d6603991396040019550505050505060006040518083038186803b158015610f4e57600080fd5b505af4158015610f62573d6000803e3d6000fd5b505050505050505050565b60006001600060038110610f7d57fe5b602091828204019190069054906101000a900460ff16905090565b600061108d6001600380602002604051908101604052809291908260038015610ffc576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411610fc55790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561104757600080fd5b505afa15801561105b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561108057600080fd5b81019080919050506123e0565b9050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611108612320565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561116957808201518184015260208101905061114e565b50505050905090810190601f1680156111965780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561121e57600080fd5b505af4158015611232573d6000803e3d6000fd5b505050506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6112996125e1565b60016003806020026040519081016040528092919082600380156112f8576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116112c15790505b5050505050905090565b60006001806003811061131157fe5b602091828204019190069054906101000a900460ff16905090565b600061139b6001600380602002604051908101604052809291908260038015611390576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116113595790505b5050505050836123e0565b9050919050565b6000600473__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156113fe57600080fd5b505af4158015611412573d6000803e3d6000fd5b505050506040513d602081101561142857600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461148d612493565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156114ee5780820151818401526020810190506114d3565b50505050905090810190601f16801561151b5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7445636f73797374656d2e676574557365724163636f756e7400815250602001848103825260298152602001806126ad602991396040019550505050505060006040518083038186803b15801561158657600080fd5b505af415801561159a573d6000803e3d6000fd5b50505050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900460ff166115d56124d0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561163657808201518184015260208101905061161b565b50505050905090810190601f1680156116635780820380516001836020036101000a031916815260200191505b508481038352602a815260200180612604602a91396040018481038252602981526020018061262e602991396040019550505050505060006040518083038186803b1580156116b157600080fd5b505af41580156116c5573d6000803e3d6000fd5b5050505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260006101000a81548160ff021916908315150217905550565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600084146117cd61250d565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561182e578082015181840152602081019050611813565b50505050905090810190601f16801561185b5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7445636f73797374656d2e616464557365724163636f756e7400815250602001848103825260178152602001807f557365722049442063616e6e6f7420626520656d7074790000000000000000008152506020019550505050505060006040518083038186803b1580156118e357600080fd5b505af41580156118f7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461194d61250d565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156119ae578082015181840152602081019050611993565b50505050905090810190601f1680156119db5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7445636f73797374656d2e616464557365724163636f756e7400815250602001848103825260248152602001806127a1602491396040019550505050505060006040518083038186803b158015611a4657600080fd5b505af4158015611a5a573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600473__$5e3d4bda46c81e962f48c99e99f980d175$__63cd001d819091866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611ad257600080fd5b505af4158015611ae6573d6000803e3d6000fd5b505050506040513d6020811015611afc57600080fd5b8101908080519060200190929190505050611b1561254a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611b76578082015181840152602081019050611b5b565b50505050905090810190601f168015611ba35780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7445636f73797374656d2e616464557365724163636f756e74008152506020018481038252603381526020018061267a603391396040019550505050505060006040518083038186803b158015611c0e57600080fd5b505af4158015611c22573d6000803e3d6000fd5b505050506000600473__$5e3d4bda46c81e962f48c99e99f980d175$__63e9dc7279909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015611cb657600080fd5b505af4158015611cca573d6000803e3d6000fd5b505050506040513d6020811015611ce057600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef611d1561239a565b831415611d206123a3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611d81578082015181840152602081019050611d66565b50505050905090810190601f168015611dae5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7445636f73797374656d2e616464557365724163636f756e74008152506020018481038252603381526020018061267a603391396040019550505050505060006040518083038186803b158015611e1957600080fd5b505af4158015611e2d573d6000803e3d6000fd5b50505050505050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006001600260038110611e9057fe5b602091828204019190069054906101000a900460ff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611f1f612320565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611f80578082015181840152602081019050611f65565b50505050905090810190601f168015611fad5780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561203557600080fd5b505af4158015612049573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461209f61250d565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156121005780820151818401526020810190506120e5565b50505050905090810190601f16801561212d5780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f776e65642e7472616e736665724f776e6572736869700000000000000000008152506020018481038252601e8152602001807f546865206e6577206f776e6572206d757374206e6f74206265204e554c4c00008152506020019550505050505060006040518083038186803b1580156121b557600080fd5b505af41580156121c9573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461231d5780600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c8600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60606040518060400160405280600681526020017f4552523530300000000000000000000000000000000000000000000000000000815250905090565b600061240e836000600381106123f257fe5b60200201518360006003811061240457fe5b6020020151612587565b9050600081146124205780905061248d565b61244c8360016003811061243057fe5b60200201518360016003811061244257fe5b6020020151612587565b90506000811461245e5780905061248d565b61248a8360026003811061246e57fe5b60200201518360026003811061248057fe5b6020020151612587565b90505b92915050565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60008260ff168260ff1614156125a057600090506125db565b8260ff168260ff1610156125d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506125db565b600190505b92915050565b604051806060016040528060039060208202803883398082019150509050509056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6554686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a656444656661756c7445636f73797374656d2e6d696772617465557365724163636f756e745573657220776974682073616d6520494420616c72656164792065786973747320696e20676976656e2065636f73797374656d55736572206163636f756e74207769746820676976656e20496420646f6573206e6f742065786973744661696c656420746f2072656d6f7665206b6579205f6d69677261746546726f6d49642066726f6d20757365724163636f756e7473206d6170476976656e2075736572206163636f756e74206164647265737320646f6573206e6f74206d6174636820746865206164647265737320666f756e64207769746820676976656e205f6d69677261746546726f6d49645573657220776974682073616d65205f6d696772617465546f496420616c72656164792065786973747320696e20676976656e2065636f73797374656d55736572206163636f756e7420616464726573732063616e6e6f7420626520656d707479a265627a7a72315820a155052df066557af51958e8f79235045167ee91ee24db2d2208e64bf29df4d764736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOwnerChanged", this.address, callback); }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        addExternalAddress(_address: string) {
            const data = Encode(this.client).addExternalAddress(_address);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addExternalAddress();
            });
        }
        addUserAccount(_id: Buffer, _userAccount: string) {
            const data = Encode(this.client).addUserAccount(_id, _userAccount);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addUserAccount();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getUserAccount(_id: Buffer) {
            const data = Encode(this.client).getUserAccount(_id);
            return Call<Tx, {
                userAccount: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAccount();
            });
        }
        initialize() {
            const data = Encode(this.client).initialize();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        isKnownExternalAddress(_address: string) {
            const data = Encode(this.client).isKnownExternalAddress(_address);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isKnownExternalAddress();
            });
        }
        migrateUserAccount(_userAccount: string, _migrateFromId: Buffer, _migrateToId: Buffer) {
            const data = Encode(this.client).migrateUserAccount(_userAccount, _migrateFromId, _migrateToId);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateUserAccount();
            });
        }
        removeExternalAddress(_address: string) {
            const data = Encode(this.client).removeExternalAddress(_address);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeExternalAddress();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferOwnership(_newOwner: string) {
            const data = Encode(this.client).transferOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferOwnership();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        addExternalAddress: (_address: string) => { return client.encode("697FD9E9", ["address"], _address); },
        addUserAccount: (_id: Buffer, _userAccount: string) => { return client.encode("DDEB1CFC", ["bytes32", "address"], _id, _userAccount); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getUserAccount: (_id: Buffer) => { return client.encode("7D19EC9D", ["bytes32"], _id); },
        initialize: () => { return client.encode("8129FC1C", []); },
        isKnownExternalAddress: (_address: string) => { return client.encode("9B9016AE", ["address"], _address); },
        migrateUserAccount: (_userAccount: string, _migrateFromId: Buffer, _migrateToId: Buffer) => { return client.encode("49C77F8C", ["address", "bytes32", "bytes32"], _userAccount, _migrateFromId, _migrateToId); },
        removeExternalAddress: (_address: string) => { return client.encode("30D8B8C1", ["address"], _address); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferOwnership: (_newOwner: string) => { return client.encode("F2FDE38B", ["address"], _newOwner); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        addExternalAddress: (): void => { return; },
        addUserAccount: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getUserAccount: (): {
            userAccount: string;
        } => {
            const [userAccount] = client.decode(data, ["address"]);
            return { userAccount: userAccount };
        },
        initialize: (): void => { return; },
        isKnownExternalAddress: (): [boolean] => { return client.decode(data, ["bool"]); },
        migrateUserAccount: (): void => { return; },
        removeExternalAddress: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferOwnership: (): void => { return; }
    }; };
}