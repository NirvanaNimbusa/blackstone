//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    return new Promise((resolve, reject) => {
        client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); });
    });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultParticipantsManager {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<string> {
        let bytecode = "$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415620014e262003aba565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200154557808201518184015260208101905062001528565b50505050905090810190601f168015620015735780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048f360239139604001848103825260278152602001806200484c602791396040019550505050505060006040518083038186803b158015620015c457600080fd5b505af4158015620015d9573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60016200160584620024c4565b126200161062003af7565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200167357808201518184015260208101905062001656565b50505050905090810190601f168015620016a15780820380516001836020036101000a031916815260200191505b5084810383526029815260200180620048a4602991396040018481038252604b8152602001806200476f604b91396060019550505050505060006040518083038186803b158015620016f257600080fd5b505af415801562001707573d6000803e3d6000fd5b50505050620017168362002170565b8015620017dc57508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200179e57600080fd5b505af1158015620017b3573d6000803e3d6000fd5b505050506040513d6020811015620017ca57600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef83156200180462003b34565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620018675780820151818401526020810190506200184a565b50505050905090810190601f168015620018955780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e757067726164650000000000815250602001848103825260408152602001806200480c604091396040019550505050505060006040518083038186803b1580156200190257600080fd5b505af415801562001917573d6000803e3d6000fd5b5050505050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16636371e7b4836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200197557600080fd5b505afa1580156200198a573d6000803e3d6000fd5b505050506040513d6020811015620019a157600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d462a0186040518163ffffffff1660e01b815260040160206040518083038186803b15801562001a2457600080fd5b505afa15801562001a39573d6000803e3d6000fd5b505050506040513d602081101562001a5057600080fd5b8101908080519060200190929190505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462001aba62003b71565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001b1d57808201518184015260208101905062001b00565b50505050905090810190601f16801562001b4b5780820380516001836020036101000a031916815260200191505b508481038352602981526020018062004722602991396040018481038252602c8152602001806200499f602c91396040019550505050505060006040518083038186803b15801562001b9c57600080fd5b505af415801562001bb1573d6000803e3d6000fd5b5050505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019050919050565b6000806060600086869050141562001c9957600160405190808252806020026020018201604052801562001c475781602001602082028038833980820191505090505b509050338160008151811062001c5957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505062001cde565b858580806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505090505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525060405162001d459062003cd8565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562001db657808201518184015260208101905062001d99565b50505050905090810190601f16801562001de45780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562001e07573d6000803e3d6000fd5b5091508173ffffffffffffffffffffffffffffffffffffffff1663d44a934182866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101562001e8257808201518184015260208101905062001e65565b505050509050019350505050600060405180830381600087803b15801562001ea957600080fd5b505af115801562001ebe573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d68287df836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001f6357600080fd5b505af115801562001f78573d6000803e3d6000fd5b505050506040513d602081101562001f8f57600080fd5b8101908080519060200190929190505050925073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62001fc662003bae565b85141562001fd362003b34565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200203657808201518184015260208101905062002019565b50505050905090810190601f168015620020645780820380516001836020036101000a031916815260200191505b508481038352602d815260200180620047df602d91396040018481038252603281526020018062004916603291396040019550505050505060006040518083038186803b158015620020b557600080fd5b505af4158015620020ca573d6000803e3d6000fd5b5050505050935093915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ea415cfd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200212b57600080fd5b505afa15801562002140573d6000803e3d6000fd5b505050506040513d60208110156200215757600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a452ad6836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156200221357600080fd5b505af115801562002228573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f4ace0d06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015620022cd57600080fd5b505af1158015620022e2573d6000803e3d6000fd5b505050506040513d6020811015620022f957600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82156200233262003b34565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200239557808201518184015260208101905062002378565b50505050905090810190601f168015620023c35780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f416273747261637444625570677261646561626c652e6d696772617465546f008152506020018481038252603181526020018062004873603191396040019550505050505060006040518083038186803b1580156200243057600080fd5b505af415801562002445573d6000803e3d6000fd5b50505050919050565b60405160200180807f6765744f626a656374436c61737365732829000000000000000000000000000081525060120190506040516020818303038152906040528051906020012081565b60006002600060038110620024a957fe5b602091828204019190069054906101000a900460ff16905090565b6000620025c060026003806020026040519081016040528092919082600380156200252b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620024f35790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156200257757600080fd5b505afa1580156200258c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506060811015620025b257600080fd5b810190809190505062003bb7565b9050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff166389c9e2ef6040518163ffffffff1660e01b8152600401604080518083038186803b1580156200261057600080fd5b505afa15801562002625573d6000803e3d6000fd5b505050506040513d60408110156200263c57600080fd5b81019080805190602001909291908051906020019092919050505091509150915091565b60008273ffffffffffffffffffffffffffffffffffffffff1663f06e141e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620026b457600080fd5b505afa158015620026c9573d6000803e3d6000fd5b505050506040513d6020811015620026e057600080fd5b8101908080519060200190929190505050905092915050565b6200270362003ce6565b600260038060200260405190810160405280929190826003801562002764576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200272c5790505b5050505050905090565b600060026001600381106200277f57fe5b602091828204019190069054906101000a900460ff16905090565b60006200280d600260038060200260405190810160405280929190826003801562002801576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620027c95790505b50505050508362003bb7565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16634d0092886040518163ffffffff1660e01b815260040160206040518083038186803b1580156200285d57600080fd5b505afa15801562002872573d6000803e3d6000fd5b505050506040513d60208110156200288957600080fd5b81019080805190602001909291905050509050919050565b60008373ffffffffffffffffffffffffffffffffffffffff166381b0519984846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620028fd57600080fd5b505afa15801562002912573d6000803e3d6000fd5b505050506040513d60208110156200292957600080fd5b810190808051906020019092919050505090509392505050565b6040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e74000000000000000081525081565b60008273ffffffffffffffffffffffffffffffffffffffff166320feabba836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620029d057600080fd5b505afa158015620029e5573d6000803e3d6000fd5b505050506040513d6020811015620029fc57600080fd5b8101908080519060200190929190505050905092915050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562002a8b62003aba565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002aee57808201518184015260208101905062002ad1565b50505050905090810190601f16801562002b1c5780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048f360239139604001848103825260278152602001806200484c602791396040019550505050505060006040518083038186803b15801562002b6d57600080fd5b505af415801562002b82573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462002bda62003b71565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002c3d57808201518184015260208101905062002c20565b50505050905090810190601f16801562002c6b5780820380516001836020036101000a031916815260200191505b5084810383526025815260200180620047ba6025913960400184810382526026815260200180620048cd602691396040019550505050505060006040518083038186803b15801562002cbc57600080fd5b505af415801562002cd1573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462002e265780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60008173ffffffffffffffffffffffffffffffffffffffff1663e94e98886040518163ffffffff1660e01b815260040160206040518083038186803b15801562002e7257600080fd5b505afa15801562002e87573d6000803e3d6000fd5b505050506040513d602081101562002e9e57600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd3a694e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002f6a57600080fd5b505afa15801562002f7f573d6000803e3d6000fd5b505050506040513d602081101562002f9657600080fd5b8101908080519060200190929190505050905090565b6040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e7400000000000000008152506040516200304e9062003cd8565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620030bf578082015181840152602081019050620030a2565b50505050905090810190601f168015620030ed5780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562003110573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663485cc95584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015620031c757600080fd5b505af1158015620031dc573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364a6a287836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200328357600080fd5b505af115801562003298573d6000803e3d6000fd5b505050506040513d6020811015620032af57600080fd5b81019080805190602001909291905050509050620032cc62003bae565b811415620033bc5760008514158015620033135750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15620033bb578273ffffffffffffffffffffffffffffffffffffffff1663ddeb1cfc86846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015620033a157600080fd5b505af1158015620033b6573d6000803e3d6000fd5b505050505b5b509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff166335e072446040518163ffffffff1660e01b815260040160206040518083038186803b1580156200340d57600080fd5b505afa15801562003422573d6000803e3d6000fd5b505050506040513d60208110156200343957600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b0190506040516020818303038152906040528051906020012081565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7abd5ea836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015620035b057600080fd5b505afa158015620035c5573d6000803e3d6000fd5b505050506040513d6020811015620035dc57600080fd5b81019080805190602001909291905050509050919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663aaa8282b836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200365357600080fd5b505afa15801562003668573d6000803e3d6000fd5b505050506040513d60208110156200367f57600080fd5b8101908080519060200190929190505050905092915050565b600060028060038110620036a857fe5b602091828204019190069054906101000a900460ff16905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156200380f5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1663e72848796040518163ffffffff1660e01b815260040160206040518083038186803b158015620037b957600080fd5b505afa158015620037ce573d6000803e3d6000fd5b505050506040513d6020811015620037e557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b6200381962003aba565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200387c5780820151818401526020810190506200385f565b50505050905090810190601f168015620038aa5780820380516001836020036101000a031916815260200191505b50848103835260248152602001806200474b602491396040018481038252605781526020018062004948605791396060019550505050505060006040518083038186803b158015620038fb57600080fd5b505af415801562003910573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16637f692a2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200397257600080fd5b505afa15801562003987573d6000803e3d6000fd5b505050506040513d60208110156200399e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562003a1157816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ffcc7bbf836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562003a7557600080fd5b505afa15801562003a8a573d6000803e3d6000fd5b505050506040513d602081101562003aa157600080fd5b8101908080519060200190929190505050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b600062003be98360006003811062003bcb57fe5b60200201518360006003811062003bde57fe5b602002015162003c7a565b90506000811462003bfd5780905062003c74565b62003c2d8360016003811062003c0f57fe5b60200201518360016003811062003c2257fe5b602002015162003c7a565b90506000811462003c415780905062003c74565b62003c718360026003811062003c5357fe5b60200201518360026003811062003c6657fe5b602002015162003c7a565b90505b92915050565b60008260ff168260ff16141562003c95576000905062003cd2565b8260ff168260ff16101562003ccd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905062003cd2565b600190505b92915050565b610a198062003d0983390190565b604051806060016040528060039060208202803883398082019150509050509056fe608060405234801561001057600080fd5b50604051610a19380380610a198339818101604052604081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b5060405250505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461015461041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156101b557808201518184015260208101905061019a565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f720000000000000000008152506020018481038252602a8152602001806109c7602a91396040019550505050505060006040518083038186803b15801561024d57600080fd5b505af4158015610261573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600083511461029661041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f7200000000000000000081525060200184810382526025815260200180610953602591396040019550505050505060006040518083038186803b15801561038f57600080fd5b505af41580156103a3573d6000803e3d6000fd5b50505050600060405180806109a1602691396026019050604051809103902090506000604051808061097860299139602901905060405180910390209050600060405180806109f16028913960280190506040518091039020905084835583518255602084015181555050505050610453565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6104f1806104626000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bc7f3b50146101c1575b600061003561020b565b905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610089610324565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156100ea5780820151818401526020810190506100cf565b50505050905090810190601f1680156101175780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f416273747261637444656c656761746550726f787900000000000000000000008152506020018481038252602981526020018061041d602991396040019550505050505060006040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b5050505060405136600082376000813683855af43d806000843e81600081146101bd578184f35b8184fd5b6101c961020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610215610361565b73ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1610238610387565b6040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028757808201518184015260208101905061026c565b50505050905090810190601f1680156102b45780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250608081101561030a57600080fd5b810190808051906020019092919091905050508091505090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b600080604051808061046f60269139602601905060405180910390209050805491505090565b6060600060405180806104466029913960290190506040518091039020905060006040518080610495602891396028019050604051809103902090506040519250815483528054602084015260408301604052505090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe44656c6567617465207461726765742061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e646572414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c7565a265627a7a723158202887881465e8df800a048552dd9cf53e7034225d192d04f6738ee171894fafbe64736f6c634300050c00325f6f626a656374436c61737320737472696e67206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e6465725f61727469666163747346696e6465722061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c756541727469666163747346696e646572456e61626c65642e73657441727469666163747346696e646572416273747261637444625570677261646561626c652e6163636570744461746162617365546865207570677261646520737563636573736f72206d75737420686176652061206869676865722076657273696f6e207468616e207468652063757272656e7420636f6e74726163742e557067726164654f776e65642e7472616e73666572557067726164654f776e65727368697044656661756c745061727469636970616e74734d616e616765722e6372656174654f7267616e697a6174696f6e4f6e65206f66206d696772617465546f202f206d69677261746546726f6d2072657475726e65642066616c73652e2041626f7274696e6720757067726164652e546865206d73672e73656e646572206973206e6f74207468652075706772616465206f776e657254686520444220636f6e747261637420776173206e6f7420616363657074656420627920746865206e6577206f776e657241627374726163745570677261646561626c652e7072655f68696768657256657273696f6e4f6e6c79546865206e65772075706772616465206f776e6572206d757374206e6f74206265204e554c4c557067726164654f776e65642e7072655f6f6e6c794279557067726164654f776e6572556e61626c6520746f2061646420746865206e6577204f7267616e697a6174696f6e20746f20746865206461746162617365546865206d73672e73656e646572206d757374206569746865722062652074686520757067726164654f776e6572206f72206120636f6e74726163742077697468207468652073616d6520757067726164654f776e65725468652041727469666163747346696e6465722061646472657373206d757374206e6f74206265206e756c6ca265627a7a723158201628b9ae1d9b1b454def484e9afdab23cb5f554b85a632f66c7f6e72f3912cb564736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => {
            client.deploy(payload, (err, addr) => {
                if (err)
                    reject(err);
                else {
                    const address = Buffer.from(addr).toString("hex").toUpperCase();
                    resolve(address);
                }
            });
        });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogUpgradeOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogUpgradeOwnerChanged", this.address, callback); }
        ERC165_ID_ArtifactsFinderEnabled() {
            const data = Encode(this.client).ERC165_ID_ArtifactsFinderEnabled();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_ArtifactsFinderEnabled();
            });
        }
        ERC165_ID_ObjectFactory() {
            const data = Encode(this.client).ERC165_ID_ObjectFactory();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_ObjectFactory();
            });
        }
        ERC165_ID_Upgradeable() {
            const data = Encode(this.client).ERC165_ID_Upgradeable();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Upgradeable();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        OBJECT_CLASS_ORGANIZATION() {
            const data = Encode(this.client).OBJECT_CLASS_ORGANIZATION();
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).OBJECT_CLASS_ORGANIZATION();
            });
        }
        OBJECT_CLASS_USER_ACCOUNT() {
            const data = Encode(this.client).OBJECT_CLASS_USER_ACCOUNT();
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).OBJECT_CLASS_USER_ACCOUNT();
            });
        }
        acceptDatabase(_db: string) {
            const data = Encode(this.client).acceptDatabase(_db);
            return Call<Tx, {
                accepted: boolean;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).acceptDatabase();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createOrganization(_initialApprovers: string[], _defaultDepartmentId: Buffer) {
            const data = Encode(this.client).createOrganization(_initialApprovers, _defaultDepartmentId);
            return Call<Tx, {
                error: number;
                organization: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).createOrganization();
            });
        }
        createUserAccount(_id: Buffer, _owner: string, _ecosystem: string) {
            const data = Encode(this.client).createUserAccount(_id, _owner, _ecosystem);
            return Call<Tx, {
                userAccount: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).createUserAccount();
            });
        }
        departmentExists(_organization: string, _departmentId: Buffer) {
            const data = Encode(this.client).departmentExists(_organization, _departmentId);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).departmentExists();
            });
        }
        getApproverAtIndex(_organization: string, _pos: number) {
            const data = Encode(this.client).getApproverAtIndex(_organization, _pos);
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getApproverAtIndex();
            });
        }
        getApproverData(_approver: string) {
            const data = Encode(this.client).getApproverData(_approver);
            return Call<Tx, {
                approverAddress: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getApproverData();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getDepartmentAtIndex(_organization: string, _index: number) {
            const data = Encode(this.client).getDepartmentAtIndex(_organization, _index);
            return Call<Tx, {
                id: Buffer;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentAtIndex();
            });
        }
        getDepartmentData(_organization: string, _id: Buffer) {
            const data = Encode(this.client).getDepartmentData(_organization, _id);
            return Call<Tx, {
                userCount: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentData();
            });
        }
        getDepartmentUserAtIndex(_organization: string, _depId: Buffer, _index: number) {
            const data = Encode(this.client).getDepartmentUserAtIndex(_organization, _depId, _index);
            return Call<Tx, {
                departmentMember: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentUserAtIndex();
            });
        }
        getNumberOfApprovers(_organization: string) {
            const data = Encode(this.client).getNumberOfApprovers(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfApprovers();
            });
        }
        getNumberOfDepartmentUsers(_organization: string, _depId: Buffer) {
            const data = Encode(this.client).getNumberOfDepartmentUsers(_organization, _depId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartmentUsers();
            });
        }
        getNumberOfDepartments(_organization: string) {
            const data = Encode(this.client).getNumberOfDepartments(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartments();
            });
        }
        getNumberOfOrganizations() {
            const data = Encode(this.client).getNumberOfOrganizations();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfOrganizations();
            });
        }
        getNumberOfUsers(_organization: string) {
            const data = Encode(this.client).getNumberOfUsers(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfUsers();
            });
        }
        getOrganizationAtIndex(_pos: number) {
            const data = Encode(this.client).getOrganizationAtIndex(_pos);
            return Call<Tx, {
                organization: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationAtIndex();
            });
        }
        getOrganizationData(_organization: string) {
            const data = Encode(this.client).getOrganizationData(_organization);
            return Call<Tx, {
                numApprovers: number;
                organizationKey: Buffer;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationData();
            });
        }
        getUpgradeOwner() {
            const data = Encode(this.client).getUpgradeOwner();
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUpgradeOwner();
            });
        }
        getUserAccountsSize() {
            const data = Encode(this.client).getUserAccountsSize();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAccountsSize();
            });
        }
        getUserAtIndex(_organization: string, _pos: number) {
            const data = Encode(this.client).getUserAtIndex(_organization, _pos);
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAtIndex();
            });
        }
        getUserData(_user: string) {
            const data = Encode(this.client).getUserData(_user);
            return Call<Tx, {
                userAddress: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserData();
            });
        }
        migrateFrom() {
            const data = Encode(this.client).migrateFrom();
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateFrom();
            });
        }
        migrateTo(_successor: string) {
            const data = Encode(this.client).migrateTo(_successor);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateTo();
            });
        }
        organizationExists(_address: string) {
            const data = Encode(this.client).organizationExists(_address);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).organizationExists();
            });
        }
        setArtifactsFinder(_artifactsFinder: string) {
            const data = Encode(this.client).setArtifactsFinder(_artifactsFinder);
            return Call<Tx, void>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).setArtifactsFinder();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferUpgradeOwnership(_newOwner: string) {
            const data = Encode(this.client).transferUpgradeOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferUpgradeOwnership();
            });
        }
        upgrade(_successor: string) {
            const data = Encode(this.client).upgrade(_successor);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).upgrade();
            });
        }
        userAccountExists(_userAccount: string) {
            const data = Encode(this.client).userAccountExists(_userAccount);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).userAccountExists();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_ArtifactsFinderEnabled: () => { return client.encode("D556028D", []); },
        ERC165_ID_ObjectFactory: () => { return client.encode("54AF67B7", []); },
        ERC165_ID_Upgradeable: () => { return client.encode("B21C815F", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        OBJECT_CLASS_ORGANIZATION: () => { return client.encode("BF90B027", []); },
        OBJECT_CLASS_USER_ACCOUNT: () => { return client.encode("9B3EF402", []); },
        acceptDatabase: (_db: string) => { return client.encode("F4ACE0D0", ["address"], _db); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createOrganization: (_initialApprovers: string[], _defaultDepartmentId: Buffer) => { return client.encode("39CB0623", ["address[]", "bytes32"], _initialApprovers, _defaultDepartmentId); },
        createUserAccount: (_id: Buffer, _owner: string, _ecosystem: string) => { return client.encode("C392DF6B", ["bytes32", "address", "address"], _id, _owner, _ecosystem); },
        departmentExists: (_organization: string, _departmentId: Buffer) => { return client.encode("AB8EC038", ["address", "bytes32"], _organization, _departmentId); },
        getApproverAtIndex: (_organization: string, _pos: number) => { return client.encode("3DAF56B8", ["address", "uint256"], _organization, _pos); },
        getApproverData: (_approver: string) => { return client.encode("EC89DA8B", ["address"], _approver); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getDepartmentAtIndex: (_organization: string, _index: number) => { return client.encode("EC9C6220", ["address", "uint256"], _organization, _index); },
        getDepartmentData: (_organization: string, _id: Buffer) => { return client.encode("6CFB6C6B", ["address", "bytes32"], _organization, _id); },
        getDepartmentUserAtIndex: (_organization: string, _depId: Buffer, _index: number) => { return client.encode("87DE70A7", ["address", "bytes32", "uint256"], _organization, _depId, _index); },
        getNumberOfApprovers: (_organization: string) => { return client.encode("CC5BAF17", ["address"], _organization); },
        getNumberOfDepartmentUsers: (_organization: string, _depId: Buffer) => { return client.encode("1065FFB9", ["address", "bytes32"], _organization, _depId); },
        getNumberOfDepartments: (_organization: string) => { return client.encode("AD76666D", ["address"], _organization); },
        getNumberOfOrganizations: () => { return client.encode("BD3A694E", []); },
        getNumberOfUsers: (_organization: string) => { return client.encode("851D585E", ["address"], _organization); },
        getOrganizationAtIndex: (_pos: number) => { return client.encode("031E8EAF", ["uint256"], _pos); },
        getOrganizationData: (_organization: string) => { return client.encode("69AD9617", ["address"], _organization); },
        getUpgradeOwner: () => { return client.encode("E7284879", []); },
        getUserAccountsSize: () => { return client.encode("17BD60EF", []); },
        getUserAtIndex: (_organization: string, _pos: number) => { return client.encode("FDBB918F", ["address", "uint256"], _organization, _pos); },
        getUserData: (_user: string) => { return client.encode("F4EEEFE9", ["address"], _user); },
        migrateFrom: () => { return client.encode("35657E68", []); },
        migrateTo: (_successor: string) => { return client.encode("4DDAF8F2", ["address"], _successor); },
        organizationExists: (_address: string) => { return client.encode("E7ABD5EA", ["address"], _address); },
        setArtifactsFinder: (_artifactsFinder: string) => { return client.encode("2A8E9AB2", ["address"], _artifactsFinder); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return client.encode("AC83EC7C", ["address"], _newOwner); },
        upgrade: (_successor: string) => { return client.encode("0900F010", ["address"], _successor); },
        userAccountExists: (_userAccount: string) => { return client.encode("02F53264", ["address"], _userAccount); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_ArtifactsFinderEnabled: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_ObjectFactory: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_Upgradeable: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        OBJECT_CLASS_ORGANIZATION: (): [string] => { return client.decode(data, ["string"]); },
        OBJECT_CLASS_USER_ACCOUNT: (): [string] => { return client.decode(data, ["string"]); },
        acceptDatabase: (): {
            accepted: boolean;
        } => {
            const [accepted] = client.decode(data, ["bool"]);
            return { accepted: accepted };
        },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createOrganization: (): {
            error: number;
            organization: string;
        } => {
            const [error, organization] = client.decode(data, ["uint256", "address"]);
            return { error: error, organization: organization };
        },
        createUserAccount: (): {
            userAccount: string;
        } => {
            const [userAccount] = client.decode(data, ["address"]);
            return { userAccount: userAccount };
        },
        departmentExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        getApproverAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        getApproverData: (): {
            approverAddress: string;
        } => {
            const [approverAddress] = client.decode(data, ["address"]);
            return { approverAddress: approverAddress };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getDepartmentAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = client.decode(data, ["bytes32"]);
            return { id: id };
        },
        getDepartmentData: (): {
            userCount: number;
        } => {
            const [userCount] = client.decode(data, ["uint256"]);
            return { userCount: userCount };
        },
        getDepartmentUserAtIndex: (): {
            departmentMember: string;
        } => {
            const [departmentMember] = client.decode(data, ["address"]);
            return { departmentMember: departmentMember };
        },
        getNumberOfApprovers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfDepartmentUsers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfDepartments: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfOrganizations: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfUsers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOrganizationAtIndex: (): {
            organization: string;
        } => {
            const [organization] = client.decode(data, ["address"]);
            return { organization: organization };
        },
        getOrganizationData: (): {
            numApprovers: number;
            organizationKey: Buffer;
        } => {
            const [numApprovers, organizationKey] = client.decode(data, ["uint256", "bytes32"]);
            return { numApprovers: numApprovers, organizationKey: organizationKey };
        },
        getUpgradeOwner: (): [string] => { return client.decode(data, ["address"]); },
        getUserAccountsSize: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getUserAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        getUserData: (): {
            userAddress: string;
        } => {
            const [userAddress] = client.decode(data, ["address"]);
            return { userAddress: userAddress };
        },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        organizationExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        setArtifactsFinder: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        userAccountExists: (): [boolean] => { return client.decode(data, ["bool"]); }
    }; };
}