import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    return new Promise((resolve, reject) => {
        client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); });
    });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultOrganization {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "6080604052600180600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200014960201b60201c565b50505062000236565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062004153602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b613f0d80620002466000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80637e04758511610130578063b68b5f6c116100b8578063ea415cfd1161007c578063ea415cfd14610a76578063f06e141e14610ae4578063f085f6dd14610b26578063fbe620a714610b4a578063ffcc7bbf14610b9057610227565b8063b68b5f6c146108ad578063d44a934114610913578063ddc5dd5114610996578063e10533c6146109fc578063e94e988814610a5857610227565b806398575188116100ff5780639857518814610767578063aaa8282b146107c3578063abd67a7e14610805578063b2e30ddf14610823578063b646c1941461086957610227565b80637e0475851461064657806381b05199146106ac57806389c9e2ef1461072457806394d42fc21461074957610227565b80635c030138116101b35780636e40c2ed116101825780636e40c2ed146105275780636fa0273714610545578063756b2e6c146105635780637589adb7146105a957806378bc0b0d146105cd57610227565b80635c0301381461042b5780636371e7b414610483578063669e9e23146104c55780636cf4c88f146104e357610227565b80633e21a8d9116101fa5780633e21a8d914610351578063421b2d8b1461036f5780634374fcf8146103cb5780634d009288146103e957806357e0ebca1461040757610227565b806301ffc9a71461022c57806320feabba1461029157806335e07244146102d75780633657db17146102f5575b600080fd5b6102776004803603602081101561024257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610bfe565b604051808215151515815260200191505060405180910390f35b6102bd600480360360208110156102a757600080fd5b8101908080359060200190929190505050610c65565b604051808215151515815260200191505060405180910390f35b6102df610c95565b6040518082815260200191505060405180910390f35b6102fd610ca2565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610359610d7c565b6040518082815260200191505060405180910390f35b6103b16004803603602081101561038557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b604051808215151515815260200191505060405180910390f35b6103d3611036565b6040518082815260200191505060405180910390f35b6103f161105a565b6040518082815260200191505060405180910390f35b61040f61106a565b604051808260ff1660ff16815260200191505060405180910390f35b61046d6004803603602081101561044157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611095565b6040518082815260200191505060405180910390f35b6104af6004803603602081101561049957600080fd5b8101908080359060200190929190505050611191565b6040518082815260200191505060405180910390f35b6104cd6111ba565b6040518082815260200191505060405180910390f35b610525600480360360208110156104f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111de565b005b61052f611946565b6040518082815260200191505060405180910390f35b61054d61196a565b6040518082815260200191505060405180910390f35b61056b611977565b6040518082600360200280838360005b8381101561059657808201518184015260208101905061057b565b5050505090500191505060405180910390f35b6105b16119e8565b604051808260ff1660ff16815260200191505060405180910390f35b610630600480360360608110156105e357600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611a12565b6040518082815260200191505060405180910390f35b6106926004803603604081101561065c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a88565b604051808215151515815260200191505060405180910390f35b6106e2600480360360408110156106c257600080fd5b810190808035906020019092919080359060200190929190505050611d1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61072c611daa565b604051808381526020018281526020019250505060405180910390f35b610751611dc3565b6040518082815260200191505060405180910390f35b6107a96004803603602081101561077d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de7565b604051808215151515815260200191505060405180910390f35b6107ef600480360360208110156107d957600080fd5b8101908080359060200190929190505050612092565b6040518082815260200191505060405180910390f35b61080d6120b5565b6040518082815260200191505060405180910390f35b61084f6004803603602081101561083957600080fd5b8101908080359060200190929190505050612112565b604051808215151515815260200191505060405180910390f35b6108ab6004803603602081101561087f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122a3565b005b6108f9600480360360408110156108c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061297f565b604051808215151515815260200191505060405180910390f35b6109946004803603604081101561092957600080fd5b810190808035906020019064010000000081111561094657600080fd5b82018360208201111561095857600080fd5b8035906020019184602083028401116401000000008311171561097a57600080fd5b909192939192939080359060200190929190505050612ca0565b005b6109e2600480360360408110156109ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613150565b604051808215151515815260200191505060405180910390f35b610a04613426565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610a60613470565b6040518082815260200191505060405180910390f35b610aa260048036036020811015610a8c57600080fd5b810190808035906020019092919050505061347f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b1060048036036020811015610afa57600080fd5b81019080803590602001909291905050506134d7565b6040518082815260200191505060405180910390f35b610b2e613500565b604051808260ff1660ff16815260200191505060405180910390f35b610b7660048036036020811015610b6057600080fd5b810190808035906020019092919050505061352b565b604051808215151515815260200191505060405180910390f35b610bbc60048036036020811015610ba657600080fd5b81019080803590602001909291905050506136d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600201600083815260200190815260200160002060030160009054906101000a900460ff169050919050565b6000600880549050905090565b60405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f6164645573657228616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120181881565b7f414e3a2f2f6f7267616e697a6174696f6e732f6465706172746d656e7473000081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ddf5760009050611031565b600973__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610e6557600080fd5b505af4158015610e79573d6000803e3d6000fd5b505050506040513d6020811015610e8f57600080fd5b810190808051906020019092919050505061102c57600973__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918460016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015610f3757600080fd5b505af4158015610f4b573d6000803e3d6000fd5b505050506040513d6020811015610f6157600080fd5b8101908080519060200190929190505050507f414e3a2f2f6f7267616e697a6174696f6e732f757365727300000000000000007fb6505e14cf9e15754afd2220d62daf87943177c016bd4c031c6ee578e02242263084604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a25b600190505b919050565b7f414e3a2f2f6465706172746d656e74732f75736572730000000000000000000081565b6000600960010180549050905090565b6000600160006003811061107a57fe5b602091828204019190069054906101000a900460ff16905090565b600061118a60016003806020026040519081016040528092919082600380156110f9576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116110c25790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561114457600080fd5b505afa158015611158573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561117d57600080fd5b81019080919050506137a0565b9050919050565b600060036002016000838152602001908152602001600020600101600101805490509050919050565b7f414e3a2f2f6f7267616e697a6174696f6e732f617070726f766572730000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600880548060200260200160405190810160405280929190818152602001828054801561127a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611230575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091336040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015611320578082015181840152602081019050611305565b50505050905001935050505060206040518083038186803b15801561134457600080fd5b505af4158015611358573d6000803e3d6000fd5b505050506040513d602081101561136e57600080fd5b810190808051906020019092919050505015611388613853565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156113e95780820151818401526020810190506113ce565b50505050905090810190601f1680156114165780820380516001836020036101000a031916815260200191505b5084810383526027815260200180613eb2602791396040018481038252603d815260200180613e75603d91396040019550505050505060006040518083038186803b15801561146457600080fd5b505af4158015611478573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6001600880549050146114a7613890565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156115085780820151818401526020810190506114ed565b50505050905090810190601f1680156115355780820380516001836020036101000a031916815260200191505b5084810383526022815260200180613dd6602291396040018481038252602a815260200180613d87602a91396040019550505050505060006040518083038186803b15801561158357600080fd5b505af4158015611597573d6000803e3d6000fd5b50505050600080600091505b600880549050821015611630578273ffffffffffffffffffffffffffffffffffffffff16600883815481106115d457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561162357819050611630565b81806001019250506115a3565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000831480156116bd57508473ffffffffffffffffffffffffffffffffffffffff166008848154811061167957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6116c56138cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561172657808201518184015260208101905061170b565b50505050905090810190601f1680156117535780820380516001836020036101000a031916815260200191505b5084810383526022815260200180613dd6602291396040018481038252602b815260200180613df8602b91396040019550505050505060006040518083038186803b1580156117a157600080fd5b505af41580156117b5573d6000803e3d6000fd5b505050508091505b60016008805490500382101561186a57600860018301815481106117dd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008838154811061181557fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081806001019250506117bd565b600880548091906001900361187f9190613b6b565b507f414e3a2f2f6f7267616e697a6174696f6e732f617070726f76657273000000007f2cf132ce6c54465a99f715280ce5c867d610d70c4ac532ad30994de8f33dfa5860003086604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b7f414e3a2f2f6f7267616e697a6174696f6e2d6163636f756e747300000000000081565b6000600360010154905090565b61197f613b97565b60016003806020026040519081016040528092919082600380156119de576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116119a75790505b5050505050905090565b6000600180600381106119f757fe5b602091828204019190069054906101000a900460ff16905090565b6000611a816001600380602002604051908101604052809291908260038015611a76576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411611a3f5790505b5050505050836137a0565b9050919050565b60006003600201600083815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611b2757600080fd5b505af4158015611b3b573d6000803e3d6000fd5b505050506040513d6020811015611b5157600080fd5b810190808051906020019092919050505015611d12576003600201600083815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__635345ad6b9091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611c0457600080fd5b505af4158015611c18573d6000803e3d6000fd5b505050506040513d6020811015611c2e57600080fd5b8101908080519060200190929190505050507f414e3a2f2f6465706172746d656e74732f7573657273000000000000000000007f08576bd45480f28cba07c5ddf514141424b64ce76355d6847109def4ca48090b6000308587604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a260019050611d17565b600090505b92915050565b60006003600201600084815260200190815260200160002060010160010180549050821015611d9f57600360020160008481526020019081526020016000206001016001018281548110611d6d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611da4565b600090505b92915050565b600080611db56120b5565b905060088054905091509091565b7f414e3a2f2f6f7267616e697a6174696f6e732f7573657273000000000000000081565b600080600090505b6003800180549050811015611e35576000600380018281548110611e0f57fe5b90600052602060002001549050611e268482611a88565b50508080600101915050611def565b50600973__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611ebc57600080fd5b505af4158015611ed0573d6000803e3d6000fd5b505050506040513d6020811015611ee657600080fd5b81019080805190602001909291905050501561208857600973__$5e3d4bda46c81e962f48c99e99f980d175$__635345ad6b9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611f8257600080fd5b505af4158015611f96573d6000803e3d6000fd5b505050506040513d6020811015611fac57600080fd5b8101908080519060200190929190505050507f414e3a2f2f6f7267616e697a6174696f6e732f757365727300000000000000007fb217f8ae99b8b240fc28a5281349f7a1d4d460ee3dc7c6d2ca14a57508f704d360003085604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a26001905061208d565b600090505b919050565b60006003800182815481106120a357fe5b90600052602060002001549050919050565b600030604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140191505060405160208183030381529060405280519060200120905090565b60006003600201600083815260200190815260200160002060030160009054906101000a900460ff1615612149576000905061229e565b600160038001839080600181540180825580915050906001820390600052602060002001600090919290919091505503600360020160008481526020019081526020016000206004018190555081600360020160008481526020019081526020016000206000018190555060016003600201600084815260200190815260200160002060030160006101000a81548160ff0219169083151502179055507f414e3a2f2f6f7267616e697a6174696f6e732f6465706172746d656e747300007f4aa55961b303da16fc3bfd04cb7dfd9cab19a33c009b69c88f26aed05704ae1e30846003600201600087815260200190815260200160002060010160010180549050604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2600190505b919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600880548060200260200160405190810160405280929190818152602001828054801561233f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122f5575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091336040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156123e55780820151818401526020810190506123ca565b50505050905001935050505060206040518083038186803b15801561240957600080fd5b505af415801561241d573d6000803e3d6000fd5b505050506040513d602081101561243357600080fd5b81019080805190602001909291905050501561244d613853565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156124ae578082015181840152602081019050612493565b50505050905090810190601f1680156124db5780820380516001836020036101000a031916815260200191505b5084810383526027815260200180613eb2602791396040018481038252603d815260200180613e75603d91396040019550505050505060006040518083038186803b15801561252957600080fd5b505af415801561253d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461259361390a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156125f45780820151818401526020810190506125d9565b50505050905090810190601f1680156126215780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c744f7267616e697a6174696f6e2e616464417070726f7665720081525060200184810382526025815260200180613db1602591396040019550505050505060006040518083038186803b15801561268c57600080fd5b505af41580156126a0573d6000803e3d6000fd5b5050505060008090505b60088054905081101561285d5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8373ffffffffffffffffffffffffffffffffffffffff16600884815481106126f557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461273f613947565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156127a0578082015181840152602081019050612785565b50505050905090810190601f1680156127cd5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c744f7267616e697a6174696f6e2e616464417070726f7665720081525060200184810382526023815260200180613e23602391396040019550505050505060006040518083038186803b15801561283857600080fd5b505af415801561284c573d6000803e3d6000fd5b5050505080806001019150506126aa565b5060088190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f414e3a2f2f6f7267616e697a6174696f6e732f617070726f76657273000000007f2376739f82c5284bdedea511cf336c01d8988260cd7a12a37f1af592e9e695e23083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a250565b600080600083146129905782612997565b6003600101545b90506003600201600082815260200190815260200160002060030160009054906101000a900460ff1615806129f85750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b15612a07576000915050612c9a565b612a1084610da0565b506003600201600082815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015612aae57600080fd5b505af4158015612ac2573d6000803e3d6000fd5b505050506040513d6020811015612ad857600080fd5b8101908080519060200190929190505050612c94576003600201600082815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918660016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015612b9757600080fd5b505af4158015612bab573d6000803e3d6000fd5b505050506040513d6020811015612bc157600080fd5b8101908080519060200190929190505050507f414e3a2f2f6465706172746d656e74732f7573657273000000000000000000007f6bb888167384334fdaf5ee77aa1cec98e9adedeef5da14d4c1b424d5637e0430308387604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a25b60019150505b92915050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900460ff16612cd2613984565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612d33578082015181840152602081019050612d18565b50505050905090810190601f168015612d605780820380516001836020036101000a031916815260200191505b508481038352602a815260200180613d34602a913960400184810382526029815260200180613d5e602991396040019550505050505060006040518083038186803b158015612dae57600080fd5b505af4158015612dc2573d6000803e3d6000fd5b505050506000838390501415612e3d5760083390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612e50565b828260089190612e4e929190613bb9565b505b60008114612e675780600360010181905550612e92565b7f44454641554c545f4445504152544d454e5400000000000000000000000000006003600101819055505b612ea0600360010154612112565b50612f8060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f616464557365722861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012018186139c1565b7f414e3a2f2f6f7267616e697a6174696f6e2d6163636f756e74730000000000007ff66dbeea7131a44f4ebf92a0c38c0982529c2b2258f99040ba8c566c78cef34b30600880549050612fd16120b5565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260008090505b60088054905081101561312f577f414e3a2f2f6f7267616e697a6174696f6e732f617070726f76657273000000007f2376739f82c5284bdedea511cf336c01d8988260cd7a12a37f1af592e9e695e2306008848154811061308357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a28080600101915050613026565b506001600260006101000a81548160ff021916908315150217905550505050565b600061315a6120b5565b82141561322957600973__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156131e757600080fd5b505af41580156131fb573d6000803e3d6000fd5b505050506040513d602081101561321157600080fd5b81019080805190602001909291905050509050613420565b600082148061325c57506003600201600083815260200190815260200160002060030160009054906101000a900460ff16155b156133455760036002016000600360010154815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561330357600080fd5b505af4158015613317573d6000803e3d6000fd5b505050506040513d602081101561332d57600080fd5b81019080805190602001909291905050509050613420565b6003600201600083815260200190815260200160002060010173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156133e257600080fd5b505af41580156133f6573d6000803e3d6000fd5b505050506040513d602081101561340c57600080fd5b810190808051906020019092919050505090505b92915050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006003800180549050905090565b60006008805490508210156134cd576008828154811061349b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506134d2565b600090505b919050565b600060036002016000838152602001908152602001600020600101600101805490509050919050565b6000600160026003811061351057fe5b602091828204019190069054906101000a900460ff16905090565b60006003600201600083815260200190815260200160002060030160009054906101000a900460ff16801561356557506003600101548214155b156136ce5760006003600201600084815260200190815260200160002060040154905060006135976003800183613aac565b9050600081146135d957600360020160008581526020019081526020016000206004015460036002016000838152602001908152602001600020600401819055505b6003600201600085815260200190815260200160002060008082016000905560018201600060018201600061360e9190613c59565b50506003820160006101000a81549060ff0219169055600482016000905550507f414e3a2f2f6f7267616e697a6174696f6e732f6465706172746d656e747300007fe665ba9c1a1db43ec50a686024b19d956ff6283b84b03450815011382610b87260003087604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a26001925050506136d3565b600090505b919050565b6000600960010180549050821015613796576000600973__$5e3d4bda46c81e962f48c99e99f980d175$__6380ed56bd9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561374557600080fd5b505af4158015613759573d6000803e3d6000fd5b505050506040513d604081101561376f57600080fd5b8101908080519060200190929190805190602001909291905050509150508091505061379b565b600090505b919050565b60006137ce836000600381106137b257fe5b6020020151836000600381106137c457fe5b6020020151613b11565b9050600081146137e05780905061384d565b61380c836001600381106137f057fe5b60200201518360016003811061380257fe5b6020020151613b11565b90506000811461381e5780905061384d565b61384a8360026003811061382e57fe5b60200201518360026003811061384057fe5b6020020151613b11565b90505b92915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415613a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613e46602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060018480549050039050808314613af557838181548110613acc57fe5b9060005260206000200154915081848481548110613ae657fe5b90600052602060002001819055505b83805480919060019003613b099190613c7a565b505092915050565b60008260ff168260ff161415613b2a5760009050613b65565b8260ff168260ff161015613b60577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050613b65565b600190505b92915050565b815481835581811115613b9257818360005260206000209182019101613b919190613ca6565b5b505050565b6040518060600160405280600390602082028038833980820191505090505090565b828054828255906000526020600020908101928215613c48579160200282015b82811115613c4757823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613bd9565b5b509050613c559190613ccb565b5090565b5080546000825590600052602060002090810190613c779190613ca6565b50565b815481835581811115613ca157818360005260206000209182019101613ca09190613d0e565b5b505050565b613cc891905b80821115613cc4576000816000905550600101613cac565b5090565b90565b613d0b91905b80821115613d0757600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101613cd1565b5090565b90565b613d3091905b80821115613d2c576000816000905550600101613d14565b5090565b9056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6554686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a65644f7267616e697a6174696f6e206d7573742068617665206174206c65617374203120617070726f76657243616e6e6f742061646420656d707479206164647265737320746f20617070726f7665727344656661756c744f7267616e697a6174696f6e2e72656d6f7665417070726f76657241646472657373206e6f7420666f756e6420696e206f7267616e697a6174696f6e20617070726f766572734164647265737320616c72656164792065786973747320696e20617070726f76657273466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e746572666163656d73672e73656e64657220697374206e6f742061207265636f676e697a656420617070726f766572206f662074686973206f7267616e697a6174696f6e44656661756c744f7267616e697a6174696f6e2e7072655f6f6e6c794279417070726f76657273a265627a7a723158203ca27b622a8e0c23f26e7b94905044eb026cc176d5f7db60ed570c3348b00c7b64736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => {
            client.deploy(payload, (err, addr) => {
                if (err)
                    reject(err);
                else {
                    const address = Buffer.from(addr).toString("hex").toUpperCase();
                    resolve(address);
                }
            });
        });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogDepartmentUserRemoval(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDepartmentUserRemoval", this.address, callback); }
        LogDepartmentUserUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDepartmentUserUpdate", this.address, callback); }
        LogOrganizationApproverRemoval(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationApproverRemoval", this.address, callback); }
        LogOrganizationApproverUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationApproverUpdate", this.address, callback); }
        LogOrganizationCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationCreation", this.address, callback); }
        LogOrganizationDepartmentRemoval(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationDepartmentRemoval", this.address, callback); }
        LogOrganizationDepartmentUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationDepartmentUpdate", this.address, callback); }
        LogOrganizationUserRemoval(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationUserRemoval", this.address, callback); }
        LogOrganizationUserUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOrganizationUserUpdate", this.address, callback); }
        ERC165_ID_Organization() {
            const data = Encode(this.client).ERC165_ID_Organization();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Organization();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_ID_DEPARTMENT_USERS() {
            const data = Encode(this.client).EVENT_ID_DEPARTMENT_USERS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DEPARTMENT_USERS();
            });
        }
        EVENT_ID_ORGANIZATION_ACCOUNTS() {
            const data = Encode(this.client).EVENT_ID_ORGANIZATION_ACCOUNTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ORGANIZATION_ACCOUNTS();
            });
        }
        EVENT_ID_ORGANIZATION_APPROVERS() {
            const data = Encode(this.client).EVENT_ID_ORGANIZATION_APPROVERS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ORGANIZATION_APPROVERS();
            });
        }
        EVENT_ID_ORGANIZATION_DEPARTMENTS() {
            const data = Encode(this.client).EVENT_ID_ORGANIZATION_DEPARTMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ORGANIZATION_DEPARTMENTS();
            });
        }
        EVENT_ID_ORGANIZATION_USERS() {
            const data = Encode(this.client).EVENT_ID_ORGANIZATION_USERS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ORGANIZATION_USERS();
            });
        }
        addApprover(_userAccount: string) {
            const data = Encode(this.client).addApprover(_userAccount);
            return Call<Tx, void>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).addApprover();
            });
        }
        addDepartment(_id: Buffer) {
            const data = Encode(this.client).addDepartment(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).addDepartment();
            });
        }
        addUser(_userAccount: string) {
            const data = Encode(this.client).addUser(_userAccount);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).addUser();
            });
        }
        addUserToDepartment(_userAccount: string, _department: Buffer) {
            const data = Encode(this.client).addUserToDepartment(_userAccount, _department);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).addUserToDepartment();
            });
        }
        authorizeUser(_userAccount: string, _department: Buffer) {
            const data = Encode(this.client).authorizeUser(_userAccount, _department);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).authorizeUser();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        departmentExists(_id: Buffer) {
            const data = Encode(this.client).departmentExists(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).departmentExists();
            });
        }
        getApproverAtIndex(_pos: number) {
            const data = Encode(this.client).getApproverAtIndex(_pos);
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getApproverAtIndex();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getDefaultDepartmentId() {
            const data = Encode(this.client).getDefaultDepartmentId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDefaultDepartmentId();
            });
        }
        getDepartmentAtIndex(_index: number) {
            const data = Encode(this.client).getDepartmentAtIndex(_index);
            return Call<Tx, {
                id: Buffer;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentAtIndex();
            });
        }
        getDepartmentData(_id: Buffer) {
            const data = Encode(this.client).getDepartmentData(_id);
            return Call<Tx, {
                userCount: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentData();
            });
        }
        getDepartmentUserAtIndex(_depId: Buffer, _index: number) {
            const data = Encode(this.client).getDepartmentUserAtIndex(_depId, _index);
            return Call<Tx, {
                userAccount: string;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentUserAtIndex();
            });
        }
        getNumberOfApprovers() {
            const data = Encode(this.client).getNumberOfApprovers();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfApprovers();
            });
        }
        getNumberOfDepartmentUsers(_depId: Buffer) {
            const data = Encode(this.client).getNumberOfDepartmentUsers(_depId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartmentUsers();
            });
        }
        getNumberOfDepartments() {
            const data = Encode(this.client).getNumberOfDepartments();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartments();
            });
        }
        getNumberOfUsers() {
            const data = Encode(this.client).getNumberOfUsers();
            return Call<Tx, [number]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfUsers();
            });
        }
        getOrganizationDetails() {
            const data = Encode(this.client).getOrganizationDetails();
            return Call<Tx, {
                numberOfApprovers: number;
                organizationKey: Buffer;
            }>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationDetails();
            });
        }
        getOrganizationKey() {
            const data = Encode(this.client).getOrganizationKey();
            return Call<Tx, [Buffer]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationKey();
            });
        }
        getUserAtIndex(_pos: number) {
            const data = Encode(this.client).getUserAtIndex(_pos);
            return Call<Tx, [string]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAtIndex();
            });
        }
        initialize(_initialApprovers: string[], _defaultDepartmentId: Buffer) {
            const data = Encode(this.client).initialize(_initialApprovers, _defaultDepartmentId);
            return Call<Tx, void>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        removeApprover(_userAccount: string) {
            const data = Encode(this.client).removeApprover(_userAccount);
            return Call<Tx, void>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeApprover();
            });
        }
        removeDepartment(_depId: Buffer) {
            const data = Encode(this.client).removeDepartment(_depId);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeDepartment();
            });
        }
        removeUser(_userAccount: string) {
            const data = Encode(this.client).removeUser(_userAccount);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeUser();
            });
        }
        removeUserFromDepartment(_userAccount: string, _depId: Buffer) {
            const data = Encode(this.client).removeUserFromDepartment(_userAccount, _depId);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeUserFromDepartment();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_Organization: () => { return client.encode("3657DB17", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_ID_DEPARTMENT_USERS: () => { return client.encode("4374FCF8", []); },
        EVENT_ID_ORGANIZATION_ACCOUNTS: () => { return client.encode("6E40C2ED", []); },
        EVENT_ID_ORGANIZATION_APPROVERS: () => { return client.encode("669E9E23", []); },
        EVENT_ID_ORGANIZATION_DEPARTMENTS: () => { return client.encode("3E21A8D9", []); },
        EVENT_ID_ORGANIZATION_USERS: () => { return client.encode("94D42FC2", []); },
        addApprover: (_userAccount: string) => { return client.encode("B646C194", ["address"], _userAccount); },
        addDepartment: (_id: Buffer) => { return client.encode("B2E30DDF", ["bytes32"], _id); },
        addUser: (_userAccount: string) => { return client.encode("421B2D8B", ["address"], _userAccount); },
        addUserToDepartment: (_userAccount: string, _department: Buffer) => { return client.encode("B68B5F6C", ["address", "bytes32"], _userAccount, _department); },
        authorizeUser: (_userAccount: string, _department: Buffer) => { return client.encode("DDC5DD51", ["address", "bytes32"], _userAccount, _department); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        departmentExists: (_id: Buffer) => { return client.encode("20FEABBA", ["bytes32"], _id); },
        getApproverAtIndex: (_pos: number) => { return client.encode("EA415CFD", ["uint256"], _pos); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getDefaultDepartmentId: () => { return client.encode("6FA02737", []); },
        getDepartmentAtIndex: (_index: number) => { return client.encode("AAA8282B", ["uint256"], _index); },
        getDepartmentData: (_id: Buffer) => { return client.encode("F06E141E", ["bytes32"], _id); },
        getDepartmentUserAtIndex: (_depId: Buffer, _index: number) => { return client.encode("81B05199", ["bytes32", "uint256"], _depId, _index); },
        getNumberOfApprovers: () => { return client.encode("35E07244", []); },
        getNumberOfDepartmentUsers: (_depId: Buffer) => { return client.encode("6371E7B4", ["bytes32"], _depId); },
        getNumberOfDepartments: () => { return client.encode("E94E9888", []); },
        getNumberOfUsers: () => { return client.encode("4D009288", []); },
        getOrganizationDetails: () => { return client.encode("89C9E2EF", []); },
        getOrganizationKey: () => { return client.encode("ABD67A7E", []); },
        getUserAtIndex: (_pos: number) => { return client.encode("FFCC7BBF", ["uint256"], _pos); },
        initialize: (_initialApprovers: string[], _defaultDepartmentId: Buffer) => { return client.encode("D44A9341", ["address[]", "bytes32"], _initialApprovers, _defaultDepartmentId); },
        removeApprover: (_userAccount: string) => { return client.encode("6CF4C88F", ["address"], _userAccount); },
        removeDepartment: (_depId: Buffer) => { return client.encode("FBE620A7", ["bytes32"], _depId); },
        removeUser: (_userAccount: string) => { return client.encode("98575188", ["address"], _userAccount); },
        removeUserFromDepartment: (_userAccount: string, _depId: Buffer) => { return client.encode("7E047585", ["address", "bytes32"], _userAccount, _depId); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_Organization: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_ID_DEPARTMENT_USERS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ORGANIZATION_ACCOUNTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ORGANIZATION_APPROVERS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ORGANIZATION_DEPARTMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ORGANIZATION_USERS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addApprover: (): void => { return; },
        addDepartment: (): [boolean] => { return client.decode(data, ["bool"]); },
        addUser: (): [boolean] => { return client.decode(data, ["bool"]); },
        addUserToDepartment: (): [boolean] => { return client.decode(data, ["bool"]); },
        authorizeUser: (): [boolean] => { return client.decode(data, ["bool"]); },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        departmentExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        getApproverAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getDefaultDepartmentId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDepartmentAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = client.decode(data, ["bytes32"]);
            return { id: id };
        },
        getDepartmentData: (): {
            userCount: number;
        } => {
            const [userCount] = client.decode(data, ["uint256"]);
            return { userCount: userCount };
        },
        getDepartmentUserAtIndex: (): {
            userAccount: string;
        } => {
            const [userAccount] = client.decode(data, ["address"]);
            return { userAccount: userAccount };
        },
        getNumberOfApprovers: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfDepartmentUsers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfDepartments: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfUsers: (): [number] => { return client.decode(data, ["uint256"]); },
        getOrganizationDetails: (): {
            numberOfApprovers: number;
            organizationKey: Buffer;
        } => {
            const [numberOfApprovers, organizationKey] = client.decode(data, ["uint256", "bytes32"]);
            return { numberOfApprovers: numberOfApprovers, organizationKey: organizationKey };
        },
        getOrganizationKey: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getUserAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        initialize: (): void => { return; },
        removeApprover: (): void => { return; },
        removeDepartment: (): [boolean] => { return client.decode(data, ["bool"]); },
        removeUser: (): [boolean] => { return client.decode(data, ["bool"]); },
        removeUserFromDepartment: (): [boolean] => { return client.decode(data, ["bool"]); },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); }
    }; };
}