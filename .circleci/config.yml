defaults: &defaults
  docker:
    - image: quay.io/monax/build:latest
  working_directory: ~/blackstone
  environment:
    IMAGE_API: quay.io/monax/blackstone

version: 2
jobs:
  cache_contracts:
    <<: *defaults
    steps:
      - checkout
      - run: burrow deploy --file build.yaml --dir ./contracts/src
      - persist_to_workspace:
          root: ./contracts/src/
          paths:
            - bin
  cache_api:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - api-{{ checksum "api/package-lock.json" }}
            - api
      - run:
          name: Install npm
          command: |
            cd ./api/
            npm install
      - save_cache:
          key: api-{{ checksum "api/package-lock.json" }}
          paths:
            - api/node_modules/
      - persist_to_workspace:
          root: ./api/
          paths:
            - node_modules
            - sqlsol
  test_contracts:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: contracts/src
      - run: ./test/test_contracts.sh
      - store_artifacts:
          path: ./burrow.log
      - store_artifacts:
          path: ./test-contracts-jobs.log
      - store_artifacts:
          path: ./test-contracts.log
  test_api:
    docker:
      - image: quay.io/monax/build:latest
      - image: quay.io/monax/hoard:1.1.3
        name: hoard
      - image: postgres:9-alpine
        name: postgres
        environment:
          POSTGRES_USER: blackstone_development
          POSTGRES_PASSWORD: blackstone_development
    working_directory: ~/blackstone
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run: |
          mv /tmp/bin ./contracts/src/.
          mv /tmp/node_modules ./api/.
      - run: ./test/test_api.sh
      - store_artifacts:
          path: ./burrow.log
  deploy_docs:
    <<: *defaults
    steps:
      - checkout
      - &add_ssh_key
        add_ssh_keys:
          fingerprints:
            - "5e:f3:47:75:34:c7:83:93:51:48:31:6a:3a:1a:de:85"
      - run: ./docs/generate.sh
  deploy_platform:
    docker:
      - image: appropriate/curl
    steps:
      - run:
          name: Trigger upgrade
          command: |
            set -x
            curl \
              --request POST \
              --form token=$PLATFORM_DEPLOY_KEY \
              --form ref=master \
              --form "variables[BUILD_REFSPEC]=$CIRCLE_BRANCH" \
              $PLATFORM_DEPLOY_URL/trigger/pipeline
  update_info:
    docker:
      - image: alpine/git
    environment:
      CHAIN_INFO: "t5"
      CHAIN_INFO_HOST: "info.agreements.network"
    steps:
      - checkout
      - <<: *add_ssh_key
      - attach_workspace:
          at: /tmp
      - run:
          name: "Update AN Info"
          command: |
            if [ $CIRCLE_BRANCH != "master" ]; then CHAIN_INFO="${CHAIN_INFO}-dev"; fi
            CHAIN_OUT_DIR="${CHAIN_INFO_HOST}/${CHAIN_INFO}"
            CHAIN_INFO_URL="https://${CHAIN_INFO_HOST}/${CHAIN_INFO}"
            git config --global user.name "Billings, a Bot"
            git config --global user.email "billings@monax.io"
            git clone git@github.com:agreements-network/info $CHAIN_INFO_HOST
            mkdir -p ${CHAIN_OUT_DIR}
            mkdir -p ${CHAIN_OUT_DIR}/abi
            mkdir -p ${CHAIN_OUT_DIR}/specs
            while read -r abi; do
              echo "${CHAIN_INFO_URL}/abi/${abi}.bin" >> ${CHAIN_OUT_DIR}/abi-new.csv
              mv /tmp/bin/${abi}.bin ${CHAIN_OUT_DIR}/abi/.
            done < /tmp/bin/abi.csv
            mv ${CHAIN_OUT_DIR}/abi-new.csv ${CHAIN_OUT_DIR}/abi.csv
            for spec in /tmp/sqlsol/*; do
              mv $spec ${CHAIN_OUT_DIR}/specs/.
            done
            cd ${CHAIN_INFO_HOST}
            git add -A :/
            git commit -m "Automatic info generation from AN build on `date`" || true
            git push
            sleep 60 # allow time for GH pages to render

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - cache_contracts
      - cache_api
      - test_contracts:
          requires:
            - cache_contracts
      - test_api:
          requires:
            - cache_api
            - cache_contracts
      - deploy_docs:
          filters:
            branches:
              only:
                - master
      - update_info:
          requires:
            - test_api
            - test_contracts
          filters:
            branches:
              only:
                - master
                - develop
      - deploy_platform:
          requires:
            - test_api
            - test_contracts
            - update_info
          filters:
            branches:
              only:
                - master
                - develop
