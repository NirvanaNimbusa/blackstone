jobs:

#####
# Retrieve DOUG
#####
- name: DOUG
  query-name:
      name: DOUG
      field: data

#####
# Retrieve Library Addresses
#####
- name: ErrorsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookupContract
    data: [ErrorsLib]

- name: TypeUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookupContract
    data: [TypeUtils]

- name: ArrayUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookupContract
    data: [ArrayUtils]

- name: MappingsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookupContract
    data: [MappingsLib]

#####
# Ecosystem
#####
- name: EcosystemRegistry
  deploy:
    contract: DefaultEcosystemRegistry.bin
    libraries: ErrorsLib:$ErrorsLib, MappingsLib:$MappingsLib

- name: EcosystemRegistryDb
  deploy:
    contract: EcosystemRegistryDb.bin
    libraries: ErrorsLib:$ErrorsLib, MappingsLib:$MappingsLib

- name: ChangeEcosystemRegistryDbOwnership
  call:
    destination: $EcosystemRegistryDb
    bin: EcosystemRegistryDb
    function: transferSystemOwnership
    data: [$EcosystemRegistry]

- name: SetEcosystemRegistryDb
  call:
    destination: $EcosystemRegistry
    bin: DefaultEcosystemRegistry
    function: acceptDatabase
    data: [$EcosystemRegistryDb]

- name: AssertEcosystemRegistryDb
  assert:
    key: $SetEcosystemRegistryDb
    relation: eq
    val: "true"

- name: ChangeEcosystemRegistryUpgradeOwnership
  call:
    destination: $EcosystemRegistry
    bin: UpgradeOwned
    function: transferUpgradeOwnership
    data: [$DOUG]

- name: DeployEcosystemRegistry
  call:
    destination: $DOUG
    bin: DOUG
    function: deployContract
    data: [EcosystemRegistry, $EcosystemRegistry]

- name: AssertEcosystemRegistry
  assert:
    key: $DeployEcosystemRegistry
    relation: eq
    val: "true"

#####
# ParticipantsManager
#####
- name: ParticipantsManager
  deploy:
    contract: DefaultParticipantsManager.bin
    libraries: ErrorsLib:$ErrorsLib, TypeUtilsAPI:$TypeUtils, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib

- name: ParticipantsManagerDb
  deploy:
    contract: ParticipantsManagerDb.bin
    libraries: ErrorsLib:$ErrorsLib, TypeUtilsAPI:$TypeUtils, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib

- name: ChangeParticipantsManagerDbOwnership
  call:
    destination: $ParticipantsManagerDb
    bin: ParticipantsManagerDb
    function: transferSystemOwnership
    data: [$ParticipantsManager]

- name: SetParticipantsManagerDb
  call:
    destination: $ParticipantsManager
    bin: DefaultParticipantsManager
    function: acceptDatabase
    data: [$ParticipantsManagerDb]

- name: AssertParticipantsManagerDb
  assert:
    key: $SetParticipantsManagerDb
    relation: eq
    val: "true"

- name: ChangeParticipantsManagerUpgradeOwnership
  call:
    destination: $ParticipantsManager
    bin: UpgradeOwned
    function: transferUpgradeOwnership
    data: [$DOUG]

- name: DeployParticipantsManager
  call:
    destination: $DOUG
    bin: DOUG
    function: deployContract
    data: [ParticipantsManager, $ParticipantsManager]

- name: AssertParticipantsManager
  assert:
    key: $DeployParticipantsManager
    relation: eq
    val: "true"
